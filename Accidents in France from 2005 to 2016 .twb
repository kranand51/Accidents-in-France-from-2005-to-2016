<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook original-version='10.5' source-build='10.5.1 (10500.18.0210.2209)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='caracteristics+' inline='true' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='caracteristics' name='textscan.00yaih30c45pyg18zqtp30ubl5gi'>
            <connection class='textscan' directory='C:/Users/akum93/Downloads/accidents-in-france-from-2005-to-2016' filename='caracteristics.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[caracteristics.csv].[Num_Acc]' />
              <expression op='[vehicles.csv].[Num_Acc]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[caracteristics.csv].[Num_Acc]' />
                <expression op='[users.csv].[Num_Acc]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[caracteristics.csv].[Num_Acc]' />
                  <expression op='[places.csv].[Num_Acc]' />
                </expression>
              </clause>
              <relation connection='textscan.00yaih30c45pyg18zqtp30ubl5gi' name='caracteristics.csv' table='[caracteristics#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Num_Acc' ordinal='0' />
                  <column datatype='integer' name='an' ordinal='1' />
                  <column datatype='integer' name='mois' ordinal='2' />
                  <column datatype='integer' name='jour' ordinal='3' />
                  <column datatype='integer' name='hrmn' ordinal='4' />
                  <column datatype='integer' name='lum' ordinal='5' />
                  <column datatype='integer' name='agg' ordinal='6' />
                  <column datatype='integer' name='int' ordinal='7' />
                  <column datatype='integer' name='atm' ordinal='8' />
                  <column datatype='integer' name='col' ordinal='9' />
                  <column datatype='integer' name='com' ordinal='10' />
                  <column datatype='string' name='adr' ordinal='11' />
                  <column datatype='string' name='gps' ordinal='12' />
                  <column datatype='integer' name='lat' ordinal='13' />
                  <column datatype='integer' name='long' ordinal='14' />
                  <column datatype='integer' name='dep' ordinal='15' />
                </columns>
              </relation>
              <relation connection='textscan.00yaih30c45pyg18zqtp30ubl5gi' name='places.csv' table='[places#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Num_Acc' ordinal='0' />
                  <column datatype='integer' name='catr' ordinal='1' />
                  <column datatype='integer' name='voie' ordinal='2' />
                  <column datatype='string' name='v1' ordinal='3' />
                  <column datatype='string' name='v2' ordinal='4' />
                  <column datatype='integer' name='circ' ordinal='5' />
                  <column datatype='integer' name='nbv' ordinal='6' />
                  <column datatype='string' name='pr' ordinal='7' />
                  <column datatype='string' name='pr1' ordinal='8' />
                  <column datatype='integer' name='vosp' ordinal='9' />
                  <column datatype='integer' name='prof' ordinal='10' />
                  <column datatype='integer' name='plan' ordinal='11' />
                  <column datatype='integer' name='lartpc' ordinal='12' />
                  <column datatype='integer' name='larrout' ordinal='13' />
                  <column datatype='integer' name='surf' ordinal='14' />
                  <column datatype='integer' name='infra' ordinal='15' />
                  <column datatype='integer' name='situ' ordinal='16' />
                  <column datatype='integer' name='env1' ordinal='17' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.00yaih30c45pyg18zqtp30ubl5gi' name='users.csv' table='[users#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='Num_Acc' ordinal='0' />
                <column datatype='string' name='place' ordinal='1' />
                <column datatype='integer' name='catu' ordinal='2' />
                <column datatype='integer' name='grav' ordinal='3' />
                <column datatype='integer' name='sexe' ordinal='4' />
                <column datatype='integer' name='trajet' ordinal='5' />
                <column datatype='string' name='secu' ordinal='6' />
                <column datatype='integer' name='locp' ordinal='7' />
                <column datatype='integer' name='actp' ordinal='8' />
                <column datatype='integer' name='etatp' ordinal='9' />
                <column datatype='integer' name='an_nais' ordinal='10' />
                <column datatype='string' name='num_veh' ordinal='11' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.00yaih30c45pyg18zqtp30ubl5gi' name='vehicles.csv' table='[vehicles#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Num_Acc' ordinal='0' />
              <column datatype='integer' name='senc' ordinal='1' />
              <column datatype='integer' name='catv' ordinal='2' />
              <column datatype='integer' name='occutc' ordinal='3' />
              <column datatype='integer' name='obs' ordinal='4' />
              <column datatype='integer' name='obsm' ordinal='5' />
              <column datatype='integer' name='choc' ordinal='6' />
              <column datatype='integer' name='manv' ordinal='7' />
              <column datatype='string' name='num_veh' ordinal='8' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Num_Acc (places.csv)]' value='[places.csv].[Num_Acc]' />
          <map key='[Num_Acc (users.csv)]' value='[users.csv].[Num_Acc]' />
          <map key='[Num_Acc (vehicles.csv)]' value='[vehicles.csv].[Num_Acc]' />
          <map key='[Num_Acc]' value='[caracteristics.csv].[Num_Acc]' />
          <map key='[actp]' value='[users.csv].[actp]' />
          <map key='[adr]' value='[caracteristics.csv].[adr]' />
          <map key='[agg]' value='[caracteristics.csv].[agg]' />
          <map key='[an]' value='[caracteristics.csv].[an]' />
          <map key='[an_nais]' value='[users.csv].[an_nais]' />
          <map key='[atm]' value='[caracteristics.csv].[atm]' />
          <map key='[catr]' value='[places.csv].[catr]' />
          <map key='[catu]' value='[users.csv].[catu]' />
          <map key='[catv]' value='[vehicles.csv].[catv]' />
          <map key='[choc]' value='[vehicles.csv].[choc]' />
          <map key='[circ]' value='[places.csv].[circ]' />
          <map key='[col]' value='[caracteristics.csv].[col]' />
          <map key='[com]' value='[caracteristics.csv].[com]' />
          <map key='[dep]' value='[caracteristics.csv].[dep]' />
          <map key='[env1]' value='[places.csv].[env1]' />
          <map key='[etatp]' value='[users.csv].[etatp]' />
          <map key='[gps]' value='[caracteristics.csv].[gps]' />
          <map key='[grav]' value='[users.csv].[grav]' />
          <map key='[hrmn]' value='[caracteristics.csv].[hrmn]' />
          <map key='[infra]' value='[places.csv].[infra]' />
          <map key='[int]' value='[caracteristics.csv].[int]' />
          <map key='[jour]' value='[caracteristics.csv].[jour]' />
          <map key='[larrout]' value='[places.csv].[larrout]' />
          <map key='[lartpc]' value='[places.csv].[lartpc]' />
          <map key='[lat]' value='[caracteristics.csv].[lat]' />
          <map key='[locp]' value='[users.csv].[locp]' />
          <map key='[long]' value='[caracteristics.csv].[long]' />
          <map key='[lum]' value='[caracteristics.csv].[lum]' />
          <map key='[manv]' value='[vehicles.csv].[manv]' />
          <map key='[mois]' value='[caracteristics.csv].[mois]' />
          <map key='[nbv]' value='[places.csv].[nbv]' />
          <map key='[num_veh (vehicles.csv)]' value='[vehicles.csv].[num_veh]' />
          <map key='[num_veh]' value='[users.csv].[num_veh]' />
          <map key='[obs]' value='[vehicles.csv].[obs]' />
          <map key='[obsm]' value='[vehicles.csv].[obsm]' />
          <map key='[occutc]' value='[vehicles.csv].[occutc]' />
          <map key='[place]' value='[users.csv].[place]' />
          <map key='[plan]' value='[places.csv].[plan]' />
          <map key='[pr1]' value='[places.csv].[pr1]' />
          <map key='[pr]' value='[places.csv].[pr]' />
          <map key='[prof]' value='[places.csv].[prof]' />
          <map key='[secu]' value='[users.csv].[secu]' />
          <map key='[senc]' value='[vehicles.csv].[senc]' />
          <map key='[sexe]' value='[users.csv].[sexe]' />
          <map key='[situ]' value='[places.csv].[situ]' />
          <map key='[surf]' value='[places.csv].[surf]' />
          <map key='[trajet]' value='[users.csv].[trajet]' />
          <map key='[v1]' value='[places.csv].[v1]' />
          <map key='[v2]' value='[places.csv].[v2]' />
          <map key='[voie]' value='[places.csv].[voie]' />
          <map key='[vosp]' value='[places.csv].[vosp]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Num_Acc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Num_Acc]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>Num_Acc</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>an</remote-name>
            <remote-type>20</remote-type>
            <local-name>[an]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>an</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mois</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mois]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>mois</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jour]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>jour</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hrmn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hrmn]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>hrmn</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lum]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>lum</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>agg</remote-name>
            <remote-type>20</remote-type>
            <local-name>[agg]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>agg</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>int</remote-name>
            <remote-type>20</remote-type>
            <local-name>[int]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>int</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[atm]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>atm</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>col</remote-name>
            <remote-type>20</remote-type>
            <local-name>[col]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>col</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>com</remote-name>
            <remote-type>20</remote-type>
            <local-name>[com]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>com</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[adr]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>adr</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gps</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gps]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>gps</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>20</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dep</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dep]</local-name>
            <parent-name>[caracteristics.csv]</parent-name>
            <remote-alias>dep</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[places.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Num_Acc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Num_Acc (places.csv)]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>Num_Acc</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>catr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[catr]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>catr</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>voie</remote-name>
            <remote-type>20</remote-type>
            <local-name>[voie]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>voie</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[v1]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>v1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[v2]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>v2</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>circ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[circ]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>circ</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nbv</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nbv]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>nbv</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pr]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>pr</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pr1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pr1]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>pr1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vosp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[vosp]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>vosp</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prof</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prof]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>prof</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>plan</remote-name>
            <remote-type>20</remote-type>
            <local-name>[plan]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>plan</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lartpc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lartpc]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>lartpc</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>larrout</remote-name>
            <remote-type>20</remote-type>
            <local-name>[larrout]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>larrout</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>surf</remote-name>
            <remote-type>20</remote-type>
            <local-name>[surf]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>surf</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infra</remote-name>
            <remote-type>20</remote-type>
            <local-name>[infra]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>infra</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>situ</remote-name>
            <remote-type>20</remote-type>
            <local-name>[situ]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>situ</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>env1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[env1]</local-name>
            <parent-name>[places.csv]</parent-name>
            <remote-alias>env1</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[users.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Num_Acc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Num_Acc (users.csv)]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>Num_Acc</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>catu</remote-name>
            <remote-type>20</remote-type>
            <local-name>[catu]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>catu</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grav</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grav]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>grav</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sexe</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sexe]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>sexe</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trajet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trajet]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>trajet</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>secu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[secu]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>secu</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>locp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[locp]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>locp</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[actp]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>actp</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>etatp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[etatp]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>etatp</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>an_nais</remote-name>
            <remote-type>20</remote-type>
            <local-name>[an_nais]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>an_nais</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_veh</remote-name>
            <remote-type>129</remote-type>
            <local-name>[num_veh]</local-name>
            <parent-name>[users.csv]</parent-name>
            <remote-alias>num_veh</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Num_Acc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Num_Acc (vehicles.csv)]</local-name>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias>Num_Acc</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>senc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[senc]</local-name>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias>senc</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>catv</remote-name>
            <remote-type>20</remote-type>
            <local-name>[catv]</local-name>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias>catv</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occutc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[occutc]</local-name>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias>occutc</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>obs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[obs]</local-name>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias>obs</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>obsm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[obsm]</local-name>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias>obsm</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>choc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[choc]</local-name>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias>choc</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>manv</remote-name>
            <remote-type>20</remote-type>
            <local-name>[manv]</local-name>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias>manv</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_veh</remote-name>
            <remote-type>129</remote-type>
            <local-name>[num_veh (vehicles.csv)]</local-name>
            <parent-name>[vehicles.csv]</parent-name>
            <remote-alias>num_veh</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Atm (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[atm]' />
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_786722568133394432]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[an]+2000' />
      </column>
      <column caption='Month' datatype='string' name='[Calculation_786722568136507394]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [mois] =1 then &apos;Jan&apos;&#13;&#10;ELSEIF [mois] =2 then &apos;Feb&apos;&#13;&#10;ELSEIF [mois] =3 then &apos;Mar&apos;&#13;&#10;ELSEIF [mois] =4 then &apos;Apr&apos;&#13;&#10;ELSEIF [mois] =5 then &apos;May&apos;&#13;&#10;ELSEIF [mois] =6 then &apos;Jun&apos;&#13;&#10;ELSEIF [mois] =7 then &apos;Jul&apos;&#13;&#10;ELSEIF [mois] =8 then &apos;Aug&apos;&#13;&#10;ELSEIF [mois] =9 then &apos;Sep&apos;&#13;&#10;ELSEIF [mois] =10 then &apos;Oct&apos;&#13;&#10;ELSEIF [mois] =11 then &apos;Nov&apos;&#13;&#10;ELSEIF [mois] =12 then &apos;Dec&apos;&#13;&#10;end' />
      </column>
      <column aggregation='Sum' caption='Day' datatype='integer' name='[Calculation_786722568141639684]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[jour]' />
      </column>
      <column caption='Hour' datatype='string' name='[Calculation_786722568144035845]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='left(STR([hrmn]),len(str([hrmn]))-2)' />
      </column>
      <column caption='date_cal' datatype='date' name='[Calculation_786722568149909510]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(STR([mois]) + STR([jour]) + STR([an]+2000))' />
      </column>
      <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
      </column>
      <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
      </column>
      <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
      </column>
      <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
      </column>
      <column caption='Traffic regime' datatype='string' name='[Calculation_786722568167661579]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [circ] = 1 then &quot;One way&quot;&#13;&#10;elseif [circ] = 2 then &quot;Bidirectional&quot;&#13;&#10;elseif [circ] =3 then &quot;Separated carriageways&quot;&#13;&#10;elseif [circ] =4 then &quot;With variable assignment channels&quot;&#13;&#10;end' />
      </column>
      <column caption='accident site' datatype='string' name='[Calculation_786722568168550412]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [prof] = 1 then &quot;Dish&quot;&#13;&#10;elseif [prof] = 2 then &quot;Slope&quot;&#13;&#10;elseif [prof] =3 then &quot;Hilltop&quot;&#13;&#10;elseif [prof] =4 then &quot;Hill bottom&quot;&#13;&#10;end' />
      </column>
      <column caption='surface condition' datatype='string' name='[Calculation_786722568169459725]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [surf] = 1 then &quot;normal&quot;&#13;&#10;elseif [surf] = 2 then &quot;wet&quot;&#13;&#10;elseif [surf]= 3 then &quot;puddles&quot;&#13;&#10;elseif [surf] = 4 then &quot;flooded&quot;&#13;&#10;elseif [surf] = 5 then &quot;snow&quot;&#13;&#10;elseif [surf] = 6 then &quot;mud&quot;&#13;&#10;elseif [surf] = 7 then &quot;icy&quot;&#13;&#10;elseif [surf]= 8 then &quot;fat - oil&quot;&#13;&#10;elseif [surf] = 9 then &quot;other&quot;&#13;&#10;end' />
      </column>
      <column caption='Infrastructure' datatype='string' name='[Calculation_786722568170512398]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [infra] = 1 THEN &quot;Underground - tunnel&quot;&#13;&#10;elseif [infra] =2 THEN &quot;Bridge - autopont&quot;&#13;&#10;elseif [infra] =3 THEN &quot;Exchanger or connection brace&quot;&#13;&#10;elseif [infra] =4 THEN &quot;Railway&quot;&#13;&#10;elseif [infra] =5 THEN &quot;Carrefour arranged&quot;&#13;&#10;elseif [infra] =6 THEN &quot;Pedestrian area&quot;&#13;&#10;elseif [infra] =7 THEN &quot;Toll zone&quot;&#13;&#10;end' />
      </column>
      <column caption='Situation of the accident' datatype='string' name='[Calculation_786722568171266063]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [situ] = 1 then &quot;On the road&quot;&#13;&#10;elseif [situ] =2 then &quot;On emergency stop band&quot;&#13;&#10;elseif [situ] =23 then &quot;On the verge&quot;&#13;&#10;elseif [situ] =24 then &quot;On the sidewalk&quot;&#13;&#10;elseif [situ] =25 then &quot;On bike path&quot;&#13;&#10;end' />
      </column>
      <column caption='Severity of the accident' datatype='string' name='[Calculation_786722568172929040]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [grav] = 1 then &quot;Unscathed&quot;&#13;&#10;elseif[grav] = 2 then &quot;Killed&quot;&#13;&#10;elseif[grav] =3 then &quot;Hospitalized wounded&quot;&#13;&#10;elseif[grav] =4 then &quot;Light injury&quot;&#13;&#10;END' />
      </column>
      <column caption='User category' datatype='string' name='[Calculation_786722568182382609]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [catu] = 1 then &quot;Driver&quot;&#13;&#10;elseif [catu] = 2 then &quot;Passenger&quot;&#13;&#10;elseif [catu] = 3 then &quot;Pedestrian&quot;&#13;&#10;elseif [catu] = 4 then &quot;Pedestrian in rollerblade or scooter&quot;&#13;&#10;end' />
      </column>
      <column caption='Sex_user' datatype='string' name='[Calculation_786722568185094162]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [sexe] = 1 then &quot;Male&quot;&#13;&#10;elseif [sexe] = 2 then &quot;Female&quot;&#13;&#10;end' />
      </column>
      <column caption='safety equipment' datatype='string' name='[Calculation_786722568305487891]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if left([secu],1) = &apos;1&apos; then &quot;Belt&quot;&#13;&#10;elseif left([secu],1) = &apos;2&apos; then &quot;Helmet&quot;&#13;&#10;elseif left([secu],1) =&apos;3&apos; then &quot;Children&apos;s device&quot;&#13;&#10;elseif left([secu],1) =&apos;4&apos; then &quot;Reflective equipment&quot;&#13;&#10;elseif left([secu],1) =&apos;9&apos; then &quot;Other&quot;&#13;&#10;end' />
      </column>
      <column caption='vehicle_category' datatype='string' name='[Calculation_786722568306520084]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [catv] = 01 then &quot;Bicycle&quot;&#13;&#10;elseif [catv] =02 then &quot;Moped &lt;50cm3&quot;&#13;&#10;elseif [catv] =03 then &quot;Cart (Quadricycle with bodied motor)&quot;&#13;&#10;elseif [catv] =04 then &quot;Not used since 2006 (registered scooter)&quot;&#13;&#10;elseif [catv] =05 then &quot;Not used since 2006 (motorcycle)&quot;&#13;&#10;elseif [catv] =06 then &quot;Not used since 2006 (side-car)&quot;&#13;&#10;elseif [catv] =07 then &quot;VL only&quot;&#13;&#10;elseif [catv] =08 then &quot;Not used category (VL + caravan)&quot;&#13;&#10;elseif [catv] =09 then &quot;Not used category (VL + trailer)&quot;&#13;&#10;elseif [catv] =10 then &quot;VU only 1,5T &lt;= GVW &lt;= 3,5T with or without trailer (formerly VU only 1,5T &lt;= GVW &lt;= 3,5T)&quot;&#13;&#10;elseif [catv] =11 then &quot;Most used since 2006 (VU (10) + caravan)&quot;&#13;&#10;elseif [catv] =12 then &quot;Most used since 2006 (VU (10) + trailer)&quot;&#13;&#10;elseif [catv] =13 then &quot;PL only 3,5T&quot;&#13;&#10;end' />
      </column>
      <column caption='is use of Safety Equipment' datatype='string' name='[Calculation_786722568311091221]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if right([secu],1) = &apos;1&apos; then  &quot;Yes&quot;&#13;&#10;elseif right([secu],1) =&apos;2&apos; then &quot;No&quot;&#13;&#10;elseif right([secu],1) =&apos;3&apos; then &quot;Not determinable&quot;&#13;&#10;end' />
      </column>
      <column caption='Num Acc (places.csv)' datatype='integer' name='[Num_Acc (places.csv)]' role='measure' type='quantitative' />
      <column caption='Num Acc (users.csv)' datatype='integer' name='[Num_Acc (users.csv)]' role='measure' type='quantitative' />
      <column caption='Num Acc (vehicles.csv)' datatype='integer' name='[Num_Acc (vehicles.csv)]' role='measure' type='quantitative' />
      <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Actp' datatype='integer' name='[actp]' role='measure' type='quantitative' />
      <column caption='Adr' datatype='string' name='[adr]' role='dimension' type='nominal' />
      <column caption='Agg' datatype='integer' name='[agg]' role='measure' type='quantitative' />
      <column caption='An' datatype='integer' name='[an]' role='measure' type='quantitative' />
      <column caption='An Nais' datatype='integer' name='[an_nais]' role='measure' type='quantitative' />
      <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
      <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
      <column caption='Catu' datatype='integer' name='[catu]' role='measure' type='quantitative' />
      <column caption='Catv' datatype='integer' name='[catv]' role='measure' type='quantitative' />
      <column caption='Choc' datatype='integer' name='[choc]' role='measure' type='quantitative' />
      <column caption='Circ' datatype='integer' name='[circ]' role='measure' type='quantitative' />
      <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
      <column caption='Com' datatype='integer' name='[com]' role='measure' type='quantitative' />
      <column caption='Dep' datatype='integer' name='[dep]' role='measure' type='quantitative' />
      <column caption='Env1' datatype='integer' name='[env1]' role='measure' type='quantitative' />
      <column caption='Etatp' datatype='integer' name='[etatp]' role='measure' type='quantitative' />
      <column caption='Gps' datatype='string' name='[gps]' role='dimension' type='nominal' />
      <column caption='Grav' datatype='integer' name='[grav]' role='measure' type='quantitative' />
      <column caption='Hrmn' datatype='integer' name='[hrmn]' role='measure' type='quantitative' />
      <column caption='Infra' datatype='integer' name='[infra]' role='measure' type='quantitative' />
      <column caption='Int' datatype='integer' name='[int]' role='measure' type='quantitative' />
      <column caption='Jour' datatype='integer' name='[jour]' role='measure' type='quantitative' />
      <column caption='Larrout' datatype='integer' name='[larrout]' role='measure' type='quantitative' />
      <column caption='Lartpc' datatype='integer' name='[lartpc]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='integer' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Locp' datatype='integer' name='[locp]' role='measure' type='quantitative' />
      <column caption='Long' datatype='integer' name='[long]' role='measure' type='quantitative' />
      <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
      <column caption='Manv' datatype='integer' name='[manv]' role='measure' type='quantitative' />
      <column caption='Mois' datatype='integer' name='[mois]' role='measure' type='quantitative' />
      <column caption='Nbv' datatype='integer' name='[nbv]' role='measure' type='quantitative' />
      <column caption='Num Veh (Vehicles.Csv)' datatype='string' name='[num_veh (vehicles.csv)]' role='dimension' type='nominal' />
      <column caption='Num Veh' datatype='string' name='[num_veh]' role='dimension' type='nominal' />
      <column caption='Obs' datatype='integer' name='[obs]' role='measure' type='quantitative' />
      <column caption='Obsm' datatype='integer' name='[obsm]' role='measure' type='quantitative' />
      <column caption='Occutc' datatype='integer' name='[occutc]' role='measure' type='quantitative' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' type='nominal' />
      <column caption='Plan' datatype='integer' name='[plan]' role='measure' type='quantitative' />
      <column caption='Pr1' datatype='string' name='[pr1]' role='dimension' type='nominal' />
      <column caption='Pr' datatype='string' name='[pr]' role='dimension' type='nominal' />
      <column caption='Prof' datatype='integer' name='[prof]' role='measure' type='quantitative' />
      <column caption='Secu' datatype='string' name='[secu]' role='dimension' type='nominal' />
      <column caption='Senc' datatype='integer' name='[senc]' role='measure' type='quantitative' />
      <column caption='Sexe' datatype='integer' name='[sexe]' role='measure' type='quantitative' />
      <column caption='Situ' datatype='integer' name='[situ]' role='measure' type='quantitative' />
      <column caption='Surf' datatype='integer' name='[surf]' role='measure' type='quantitative' />
      <column caption='Trajet' datatype='integer' name='[trajet]' role='measure' type='quantitative' />
      <column caption='V1' datatype='string' name='[v1]' role='dimension' type='nominal' />
      <column caption='V2' datatype='string' name='[v2]' role='dimension' type='nominal' />
      <column caption='Voie' datatype='integer' name='[voie]' role='measure' type='quantitative' />
      <column caption='Vosp' datatype='integer' name='[vosp]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_786722568172929040]' derivation='None' name='[none:Calculation_786722568172929040:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_786722568305487891]' derivation='None' name='[none:Calculation_786722568305487891:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_786722568306520084]' derivation='None' name='[none:Calculation_786722568306520084:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_786722568311091221]' derivation='None' name='[none:Calculation_786722568311091221:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Atmospheric conditions,Ligting Condition,vehicle_category)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_786722568163766280:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_786722568158990343:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_786722568306520084:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (is use of Safety Equipment,Severity of the accident)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_786722568311091221:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_786722568172929040:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/akum93/Downloads/accidents-in-france-from-2005-to-2016/caracteristics+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/04/2019 07:37:17 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Num_Acc (places.csv)]' value='[Extract].[Num_Acc]' />
            <map key='[Num_Acc (users.csv)]' value='[Extract].[Num_Acc1]' />
            <map key='[Num_Acc (vehicles.csv)]' value='[Extract].[Num_Acc2]' />
            <map key='[Num_Acc]' value='[Extract].[Num_Acc3]' />
            <map key='[actp]' value='[Extract].[actp]' />
            <map key='[adr]' value='[Extract].[adr]' />
            <map key='[agg]' value='[Extract].[agg]' />
            <map key='[an]' value='[Extract].[an]' />
            <map key='[an_nais]' value='[Extract].[an_nais]' />
            <map key='[atm]' value='[Extract].[atm]' />
            <map key='[catr]' value='[Extract].[catr]' />
            <map key='[catu]' value='[Extract].[catu]' />
            <map key='[catv]' value='[Extract].[catv]' />
            <map key='[choc]' value='[Extract].[choc]' />
            <map key='[circ]' value='[Extract].[circ]' />
            <map key='[col]' value='[Extract].[col]' />
            <map key='[com]' value='[Extract].[com]' />
            <map key='[dep]' value='[Extract].[dep]' />
            <map key='[env1]' value='[Extract].[env1]' />
            <map key='[etatp]' value='[Extract].[etatp]' />
            <map key='[gps]' value='[Extract].[gps]' />
            <map key='[grav]' value='[Extract].[grav]' />
            <map key='[hrmn]' value='[Extract].[hrmn]' />
            <map key='[infra]' value='[Extract].[infra]' />
            <map key='[int]' value='[Extract].[int]' />
            <map key='[jour]' value='[Extract].[jour]' />
            <map key='[larrout]' value='[Extract].[larrout]' />
            <map key='[lartpc]' value='[Extract].[lartpc]' />
            <map key='[lat]' value='[Extract].[lat]' />
            <map key='[locp]' value='[Extract].[locp]' />
            <map key='[long]' value='[Extract].[long]' />
            <map key='[lum]' value='[Extract].[lum]' />
            <map key='[manv]' value='[Extract].[manv]' />
            <map key='[mois]' value='[Extract].[mois]' />
            <map key='[nbv]' value='[Extract].[nbv]' />
            <map key='[num_veh (vehicles.csv)]' value='[Extract].[num_veh]' />
            <map key='[num_veh]' value='[Extract].[num_veh1]' />
            <map key='[obs]' value='[Extract].[obs]' />
            <map key='[obsm]' value='[Extract].[obsm]' />
            <map key='[occutc]' value='[Extract].[occutc]' />
            <map key='[place]' value='[Extract].[place]' />
            <map key='[plan]' value='[Extract].[plan]' />
            <map key='[pr1]' value='[Extract].[pr1]' />
            <map key='[pr]' value='[Extract].[pr]' />
            <map key='[prof]' value='[Extract].[prof]' />
            <map key='[secu]' value='[Extract].[secu]' />
            <map key='[senc]' value='[Extract].[senc]' />
            <map key='[sexe]' value='[Extract].[sexe]' />
            <map key='[situ]' value='[Extract].[situ]' />
            <map key='[surf]' value='[Extract].[surf]' />
            <map key='[trajet]' value='[Extract].[trajet]' />
            <map key='[v1]' value='[Extract].[v1]' />
            <map key='[v2]' value='[Extract].[v2]' />
            <map key='[voie]' value='[Extract].[voie]' />
            <map key='[vosp]' value='[Extract].[vosp]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3553976' timestamp-start='2019-07-04 19:37:17.267' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Num_Acc3</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Num_Acc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Num_Acc3</remote-alias>
              <ordinal>0</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6814</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>an</remote-name>
              <remote-type>20</remote-type>
              <local-name>[an]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>an</remote-alias>
              <ordinal>1</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mois</remote-name>
              <remote-type>20</remote-type>
              <local-name>[mois]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mois</remote-alias>
              <ordinal>2</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>jour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[jour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>jour</remote-alias>
              <ordinal>3</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hrmn</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hrmn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hrmn</remote-alias>
              <ordinal>4</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lum</remote-name>
              <remote-type>20</remote-type>
              <local-name>[lum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lum</remote-alias>
              <ordinal>5</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>agg</remote-name>
              <remote-type>20</remote-type>
              <local-name>[agg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>agg</remote-alias>
              <ordinal>6</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>int</remote-name>
              <remote-type>20</remote-type>
              <local-name>[int]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>int</remote-alias>
              <ordinal>7</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>atm</remote-name>
              <remote-type>20</remote-type>
              <local-name>[atm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>atm</remote-alias>
              <ordinal>8</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>col</remote-name>
              <remote-type>20</remote-type>
              <local-name>[col]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>col</remote-alias>
              <ordinal>9</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>com</remote-name>
              <remote-type>20</remote-type>
              <local-name>[com]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>com</remote-alias>
              <ordinal>10</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>adr</remote-name>
              <remote-type>129</remote-type>
              <local-name>[adr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>adr</remote-alias>
              <ordinal>11</ordinal>
              <family>caracteristics.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>837</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gps</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gps]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gps</remote-alias>
              <ordinal>12</ordinal>
              <family>caracteristics.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>20</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>13</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>20</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>14</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dep</remote-name>
              <remote-type>20</remote-type>
              <local-name>[dep]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dep</remote-alias>
              <ordinal>15</ordinal>
              <family>caracteristics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Num_Acc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Num_Acc (places.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Num_Acc</remote-alias>
              <ordinal>16</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6814</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>catr</remote-name>
              <remote-type>20</remote-type>
              <local-name>[catr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>catr</remote-alias>
              <ordinal>17</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>voie</remote-name>
              <remote-type>20</remote-type>
              <local-name>[voie]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>voie</remote-alias>
              <ordinal>18</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>90</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v1</remote-alias>
              <ordinal>19</ordinal>
              <family>places.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v2</remote-alias>
              <ordinal>20</ordinal>
              <family>places.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>circ</remote-name>
              <remote-type>20</remote-type>
              <local-name>[circ]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>circ</remote-alias>
              <ordinal>21</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nbv</remote-name>
              <remote-type>20</remote-type>
              <local-name>[nbv]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nbv</remote-alias>
              <ordinal>22</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pr</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pr</remote-alias>
              <ordinal>23</ordinal>
              <family>places.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pr1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pr1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pr1</remote-alias>
              <ordinal>24</ordinal>
              <family>places.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vosp</remote-name>
              <remote-type>20</remote-type>
              <local-name>[vosp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vosp</remote-alias>
              <ordinal>25</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prof</remote-name>
              <remote-type>20</remote-type>
              <local-name>[prof]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>prof</remote-alias>
              <ordinal>26</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>plan</remote-name>
              <remote-type>20</remote-type>
              <local-name>[plan]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>plan</remote-alias>
              <ordinal>27</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lartpc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[lartpc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lartpc</remote-alias>
              <ordinal>28</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>larrout</remote-name>
              <remote-type>20</remote-type>
              <local-name>[larrout]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>larrout</remote-alias>
              <ordinal>29</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>surf</remote-name>
              <remote-type>20</remote-type>
              <local-name>[surf]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>surf</remote-alias>
              <ordinal>30</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>infra</remote-name>
              <remote-type>20</remote-type>
              <local-name>[infra]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>infra</remote-alias>
              <ordinal>31</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>situ</remote-name>
              <remote-type>20</remote-type>
              <local-name>[situ]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>situ</remote-alias>
              <ordinal>32</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>env1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[env1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>env1</remote-alias>
              <ordinal>33</ordinal>
              <family>places.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Num_Acc1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Num_Acc (users.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Num_Acc1</remote-alias>
              <ordinal>34</ordinal>
              <family>users.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6814</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>place</remote-name>
              <remote-type>129</remote-type>
              <local-name>[place]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>place</remote-alias>
              <ordinal>35</ordinal>
              <family>users.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>catu</remote-name>
              <remote-type>20</remote-type>
              <local-name>[catu]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>catu</remote-alias>
              <ordinal>36</ordinal>
              <family>users.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>grav</remote-name>
              <remote-type>20</remote-type>
              <local-name>[grav]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>grav</remote-alias>
              <ordinal>37</ordinal>
              <family>users.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sexe</remote-name>
              <remote-type>20</remote-type>
              <local-name>[sexe]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sexe</remote-alias>
              <ordinal>38</ordinal>
              <family>users.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trajet</remote-name>
              <remote-type>20</remote-type>
              <local-name>[trajet]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trajet</remote-alias>
              <ordinal>39</ordinal>
              <family>users.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>secu</remote-name>
              <remote-type>129</remote-type>
              <local-name>[secu]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>secu</remote-alias>
              <ordinal>40</ordinal>
              <family>users.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>locp</remote-name>
              <remote-type>20</remote-type>
              <local-name>[locp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>locp</remote-alias>
              <ordinal>41</ordinal>
              <family>users.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actp</remote-name>
              <remote-type>20</remote-type>
              <local-name>[actp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actp</remote-alias>
              <ordinal>42</ordinal>
              <family>users.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>etatp</remote-name>
              <remote-type>20</remote-type>
              <local-name>[etatp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>etatp</remote-alias>
              <ordinal>43</ordinal>
              <family>users.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>an_nais</remote-name>
              <remote-type>20</remote-type>
              <local-name>[an_nais]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>an_nais</remote-alias>
              <ordinal>44</ordinal>
              <family>users.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>num_veh1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[num_veh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>num_veh1</remote-alias>
              <ordinal>45</ordinal>
              <family>users.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Num_Acc2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Num_Acc (vehicles.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Num_Acc2</remote-alias>
              <ordinal>46</ordinal>
              <family>vehicles.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6814</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>senc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[senc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>senc</remote-alias>
              <ordinal>47</ordinal>
              <family>vehicles.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>catv</remote-name>
              <remote-type>20</remote-type>
              <local-name>[catv]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>catv</remote-alias>
              <ordinal>48</ordinal>
              <family>vehicles.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>occutc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[occutc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>occutc</remote-alias>
              <ordinal>49</ordinal>
              <family>vehicles.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>obs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[obs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>obs</remote-alias>
              <ordinal>50</ordinal>
              <family>vehicles.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>obsm</remote-name>
              <remote-type>20</remote-type>
              <local-name>[obsm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>obsm</remote-alias>
              <ordinal>51</ordinal>
              <family>vehicles.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>choc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[choc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>choc</remote-alias>
              <ordinal>52</ordinal>
              <family>vehicles.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>manv</remote-name>
              <remote-type>20</remote-type>
              <local-name>[manv]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>manv</remote-alias>
              <ordinal>53</ordinal>
              <family>vehicles.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>num_veh</remote-name>
              <remote-type>129</remote-type>
              <local-name>[num_veh (vehicles.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>num_veh</remote-alias>
              <ordinal>54</ordinal>
              <family>vehicles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.66129' measure-ordering='alphabetic' measure-percentage='0.33871' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_786722568306520084:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Not used since 2006 (motorcycle)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Most used since 2006 (VU (10) + caravan)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VL only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Not used since 2006 (registered scooter)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Most used since 2006 (VU (10) + trailer)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bicycle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Not used category (VL + caravan)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VU only 1,5T &lt;= GVW &lt;= 3,5T with or without trailer (formerly VU only 1,5T &lt;= GVW &lt;= 3,5T)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Not used since 2006 (side-car)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Not used category (VL + trailer)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cart (Quadricycle with bodied motor)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PL only 3,5T&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moped &lt;50cm3&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_786722568305487891:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Helmet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Children&apos;s device&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Reflective equipment&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belt&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
      <datasources>
        <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
      </datasources>
      <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
        <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
        </column>
        <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
        </column>
        <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
        </column>
        <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
        </column>
        <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_786722568158990343:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_786722568163766280:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_786722568165077001:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_786722568165965834:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Saf_equ_distr'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b2' fontname='Open Sans,verdana,arial,sans-serif' fontsize='12'>Distribution of Safety Equipment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='safety equipment' datatype='string' name='[Calculation_786722568305487891]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if left([secu],1) = &apos;1&apos; then &quot;Belt&quot;&#13;&#10;elseif left([secu],1) = &apos;2&apos; then &quot;Helmet&quot;&#13;&#10;elseif left([secu],1) =&apos;3&apos; then &quot;Children&apos;s device&quot;&#13;&#10;elseif left([secu],1) =&apos;4&apos; then &quot;Reflective equipment&quot;&#13;&#10;elseif left([secu],1) =&apos;9&apos; then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568305487891]' derivation='None' name='[none:Calculation_786722568305487891:nk]' pivot='key' type='nominal' />
            <column caption='Secu' datatype='string' name='[secu]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_786722568305487891:nk]' />
              <groupfilter function='member' level='[none:Calculation_786722568305487891:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='SeVsSA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b2' fontname='Open Sans,verdana,arial,sans-serif' fontsize='12'>Safety Equipment Vs Severity of Accident</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Severity of the accident' datatype='string' name='[Calculation_786722568172929040]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [grav] = 1 then &quot;Unscathed&quot;&#13;&#10;elseif[grav] = 2 then &quot;Killed&quot;&#13;&#10;elseif[grav] =3 then &quot;Hospitalized wounded&quot;&#13;&#10;elseif[grav] =4 then &quot;Light injury&quot;&#13;&#10;END' />
            </column>
            <column caption='is use of Safety Equipment' datatype='string' name='[Calculation_786722568311091221]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if right([secu],1) = &apos;1&apos; then  &quot;Yes&quot;&#13;&#10;elseif right([secu],1) =&apos;2&apos; then &quot;No&quot;&#13;&#10;elseif right([secu],1) =&apos;3&apos; then &quot;Not determinable&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Grav' datatype='integer' name='[grav]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568172929040]' derivation='None' name='[none:Calculation_786722568172929040:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568311091221]' derivation='None' name='[none:Calculation_786722568311091221:nk]' pivot='key' type='nominal' />
            <column caption='Secu' datatype='string' name='[secu]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[Exclusions (is use of Safety Equipment,Severity of the accident)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Calculation_786722568311091221:nk]' />
                <groupfilter function='level-members' level='[none:Calculation_786722568172929040:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_786722568172929040:nk]' member='&quot;Light injury&quot;' />
                  <groupfilter function='member' level='[none:Calculation_786722568311091221:nk]' member='%null%' />
                </groupfilter>
                <order>
                  <hierarchy name='[none:Calculation_786722568311091221:nk]' />
                  <hierarchy name='[none:Calculation_786722568172929040:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568311091221:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_786722568311091221:nk]' />
              <groupfilter function='member' level='[none:Calculation_786722568311091221:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[Exclusions (is use of Safety Equipment,Severity of the accident)]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568311091221:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568311091221:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568172929040:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[lum]' derivation='Sum' name='[sum:lum:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[sum:lum:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='VecVsGen'>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Sex_user' datatype='string' name='[Calculation_786722568185094162]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [sexe] = 1 then &quot;Male&quot;&#13;&#10;elseif [sexe] = 2 then &quot;Female&quot;&#13;&#10;end' />
            </column>
            <column caption='vehicle_category' datatype='string' name='[Calculation_786722568306520084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catv] = 01 then &quot;Bicycle&quot;&#13;&#10;elseif [catv] =02 then &quot;Moped &lt;50cm3&quot;&#13;&#10;elseif [catv] =03 then &quot;Cart (Quadricycle with bodied motor)&quot;&#13;&#10;elseif [catv] =04 then &quot;Not used since 2006 (registered scooter)&quot;&#13;&#10;elseif [catv] =05 then &quot;Not used since 2006 (motorcycle)&quot;&#13;&#10;elseif [catv] =06 then &quot;Not used since 2006 (side-car)&quot;&#13;&#10;elseif [catv] =07 then &quot;VL only&quot;&#13;&#10;elseif [catv] =08 then &quot;Not used category (VL + caravan)&quot;&#13;&#10;elseif [catv] =09 then &quot;Not used category (VL + trailer)&quot;&#13;&#10;elseif [catv] =10 then &quot;VU only 1,5T &lt;= GVW &lt;= 3,5T with or without trailer (formerly VU only 1,5T &lt;= GVW &lt;= 3,5T)&quot;&#13;&#10;elseif [catv] =11 then &quot;Most used since 2006 (VU (10) + caravan)&quot;&#13;&#10;elseif [catv] =12 then &quot;Most used since 2006 (VU (10) + trailer)&quot;&#13;&#10;elseif [catv] =13 then &quot;PL only 3,5T&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column caption='Catv' datatype='integer' name='[catv]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568185094162]' derivation='None' name='[none:Calculation_786722568185094162:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568306520084]' derivation='None' name='[none:Calculation_786722568306520084:nk]' pivot='key' type='nominal' />
            <column caption='Sexe' datatype='integer' name='[sexe]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_786722568306520084:nk]' />
              <groupfilter function='member' level='[none:Calculation_786722568306520084:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>([federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568185094162:nk] / [federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='VechileVsAtmoVsLightCond'>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='vehicle_category' datatype='string' name='[Calculation_786722568306520084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catv] = 01 then &quot;Bicycle&quot;&#13;&#10;elseif [catv] =02 then &quot;Moped &lt;50cm3&quot;&#13;&#10;elseif [catv] =03 then &quot;Cart (Quadricycle with bodied motor)&quot;&#13;&#10;elseif [catv] =04 then &quot;Not used since 2006 (registered scooter)&quot;&#13;&#10;elseif [catv] =05 then &quot;Not used since 2006 (motorcycle)&quot;&#13;&#10;elseif [catv] =06 then &quot;Not used since 2006 (side-car)&quot;&#13;&#10;elseif [catv] =07 then &quot;VL only&quot;&#13;&#10;elseif [catv] =08 then &quot;Not used category (VL + caravan)&quot;&#13;&#10;elseif [catv] =09 then &quot;Not used category (VL + trailer)&quot;&#13;&#10;elseif [catv] =10 then &quot;VU only 1,5T &lt;= GVW &lt;= 3,5T with or without trailer (formerly VU only 1,5T &lt;= GVW &lt;= 3,5T)&quot;&#13;&#10;elseif [catv] =11 then &quot;Most used since 2006 (VU (10) + caravan)&quot;&#13;&#10;elseif [catv] =12 then &quot;Most used since 2006 (VU (10) + trailer)&quot;&#13;&#10;elseif [catv] =13 then &quot;PL only 3,5T&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column caption='Catv' datatype='integer' name='[catv]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568306520084]' derivation='None' name='[none:Calculation_786722568306520084:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_786722568306520084:nk]' />
              <groupfilter function='member' level='[none:Calculation_786722568306520084:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>([federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk] / [federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='accident_site'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Accident Site</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='accident site' datatype='string' name='[Calculation_786722568168550412]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [prof] = 1 then &quot;Dish&quot;&#13;&#10;elseif [prof] = 2 then &quot;Slope&quot;&#13;&#10;elseif [prof] =3 then &quot;Hilltop&quot;&#13;&#10;elseif [prof] =4 then &quot;Hill bottom&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568168550412]' derivation='None' name='[none:Calculation_786722568168550412:nk]' pivot='key' type='nominal' />
            <column caption='Prof' datatype='integer' name='[prof]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568168550412:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='cond_people'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b2' fontname='Open Sans,verdana,arial,sans-serif' fontsize='12'>Condition of People involved in the Accidents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Severity of the accident' datatype='string' name='[Calculation_786722568172929040]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [grav] = 1 then &quot;Unscathed&quot;&#13;&#10;elseif[grav] = 2 then &quot;Killed&quot;&#13;&#10;elseif[grav] =3 then &quot;Hospitalized wounded&quot;&#13;&#10;elseif[grav] =4 then &quot;Light injury&quot;&#13;&#10;END' />
            </column>
            <column caption='User category' datatype='string' name='[Calculation_786722568182382609]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catu] = 1 then &quot;Driver&quot;&#13;&#10;elseif [catu] = 2 then &quot;Passenger&quot;&#13;&#10;elseif [catu] = 3 then &quot;Pedestrian&quot;&#13;&#10;elseif [catu] = 4 then &quot;Pedestrian in rollerblade or scooter&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column caption='Catu' datatype='integer' name='[catu]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Grav' datatype='integer' name='[grav]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568172929040]' derivation='None' name='[none:Calculation_786722568172929040:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568182382609]' derivation='None' name='[none:Calculation_786722568182382609:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>([federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568172929040:nk] / [federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='day_wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b1' fontname='Open Sans,verdana,arial,sans-serif' fontsize='10'>Day Wise Number of Accidents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column aggregation='Sum' caption='Day' datatype='integer' name='[Calculation_786722568141639684]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[jour]' />
            </column>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Jour' datatype='integer' name='[jour]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568141639684]' derivation='None' name='[none:Calculation_786722568141639684:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568141639684:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='gender_cond'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b2' fontname='Open Sans,verdana,arial,sans-serif' fontsize='12'>Distribution of people involved in accidents by Gender</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='User category' datatype='string' name='[Calculation_786722568182382609]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catu] = 1 then &quot;Driver&quot;&#13;&#10;elseif [catu] = 2 then &quot;Passenger&quot;&#13;&#10;elseif [catu] = 3 then &quot;Pedestrian&quot;&#13;&#10;elseif [catu] = 4 then &quot;Pedestrian in rollerblade or scooter&quot;&#13;&#10;end' />
            </column>
            <column caption='Sex_user' datatype='string' name='[Calculation_786722568185094162]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [sexe] = 1 then &quot;Male&quot;&#13;&#10;elseif [sexe] = 2 then &quot;Female&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column caption='Catu' datatype='integer' name='[catu]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568182382609]' derivation='None' name='[none:Calculation_786722568182382609:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568185094162]' derivation='None' name='[none:Calculation_786722568185094162:nk]' pivot='key' type='nominal' />
            <column caption='Sexe' datatype='integer' name='[sexe]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]' value='59' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>([federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568185094162:nk] / [federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='hour_wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b1' fontname='Open Sans,verdana,arial,sans-serif' fontsize='10'>Hour Wise Number of Accidents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Hour' datatype='string' name='[Calculation_786722568144035845]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='left(STR([hrmn]),len(str([hrmn]))-2)' />
            </column>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Hrmn' datatype='integer' name='[hrmn]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568144035845]' derivation='None' name='[none:Calculation_786722568144035845:ok]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568144035845:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_786722568144035845:ok]' />
              <groupfilter function='member' level='[none:Calculation_786722568144035845:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568144035845:ok]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568144035845:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='month_wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b2' fontname='Open Sans,verdana,arial,sans-serif' fontsize='10'>Month Wise Number of Accidents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Month' datatype='string' name='[Calculation_786722568136507394]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [mois] =1 then &apos;Jan&apos;&#13;&#10;ELSEIF [mois] =2 then &apos;Feb&apos;&#13;&#10;ELSEIF [mois] =3 then &apos;Mar&apos;&#13;&#10;ELSEIF [mois] =4 then &apos;Apr&apos;&#13;&#10;ELSEIF [mois] =5 then &apos;May&apos;&#13;&#10;ELSEIF [mois] =6 then &apos;Jun&apos;&#13;&#10;ELSEIF [mois] =7 then &apos;Jul&apos;&#13;&#10;ELSEIF [mois] =8 then &apos;Aug&apos;&#13;&#10;ELSEIF [mois] =9 then &apos;Sep&apos;&#13;&#10;ELSEIF [mois] =10 then &apos;Oct&apos;&#13;&#10;ELSEIF [mois] =11 then &apos;Nov&apos;&#13;&#10;ELSEIF [mois] =12 then &apos;Dec&apos;&#13;&#10;end' />
            </column>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[mois]' derivation='Count' name='[cnt:mois:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column caption='Mois' datatype='integer' name='[mois]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568136507394]' derivation='None' name='[none:Calculation_786722568136507394:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:mois:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:mois:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:mois:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:mois:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568136507394:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='road_cat'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Road Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='surface_cond'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Surface Condition</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='surface condition' datatype='string' name='[Calculation_786722568169459725]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [surf] = 1 then &quot;normal&quot;&#13;&#10;elseif [surf] = 2 then &quot;wet&quot;&#13;&#10;elseif [surf]= 3 then &quot;puddles&quot;&#13;&#10;elseif [surf] = 4 then &quot;flooded&quot;&#13;&#10;elseif [surf] = 5 then &quot;snow&quot;&#13;&#10;elseif [surf] = 6 then &quot;mud&quot;&#13;&#10;elseif [surf] = 7 then &quot;icy&quot;&#13;&#10;elseif [surf]= 8 then &quot;fat - oil&quot;&#13;&#10;elseif [surf] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568169459725]' derivation='None' name='[none:Calculation_786722568169459725:nk]' pivot='key' type='nominal' />
            <column caption='Surf' datatype='integer' name='[surf]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568169459725:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='time_series_all'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b2' fontname='Atlas Grotesk,sans-serif' fontsize='10' lmargin='480' rmargin='480'>Time series of all accidents - 2005 to 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='date_cal' datatype='date' name='[Calculation_786722568149909510]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(STR([mois]) + STR([jour]) + STR([an]+2000))' />
            </column>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='An' datatype='integer' name='[an]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Jour' datatype='integer' name='[jour]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column caption='Mois' datatype='integer' name='[mois]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568149909510]' derivation='Day-Trunc' name='[tdy:Calculation_786722568149909510:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[tdy:Calculation_786722568149909510:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='time_series_ym'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b1' fontname='Atlas Grotesk,sans-serif' fontsize='10'>Heat Map of all accidents - 2005 to 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_786722568133394432]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[an]+2000' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_786722568136507394]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [mois] =1 then &apos;Jan&apos;&#13;&#10;ELSEIF [mois] =2 then &apos;Feb&apos;&#13;&#10;ELSEIF [mois] =3 then &apos;Mar&apos;&#13;&#10;ELSEIF [mois] =4 then &apos;Apr&apos;&#13;&#10;ELSEIF [mois] =5 then &apos;May&apos;&#13;&#10;ELSEIF [mois] =6 then &apos;Jun&apos;&#13;&#10;ELSEIF [mois] =7 then &apos;Jul&apos;&#13;&#10;ELSEIF [mois] =8 then &apos;Aug&apos;&#13;&#10;ELSEIF [mois] =9 then &apos;Sep&apos;&#13;&#10;ELSEIF [mois] =10 then &apos;Oct&apos;&#13;&#10;ELSEIF [mois] =11 then &apos;Nov&apos;&#13;&#10;ELSEIF [mois] =12 then &apos;Dec&apos;&#13;&#10;end' />
            </column>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='An' datatype='integer' name='[an]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column caption='Mois' datatype='integer' name='[mois]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568133394432]' derivation='None' name='[none:Calculation_786722568133394432:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_786722568136507394]' derivation='None' name='[none:Calculation_786722568136507394:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Num_Acc]' derivation='Sum' name='[sum:Num_Acc:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[sum:Num_Acc:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[sum:Num_Acc:qk]' />
              <text column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568133394432:ok]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568136507394:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='traffic_regime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Traffic Flow</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Traffic regime' datatype='string' name='[Calculation_786722568167661579]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [circ] = 1 then &quot;One way&quot;&#13;&#10;elseif [circ] = 2 then &quot;Bidirectional&quot;&#13;&#10;elseif [circ] =3 then &quot;Separated carriageways&quot;&#13;&#10;elseif [circ] =4 then &quot;With variable assignment channels&quot;&#13;&#10;end' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column caption='Circ' datatype='integer' name='[circ]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568167661579]' derivation='None' name='[none:Calculation_786722568167661579:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568167661579:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='year_wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000b2' fontname='Open Sans,verdana,arial,sans-serif' fontsize='10'>Year wise Number of Accidents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
          </datasources>
          <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_786722568133394432]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[an]+2000' />
            </column>
            <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
            </column>
            <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
            </column>
            <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
            </column>
            <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Traffic regime' datatype='string' name='[Calculation_786722568167661579]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [circ] = 1 then &quot;One way&quot;&#13;&#10;elseif [circ] = 2 then &quot;Bidirectional&quot;&#13;&#10;elseif [circ] =3 then &quot;Separated carriageways&quot;&#13;&#10;elseif [circ] =4 then &quot;With variable assignment channels&quot;&#13;&#10;end' />
            </column>
            <column caption='accident site' datatype='string' name='[Calculation_786722568168550412]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [prof] = 1 then &quot;Dish&quot;&#13;&#10;elseif [prof] = 2 then &quot;Slope&quot;&#13;&#10;elseif [prof] =3 then &quot;Hilltop&quot;&#13;&#10;elseif [prof] =4 then &quot;Hill bottom&quot;&#13;&#10;end' />
            </column>
            <column caption='surface condition' datatype='string' name='[Calculation_786722568169459725]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [surf] = 1 then &quot;normal&quot;&#13;&#10;elseif [surf] = 2 then &quot;wet&quot;&#13;&#10;elseif [surf]= 3 then &quot;puddles&quot;&#13;&#10;elseif [surf] = 4 then &quot;flooded&quot;&#13;&#10;elseif [surf] = 5 then &quot;snow&quot;&#13;&#10;elseif [surf] = 6 then &quot;mud&quot;&#13;&#10;elseif [surf] = 7 then &quot;icy&quot;&#13;&#10;elseif [surf]= 8 then &quot;fat - oil&quot;&#13;&#10;elseif [surf] = 9 then &quot;other&quot;&#13;&#10;end' />
            </column>
            <column caption='Infrastructure' datatype='string' name='[Calculation_786722568170512398]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [infra] = 1 THEN &quot;Underground - tunnel&quot;&#13;&#10;elseif [infra] =2 THEN &quot;Bridge - autopont&quot;&#13;&#10;elseif [infra] =3 THEN &quot;Exchanger or connection brace&quot;&#13;&#10;elseif [infra] =4 THEN &quot;Railway&quot;&#13;&#10;elseif [infra] =5 THEN &quot;Carrefour arranged&quot;&#13;&#10;elseif [infra] =6 THEN &quot;Pedestrian area&quot;&#13;&#10;elseif [infra] =7 THEN &quot;Toll zone&quot;&#13;&#10;end' />
            </column>
            <column caption='Situation of the accident' datatype='string' name='[Calculation_786722568171266063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [situ] = 1 then &quot;On the road&quot;&#13;&#10;elseif [situ] =2 then &quot;On emergency stop band&quot;&#13;&#10;elseif [situ] =23 then &quot;On the verge&quot;&#13;&#10;elseif [situ] =24 then &quot;On the sidewalk&quot;&#13;&#10;elseif [situ] =25 then &quot;On bike path&quot;&#13;&#10;end' />
            </column>
            <column caption='Severity of the accident' datatype='string' name='[Calculation_786722568172929040]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [grav] = 1 then &quot;Unscathed&quot;&#13;&#10;elseif[grav] = 2 then &quot;Killed&quot;&#13;&#10;elseif[grav] =3 then &quot;Hospitalized wounded&quot;&#13;&#10;elseif[grav] =4 then &quot;Light injury&quot;&#13;&#10;END' />
            </column>
            <column caption='Num Acc' datatype='integer' name='[Num_Acc]' role='measure' type='quantitative' />
            <column caption='An' datatype='integer' name='[an]' role='measure' type='quantitative' />
            <column caption='Atm' datatype='integer' name='[atm]' role='measure' type='quantitative' />
            <column caption='Catr' datatype='integer' name='[catr]' role='measure' type='quantitative' />
            <column caption='Circ' datatype='integer' name='[circ]' role='measure' type='quantitative' />
            <column-instance column='[Num_Acc]' derivation='Count' name='[cnt:Num_Acc:qk]' pivot='key' type='quantitative' />
            <column caption='Col' datatype='integer' name='[col]' role='measure' type='quantitative' />
            <column caption='Grav' datatype='integer' name='[grav]' role='measure' type='quantitative' />
            <column caption='Infra' datatype='integer' name='[infra]' role='measure' type='quantitative' />
            <column caption='Lum' datatype='integer' name='[lum]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_786722568133394432]' derivation='None' name='[none:Calculation_786722568133394432:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568167661579]' derivation='None' name='[none:Calculation_786722568167661579:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568168550412]' derivation='None' name='[none:Calculation_786722568168550412:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568169459725]' derivation='None' name='[none:Calculation_786722568169459725:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568170512398]' derivation='None' name='[none:Calculation_786722568170512398:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568171266063]' derivation='None' name='[none:Calculation_786722568171266063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_786722568172929040]' derivation='None' name='[none:Calculation_786722568172929040:nk]' pivot='key' type='nominal' />
            <column caption='Prof' datatype='integer' name='[prof]' role='measure' type='quantitative' />
            <column caption='Situ' datatype='integer' name='[situ]' role='measure' type='quantitative' />
            <column caption='Surf' datatype='integer' name='[surf]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568167661579:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_786722568167661579:nk]' member='%null%' />
              <groupfilter from='&quot;Bidirectional&quot;' function='range' level='[none:Calculation_786722568167661579:nk]' to='&quot;With variable assignment channels&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568168550412:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_786722568168550412:nk]' member='%null%' />
              <groupfilter function='member' level='[none:Calculation_786722568168550412:nk]' member='&quot;Dish&quot;' />
              <groupfilter function='member' level='[none:Calculation_786722568168550412:nk]' member='&quot;Hill bottom&quot;' />
              <groupfilter function='member' level='[none:Calculation_786722568168550412:nk]' member='&quot;Hilltop&quot;' />
              <groupfilter function='member' level='[none:Calculation_786722568168550412:nk]' member='&quot;Slope&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568169459725:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_786722568169459725:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568170512398:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_786722568170512398:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568171266063:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_786722568171266063:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568172929040:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_786722568172929040:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568167661579:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568168550412:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568169459725:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568170512398:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568171266063:nk]</column>
            <column>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568172929040:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
          </pane>
        </panes>
        <rows>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</rows>
        <cols>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568133394432:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Accident'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='caracteristics+' name='federated.1ffb5e90q4gzit10dc9lz0sk1vg9' />
      </datasources>
      <datasource-dependencies datasource='federated.1ffb5e90q4gzit10dc9lz0sk1vg9'>
        <column caption='Ligting Condition' datatype='string' name='[Calculation_786722568158990343]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [lum] = 1 then &quot;Full day&quot; &#13;&#10;ELSEIF  [lum] =2 then &quot;Twilight or dawn&quot; &#13;&#10;ELSEIF  [lum] =3 then &quot;Night without public lighting&quot;&#13;&#10;ELSEIF  [lum] =4 then &quot;Night with public lighting not lit&quot;&#13;&#10;ELSEIF  [lum] =5 then&quot;Night with public lighting on&quot;&#13;&#10;end' />
        </column>
        <column caption='Atmospheric conditions' datatype='string' name='[Calculation_786722568163766280]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [atm] = 1 then  &quot;Normal&quot;&#13;&#10;elseif [atm] =2 then &quot;Light rain&quot;&#13;&#10;elseif [atm] =3 then &quot;Heavy rain&quot;&#13;&#10;elseif [atm] =4 then &quot;Snow - hail&quot;&#13;&#10;elseif [atm] =5 then &quot;Fog - smoke&quot;&#13;&#10;elseif [atm] =6 then &quot;Strong wind - storm&quot;&#13;&#10;elseif [atm] =7 then &quot;Dazzling weather&quot;&#13;&#10;elseif [atm] =8 then &quot;Cloudy weather&quot;&#13;&#10;elseif [atm] =9 then &quot;Other&quot;&#13;&#10;end' />
        </column>
        <column caption='Type of collision' datatype='string' name='[Calculation_786722568165077001]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [col] =1 then &quot;Two vehicles - frontal&quot;&#13;&#10;elseif [col] = 2 then &quot;Two vehicles - from the rear&quot;&#13;&#10;elseif [col] =3 then &quot;Two vehicles - by the side&quot;&#13;&#10;elseif [col] =4 then &quot;Three vehicles and more - in chain&quot;&#13;&#10;elseif [col] =5 then &quot;Three or more vehicles - multiple collisions&quot;&#13;&#10;elseif [col] =6 then &quot;Other collision&quot;&#13;&#10;elseif [col] =7 then &quot;Without collision&quot;&#13;&#10;end' />
        </column>
        <column caption='Category of Road' datatype='string' name='[Calculation_786722568165965834]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [catr] = 1 then &quot;Highway&quot;&#13;&#10;ELSEIF [catr] = 2 then &quot;National Road&quot;&#13;&#10;ELSEIF [catr] = 3 then &quot;Departmental Road&quot;&#13;&#10;ELSEIF [catr] = 4 then &quot;Communal Way&quot;&#13;&#10;ELSEIF [catr] = 5 then &quot;Off public network&quot;&#13;&#10;ELSEIF [catr] = 6 then &quot;Parking lot open to public traffic&quot;&#13;&#10;ELSEIF [catr] = 9 then &quot;other&quot;&#13;&#10;end' />
        </column>
        <column caption='Traffic regime' datatype='string' name='[Calculation_786722568167661579]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [circ] = 1 then &quot;One way&quot;&#13;&#10;elseif [circ] = 2 then &quot;Bidirectional&quot;&#13;&#10;elseif [circ] =3 then &quot;Separated carriageways&quot;&#13;&#10;elseif [circ] =4 then &quot;With variable assignment channels&quot;&#13;&#10;end' />
        </column>
        <column caption='accident site' datatype='string' name='[Calculation_786722568168550412]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [prof] = 1 then &quot;Dish&quot;&#13;&#10;elseif [prof] = 2 then &quot;Slope&quot;&#13;&#10;elseif [prof] =3 then &quot;Hilltop&quot;&#13;&#10;elseif [prof] =4 then &quot;Hill bottom&quot;&#13;&#10;end' />
        </column>
        <column caption='surface condition' datatype='string' name='[Calculation_786722568169459725]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [surf] = 1 then &quot;normal&quot;&#13;&#10;elseif [surf] = 2 then &quot;wet&quot;&#13;&#10;elseif [surf]= 3 then &quot;puddles&quot;&#13;&#10;elseif [surf] = 4 then &quot;flooded&quot;&#13;&#10;elseif [surf] = 5 then &quot;snow&quot;&#13;&#10;elseif [surf] = 6 then &quot;mud&quot;&#13;&#10;elseif [surf] = 7 then &quot;icy&quot;&#13;&#10;elseif [surf]= 8 then &quot;fat - oil&quot;&#13;&#10;elseif [surf] = 9 then &quot;other&quot;&#13;&#10;end' />
        </column>
        <column caption='Infrastructure' datatype='string' name='[Calculation_786722568170512398]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [infra] = 1 THEN &quot;Underground - tunnel&quot;&#13;&#10;elseif [infra] =2 THEN &quot;Bridge - autopont&quot;&#13;&#10;elseif [infra] =3 THEN &quot;Exchanger or connection brace&quot;&#13;&#10;elseif [infra] =4 THEN &quot;Railway&quot;&#13;&#10;elseif [infra] =5 THEN &quot;Carrefour arranged&quot;&#13;&#10;elseif [infra] =6 THEN &quot;Pedestrian area&quot;&#13;&#10;elseif [infra] =7 THEN &quot;Toll zone&quot;&#13;&#10;end' />
        </column>
        <column caption='Situation of the accident' datatype='string' name='[Calculation_786722568171266063]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='if [situ] = 1 then &quot;On the road&quot;&#13;&#10;elseif [situ] =2 then &quot;On emergency stop band&quot;&#13;&#10;elseif [situ] =23 then &quot;On the verge&quot;&#13;&#10;elseif [situ] =24 then &quot;On the sidewalk&quot;&#13;&#10;elseif [situ] =25 then &quot;On bike path&quot;&#13;&#10;end' />
        </column>
        <column-instance column='[Calculation_786722568158990343]' derivation='None' name='[none:Calculation_786722568158990343:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568163766280]' derivation='None' name='[none:Calculation_786722568163766280:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568165077001]' derivation='None' name='[none:Calculation_786722568165077001:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568165965834]' derivation='None' name='[none:Calculation_786722568165965834:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568167661579]' derivation='None' name='[none:Calculation_786722568167661579:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568168550412]' derivation='None' name='[none:Calculation_786722568168550412:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568169459725]' derivation='None' name='[none:Calculation_786722568169459725:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568170512398]' derivation='None' name='[none:Calculation_786722568170512398:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_786722568171266063]' derivation='None' name='[none:Calculation_786722568171266063:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97058' id='22' param='horz' type='layout-flow' w='98522' x='739' y='1471'>
            <zone h='97058' id='19' param='horz' type='layout-flow' w='88540' x='739' y='1471'>
              <zone h='97058' id='12' param='horz' type='layout-flow' w='88540' x='739' y='1471'>
                <zone h='97058' id='10' type='layout-basic' w='88540' x='739' y='1471'>
                  <zone h='48530' id='8' name='time_series_all' w='44271' x='739' y='49999'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48528' id='14' name='day_wise' w='31293' x='57986' y='1471'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48528' id='15' name='month_wise' w='28108' x='29878' y='1471'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48528' id='33' name='year_wise' w='29139' x='739' y='1471'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48530' id='39' name='hour_wise' w='44269' x='45010' y='49999'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='108' h='97058' id='21' is-fixed='true' param='vert' type='layout-flow' w='9982' x='89279' y='1471'>
              <zone fixed-size='44' h='9559' id='23' is-fixed='true' mode='checkdropdown' name='day_wise' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]' type='filter' w='9982' x='89279' y='1471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9559' id='30' mode='checkdropdown' name='day_wise' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]' type='filter' w='9982' x='89279' y='11030'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9559' id='31' mode='checkdropdown' name='day_wise' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]' type='filter' w='9982' x='89279' y='20589'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9559' id='32' mode='checkdropdown' name='day_wise' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]' type='filter' w='9982' x='89279' y='30148'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9559' id='34' mode='checkdropdown' name='year_wise' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568171266063:nk]' type='filter' w='9982' x='89279' y='39707'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9559' id='35' mode='checkdropdown' name='year_wise' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568170512398:nk]' type='filter' w='9982' x='89279' y='49266'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9559' id='36' mode='checkdropdown' name='year_wise' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568169459725:nk]' type='filter' w='9982' x='89279' y='58825'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9559' id='37' mode='checkdropdown' name='year_wise' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568168550412:nk]' type='filter' w='9982' x='89279' y='68384'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9559' id='38' mode='checkdropdown' name='year_wise' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568167661579:nk]' type='filter' w='9982' x='89279' y='77943'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='SeVsSA' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='VechileVsAtmoVsLightCond' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='10750' id='6' name='SeVsSA' pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568311091221:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28250' id='8' name='VechileVsAtmoVsLightCond' pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]' type='color' w='16000' x='83200' y='11750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run auto-url='true' bold='true' fontalignment='1' fontcolor='#000000' fontname='Atlas Grotesk,sans-serif' fontsize='15' hyperlink='tabdoc:load-url url=&amp;quot;Accidents in France from 2005 to 2016&amp;quot;'>Accidents in France from 2005 to 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='1' param='vert' removable='false' type='layout-flow' w='98438' x='781' y='1042'>
            <zone h='2995' id='3' type='title' w='98438' x='781' y='1042' />
            <zone fixed-size='82' h='10677' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98438' x='781' y='4037' />
            <zone h='84244' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98438' x='781' y='14714'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Based on Date of Accident' captured-sheet='Accident' id='2'>
                    <capturedDeltas>
                      <worksheet name='time_series_all'>
                        <filter class='quantitative' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[tdy:Calculation_786722568149909510:qk]' included-values='non-null' />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption=' Based on roads where accidents occured' captured-sheet='road_cond' id='3' />
                  <story-point caption='Condition of people involved in the accidents' captured-sheet='people' id='4' />
                  <story-point caption='Safety Equipment used' captured-sheet='safe_equ' id='5' />
                  <story-point captured-sheet='Dashboard 5' id='6'>
                    <capturedDeltas>
                      <worksheet name='VechileVsAtmoVsLightCond'>
                        <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[Exclusions (Atmospheric conditions,Ligting Condition,vehicle_category)]'>
                          <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='level-members' level='[none:Calculation_786722568163766280:nk]' />
                              <groupfilter function='level-members' level='[none:Calculation_786722568158990343:nk]' />
                              <groupfilter function='level-members' level='[none:Calculation_786722568306520084:nk]' />
                            </groupfilter>
                            <groupfilter function='reorder-dimensionality'>
                              <groupfilter function='union'>
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[none:Calculation_786722568158990343:nk]' member='&quot;Full day&quot;' />
                                  <groupfilter function='crossjoin'>
                                    <groupfilter function='member' level='[none:Calculation_786722568163766280:nk]' member='&quot;Cloudy weather&quot;' />
                                    <groupfilter function='member' level='[none:Calculation_786722568306520084:nk]' member='&quot;Not used category (VL + caravan)&quot;' />
                                  </groupfilter>
                                </groupfilter>
                                <groupfilter function='crossjoin'>
                                  <groupfilter function='member' level='[none:Calculation_786722568158990343:nk]' member='&quot;Night with public lighting on&quot;' />
                                  <groupfilter function='crossjoin'>
                                    <groupfilter function='member' level='[none:Calculation_786722568163766280:nk]' member='&quot;Light rain&quot;' />
                                    <groupfilter function='member' level='[none:Calculation_786722568306520084:nk]' member='&quot;Most used since 2006 (VU (10) + trailer)&quot;' />
                                  </groupfilter>
                                </groupfilter>
                              </groupfilter>
                              <order>
                                <hierarchy name='[none:Calculation_786722568163766280:nk]' />
                                <hierarchy name='[none:Calculation_786722568158990343:nk]' />
                                <hierarchy name='[none:Calculation_786722568306520084:nk]' />
                              </order>
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]'>
                          <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[none:Calculation_786722568306520084:nk]' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:Calculation_786722568306520084:nk]' member='%null%' />
                              <groupfilter function='member' level='[none:Calculation_786722568306520084:nk]' member='&quot;Cart (Quadricycle with bodied motor)&quot;' />
                              <groupfilter from='&quot;Most used since 2006 (VU (10) + caravan)&quot;' function='range' level='[none:Calculation_786722568306520084:nk]' to='&quot;Not used category (VL + trailer)&quot;' />
                              <groupfilter from='&quot;Not used since 2006 (registered scooter)&quot;' function='range' level='[none:Calculation_786722568306520084:nk]' to='&quot;PL only 3,5T&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='people'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97058' id='5' param='horz' type='layout-flow' w='98522' x='739' y='1471'>
            <zone h='97058' id='3' type='layout-basic' w='83735' x='739' y='1471'>
              <zone h='48529' id='1' name='cond_people' w='83735' x='739' y='1471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48529' id='7' name='gender_cond' w='83735' x='739' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97058' id='4' is-fixed='true' param='vert' type='layout-flow' w='14787' x='84474' y='1471'>
              <zone h='19486' id='6' name='cond_people' pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]' type='color' w='14787' x='84474' y='1471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='road_cond'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='48529' id='1' name='accident_site' w='49261' x='50000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48529' id='3' name='traffic_regime' w='49261' x='739' y='1471'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48529' id='4' name='road_cat' w='49261' x='739' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48529' id='5' name='surface_cond' w='49261' x='50000' y='1471'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='safe_equ'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97058' id='5' param='horz' type='layout-flow' w='98522' x='739' y='1471'>
            <zone h='97058' id='3' type='layout-basic' w='83735' x='739' y='1471'>
              <zone h='48529' id='1' name='Saf_equ_distr' w='83735' x='739' y='1471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48529' id='7' name='SeVsSA' w='83735' x='739' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97058' id='4' is-fixed='true' param='vert' type='layout-flow' w='14787' x='84474' y='1471'>
              <zone h='23162' id='6' name='Saf_equ_distr' pane-specification-id='1' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]' type='color' w='14787' x='84474' y='1471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15809' id='8' name='SeVsSA' pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568311091221:nk]' type='color' w='14787' x='84474' y='24633'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='year_wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568172929040:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568171266063:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568170512398:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568169459725:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568168550412:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568167661579:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568133394432:ok]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165077001:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568167661579:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568168550412:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568169459725:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568170512398:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568171266063:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568172929040:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:an:qk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[tyr:Calculation_786722568149909510:qk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[yr:Calculation_786722568149909510:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='time_series_ym'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[sum:Num_Acc:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568133394432:ok]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568136507394:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[yr:Calculation_786722568149909510:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='people'>
      <viewpoints>
        <viewpoint name='cond_people'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='gender_cond'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='dashboard' name='safe_equ'>
      <viewpoints>
        <viewpoint name='Saf_equ_distr'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='SeVsSA'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568311091221:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='2' />
    </window>
    <window class='worksheet' name='Saf_equ_distr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[sum:Num_Acc:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]</field>
                  <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[sum:Num_Acc:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>%null%</value>
                <value>712843652317365703</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568305487891:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SeVsSA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568311091221:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568311091221:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='VechileVsAtmoVsLightCond'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568158990343:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='VecVsGen'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568185094162:nk]</field>
                  <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Male&quot;</bucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568185094162:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568306520084:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='SeVsSA'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568311091221:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='VechileVsAtmoVsLightCond'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='dashboard' hidden='true' name='Accident'>
      <viewpoints>
        <viewpoint name='day_wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='hour_wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='month_wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='time_series_all'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='year_wise'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='worksheet' hidden='true' name='accident_site'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568168550412:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='cond_people'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='day_wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568141639684:ok]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:jour:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='gender_cond'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Driver&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568182382609:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568185094162:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='hour_wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568144035845:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='month_wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:mois:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568136507394:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='road_cat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568165965834:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' hidden='true' name='road_cond'>
      <viewpoints>
        <viewpoint name='accident_site'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='road_cat'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='surface_cond'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='traffic_regime'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' hidden='true' name='surface_cond'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568169459725:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='time_series_all'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[yr:Calculation_786722568149909510:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='traffic_regime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[cnt:Num_Acc:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568163766280:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568167661579:nk]</field>
            <field>[federated.1ffb5e90q4gzit10dc9lz0sk1vg9].[none:Calculation_786722568168550412:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 5' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3wc9Z3/8dd29WpZxWqWZRV3cDcGg2khJKbkQuJw5BKSHHchgeSXdpCQ
      4yBHGt00wxESSgzYQPDBgW0MtlzkJsnqWvVV25VWbbWr1fb9/SGztnBBMpYleT/Px0OPx+7s
      zPf7mdnVvHfKzij8fr8fIYQQQUc50QUIIYSYGBIAQggRpCQAhBAiSEkACCFEkJIAEEKIICUB
      IIQQQUoCQAghgpQEgBBCBCkJACGECFISAIKhoSEqKiro6OiY6FIAsNlslJeXY7PZJrqUSa28
      vJzOzs5z1p7D4aCiooK2trZz1qbZbKa8vByfzzdieG1t7aT5vAUzCYALkNPp5Mknn+SWW27h
      hhtu4Ec/+hEtLS2nHNfr9fLjH/+YJ598kv37959ynIKCAv7zP/9z1P1///vfZ926dYG/vXv3
      jqn+rq4uNm3aRFdX15imO1t6vZ57772Xvr6+EcO3bt3KunXrAivZ7du3s27dOkwm0xnb6+3t
      5YEHHuDmm2/mpptu4mc/+xl2u/2c171p0yYqKiro6+vj3nvvRa/Xn3Vbfr+fn/70pzz++OMU
      FBSc9Pqjjz7KunXrePfdd8fUbnV1NZs2bcLj8YwY/sQTT7B169Yx13nvvfdy4MCBMU8nTk11
      //333z/RRYhza/v27bz55pv8/ve/54477iAiIoLo6Gjsdjs7duygtLSU/v5+0tLS2L59O7t3
      72bJkiVcffXV6HQ6du7cyZEjRwCIi4vjpZdeory8HL/fj8vlYvfu3aSlpaHVannzzTdRqVQk
      JCQE+t+6dSvLly/niSeeYP369aSnp+P3+9mzZw/79++nvr6elpYWsrOz2bp1K3a7neTk5MDj
      xMREbDYbc+fOxWAw8Mknn9Db28uBAweIj48nMjKSrVu30t/fT2lpKS0tLSQmJvLhhx/S1dVF
      RkYGAFVVVezcuZPW1lbS0tLweDxs3rwZgL1799LT00NGRgZbtmxh3759eL1eIiMjiY+PByAh
      IYGtW7cSFxdHfn4+L7/8MtHR0dx88820t7ezY8cOKisr0Wq1gWkAXn75ZQoLC3nxxRe55ZZb
      cLlcZGVloVAo2L17NwcOHMDlcpGSksI777zD4OAgKSkpFBcXc/jwYXJzc2lpaWH79u3U19eT
      lJRESEgIb7/9NoODg5SUlBAREYHL5SI7O5uysjI++OADXC4XSqWSPXv2BN6TgoIC6uvrycrK
      CtTn9XrZs2cPhYWFDAwMkJaWxieffMKOHTu4+OKLueaaa4iNjQ2MPzQ0xIYNGwgLC8NsNvOl
      L30JGN5i2LVrFwcPHsRms5GWlobZbGbHjh2UlZURGhpKWFgYXq+XRYsW4XQ62b59O1VVVVRV
      VZGSksKSJUvo7u5m27ZtVFRUEBcXR2RkJNu2baOzsxO9Xk95eTmZmZkcPXqUzZs3B8I0MzNz
      HP57got6ogsQ596n/7wPPfQQ+fn5rFy5kszMTPbt28fAwAAAjz32GIODg4FNc7/fj9/v5777
      7kOj0ZCZmcm9997LAw88cFLbW7ZsISwsjKysLF577TVWr159Ug3FxcXce++9APziF7/go48+
      4vXXX+f6669n37596HQ6rr32WrZu3coll1zCRRddFHgcHh7Opk2bWLx4MdXV1fz9739n3bp1
      lJWVsX37dl544QW2bt2KzWYjMTGRpqYmNm/ejEqloq2tjRkzZtDc3MwLL7zAddddxzvvvEN5
      eTl33HEHmzZtIi4ujvDwcFpbW0cE12fFxcWxYMEC9u3bx1VXXUVZWRnf+9736O3t5e6772bF
      ihXExMTwwQcfMHv27MB0MTExuFwufvWrX5GXl8cVV1xBREQEDz74IP39/cybN48HH3yQX/7y
      lxgMBnbu3MmSJUt49dVXyc7Opqamhvvuu49rr70WvV7PRx99xIYNG3j77bdRKBSkpaWRnZ3N
      5s2bUavV6HS6QN9qtZqKigqqqqr47W9/y7PPPsv69etHzNdzzz3HgQMHuPrqq9mwYQNNTU0k
      JycDnLSrBuDgwYN4PB5++MMf8thjj9HS0kJaWhr33Xcf/f39XH755bz11ltkZWVx1113kZub
      S2ZmJh988AGZmZls2rSJ9evX88gjj6DX67nqqqsYGhoChreW7rrrLpYtW4bNZuPtt9/mxRdf
      ZPv27RgMBrKysqipqcFms5GXl3fa90qcHdkFdAFauXIlv/nNb1i0aBH19fU88sgj7Nq1C61W
      S3l5OdXV1fj9fvr6+liyZAkAa9asQafTodfrsdlsNDc3o1AoaGxsZNGiRajVatavX09WVhYr
      Vqxg165dFBQUsGDBAmbMmHFSDVlZWaxfv57169cTHh7O/v37WbZsGbfffjvZ2dljmh+NRsPt
      t9/OTTfdhNlspqenB4Brr72WRx99FIB169Zx3333AcMrlYKCAlQqFTU1NXg8HmprawPtff/7
      3+e//uu/AOju7g4sg3Xr1pGTkzOi78suu4y6urrA7orVq1ej0WjQarUUFxfT0tLCihUrRkzz
      9a9/nbvuuouZM2dSVFTEb3/7W8rLyzl8+DAOh4O6ujpUKhW1tbWsXbuWlpYWiouLqa+v58or
      r2T//v34/X4aGxux2WwYDAacTicAX/7yl3nooYfIzc0N9Hfie7hkyZJAWO3YsQOXy8XatWtH
      1PdpoH37299m1apV7Nu3L9DGJZdcMmJrAWDXrl2kpqYSExODSqVi9+7dmEwm9Ho93/72t7n1
      1lt5+OGHOXToEENDQ9xzzz3cfvvt3HnnnYE2PB4PBw8e5IYbbuC2224jJiYGgKKiImw2G52d
      nfT09DA4OEh7e3tgWf/pT38iMzNzxPu0ZMkSLr/88jN9ZMQoyRbABWjv3r2Ehoby4x//mJaW
      Fn7yk58wNDTE5s2byc3N5Qc/+AG33377SdNFRESgVqtZuXIl3/jGNzAajXg8HoqKivB6vdjt
      dvx+P1deeSX3338/bW1t3H333aesISYmhvnz549o22w243a7R+wPV6lU1NfXc+TIEQYHB0/Z
      lt/vx+fz0dDQgFarJTo6esT0n1Iqj3+fiY2NJSoqil/+8peEhIRQXV09ok2NRnNSP3a7HavV
      SmRkZGDYqlWrePbZZ3nrrbdYuHAhMTEx9PT08NOf/hS/389bb73F888/z7JlywLTfPjhh8ya
      NYu1a9dSUFDAo48+is/nIywsjAULFgS2IgYGBpg1axbTp0/n6aefJjU1ldzcXCorK1Gr1dx5
      550kJiZSXFw84lv+ZykUikD9AwMDrFy5kueee46XXnqJSy+9lIiIiBHjx8XF0dbWhtvtxmg0
      EhcXd9q2+/v7OXr0KOnp6WzevJn4+Hh2797NzTffjFqtpr6+nksuuYTi4uLAbrC6ujpyc3NH
      HJNQqVSEhoZiMplwuVy4XK7A+wSwfv165s2bR2VlZWBr5HTv1dDQEAMDA0RFRZ22bjE6sgVw
      AfL7/Tz33HPcfPPN3HPPPVx77bVcddVVrFmzhk8++YQ777zzpINyMLySvuuuu9i5cyc33ngj
      99xzD729vSxYsIDw8HDWr19Pa2srixYtIj4+ntDQ0JO+/X7q448/HnEQ+JZbbsFoNHL77beP
      OCB91VVXUVlZyRtvvBFYkX2Wx+PhO9/5Dtu2beOOO+5Aq9V+7jK49dZbSUhI4Lvf/S7r169n
      z549px03Ozub5ORk7r777pMOMIaFhbF06VK8Xi9r1qwBhvd9b9y4kd/97ncYjUa+8Y1vjJhm
      aGiIhx56iBtvvJEXX3yR9evXs2DBAn72s59RUlLCzTffzE9/+lNMJhMKhYIrrrgCs9nMlVde
      CQx/y1+2bBl33303X/va19iyZcsZ5zU+Pp78/HwefvhhtmzZQkhICKtXr8bpdHLdddedNP6d
      d95Ja2srX/va17DZbPzgBz84bdufHhB+8MEHeeihh/i3f/s3urq6MBgM/PjHP2bPnj3ceOON
      vPbaayxfvpzrr7+e3/3ud3zzm9/k6NGjgXYUCgXf+c532LlzJ//6r/8aOMNr8eLF3HTTTfzh
      D3/gxhtv5JlnnjnlZ/NTl156Ka+88gpPP/30GZeJGB2F3BBGjJXdbud73/seX/7yl7ntttvG
      PP3jjz9Oa2srjzzyyOeO+/bbb7Np06bAwVsxOg8++CDd3d088cQTE12KmMRkF5AYs97eXtat
      W8c111xzVtOvWLGC/Pz8UY2bn5/P17/+9bPqJ1h5PB5mz57NjTfeONGliElOtgCEECJIyTEA
      IYQIUhIAQggRpCQAhBAiSEkACCFEkJIAEEKIICUBIIQQQUoCQIgAP421VegbDJzNudGWHhM9
      lkF6TG0Muk6+qNqpNFQW8cY/tgHgcVjpMA9fknr//n1nUcGp6/nUvs9r0+eite3Ml7oWFxYJ
      ACGO2f2PlzlUa6K1tpT2HjtD1j5KK6rx+cFgMADQ3tKCxw8tjbW0mboBD60tHRiamrD0ddNn
      tbHlpWfYtvsgba1tmPts4PfQ2nrs5id+H3XV5Zi6LVj7zDz/l7+TmzN88bWaIx/z/CtbaG4z
      sX//PoytTbQauwHobGumseX4DVRcjkFKS4rp6rMC0G1spbquCT/QbmigwdCOta+bPqsDn9dF
      WelRtn28C4Cezjb0jcOX42htaaHd0EB7Vy8djWVseOalwGviwicBIMQxsdMSqKssJ3HWAlJj
      VTz22FNYTHW8vHkb7215k0EvvL5lM3WHPuT9vRW89fLzGAf6ePiB/6a8vp1Ogx5DpzXQnspv
      56VXN2OqPUJBWTMAH77xEqXNZl597jHaLU78CgWqU1wDyWPvR9/YzrPPPkNX41FefucjCv73
      dcqah6+E2lSnZ8jl4Yknn8DcVMrGv79Hl9FI5aHtvLXjEEajMVDPCxsexWyxMzBgY7CrkWdf
      fofygv+loKyZV154itpmI8/ItXWCkgSAEMcsWP1lfv7Db3Pw/16j8EgJ9W3d1DSacDj6Wb04
      m4LdnxA5PQd9RSWWPjMev5/Orj5mZM/jK1evPvbPpCYtLZm8+ReRnJ5DqMPE+7uLueaK4auF
      VrT1cNN1a1m9JJfOAUicPp35+cOXx05LTSUlI4vM1CTUYTFcvmY1cVEhNNZW02+xYHN5MXcN
      76KprSqlqLiYts4eGvSVrL76q6y5bBV15eVcd+PXWb1iSWC+BjwarrxsFSmJsbQ31tLXb6Hb
      5qLH3IUuchpXrFlNXLiOlLQ0pielkpuVfp6XvJgoEgBCHHNo94f89dU36B5SkJyZz7L8FPzA
      zIwM5q+8nDefe5pVV6xh+Zq1eIesRMVNJy4qDJVSNaKdrNx83vifDTQb+7nuisWUd7hJCBu+
      7Na1qxbyyKNPsuNICxfnpYyYLmJ6Og2HPqLgUPmI4fOWrCJU4UQXGUNS/PB19G02G9qQUEJ1
      WhYuv5w9W//Gxr9sYvlVX+KNjY/w8ub/DUyfEadlw3Mv0tDWzcx5S4gPVaDSRZKWFD+iH3Sx
      2I0VvP/xqW8NKi48ci0gIcaLz8W2La+imLmaa5bmfP74QpxnEgBCjBefi+q6NvJzsz5/XCEm
      wJQKAJ/PN+KuT0IIIc7elFqbTqGsEkKISW9KBYAQQohzRwJACCGClASAEEIEKQkAIYQIUhIA
      QggRpNQTXYAQQkwV5Y1dVDR1TXQZ54wEgBBCjFJFUxev76yY6DLOmXEMAD+9vf3ExcXidQ1R
      3zR8idmMrNloFW4am9vJmDkTjUpBf08Xdo+SlMRpDFgsREVH4xqy4VboCA/RjF+JQggxBjeH
      FfCVhGcmuoxzZtyOAezZ+SEf7zsIgNmgJywxi9zcXEI0SgoLD5KWlsLBg4ew97ZR2z6AasiM
      vsVMVVUV4OfQoSNotbLyF0KI8TJuWwCXXnkdu3fvBsDuVjJoasTaqSI/NxOlJhSdLgSVwkdz
      fRs5i1cQo/LRWHgYr8vOgb0FZC9chkYJXq8Xn2/47kperxePxzNeJQshxBl5vRfW+ue8HAPI
      mrMAgL6WSqoM/ShOuOGeVqPA4/aB0gsKFWptGJkp8fT29JIUE4ZKpUKlGr7crlKpDDwWQojz
      zalS453oIs6h8dkF5HWi1+vp7Oyi0dBOZ7uBquoaatv6mJEQQ7hOQVVVFbrwGDLz8qgpPkzJ
      kSNk5s4BICkjB09fC6a+wc/pSAghxNmaUlcD9Xq9sgUghJgwzsJncB2Qg8BCCCGmOAkAIYQI
      UhIAQggRpCQAhBAiSEkACCFEkJIAEEKIICUBIIQQQUoCQAghgpQEgBBCBCkJACGECFISAEII
      EaQkAIQQIkhJAAghRJCSewILIcQoeQbCGWpLnOgyzhkJACGEGCWPNQJH+4UTALILSAghgpQE
      gBBCBCkJACGECFISAEIIEaQkAIQQIkhJAAghRJCSABBCiCAlASCEEEFKAkAIIYKUBIAQQgQp
      uRSEEFNUY0cfL75fMtFlTDrfu/4islJiJ7qMKUECQIgpatDhpqKpa6LLmHQGHe6JLmHKkF1A
      QggRpGQLQIgpKkNt4tfRr0x0GZNOhnoOMH2iy5gSJACEmKLCFE7ytYaJLmPSCVU4J7qEKUN2
      AQkhRJCSABBCiCA15gDwuQZpMBgBqKqqwnfOSxJCCHE+jDkAeg0VlNR3AFC1bw+9csaVEEJM
      SWM+CBw/cwHt/3iUPx35CF18GvGa8ShLCCHEeBtzALjtFpZf83VWLMyh4KOduP2gVYxHaUII
      IcbTmHcB2XuN1DQO7wJqrC7H7j3nNQkhhDgPxhwAMZmLiHc18ac//pH4OSuIkV8SCCHElHQW
      p4EquO7Gb7J6xcXoi/YzIAeBhRBiShrT93ebuYXnX9mMz69kqLuTf7nnQaJOcxD40N6Pae5x
      cssN19HT3kR9pxWv3cbilSvRHz2EOjQShwcWzJ7B/qIqIrWQNHshhppSVqxcScnBvcycv5yY
      MDnKLIQQ42HMO3BUShUqlRaPRoNKpTrteAuWrGLo4EEA6lpMLF+5EntnHXpDF4NuWLl4DoWF
      hTTVWJmzZDnTdF4KD5aiADpb6ghLnEVMmAav14vPN/xrA6/Xi8fjObs5FeIC43PL5vepuN1u
      vM7xuRzEhbb+GVMARCSkc/dPfoLbMcjB/Xt5/dkN/ODuu0+5FRASEnL8iUKBAtBotLjdLhQn
      7HnyePyoNUpQAH4vHpedRkM7mXOXAKBSqQJBo1Qqzxg6QgQTj0bDhbU6Ojc0Gg1qnW5c2nao
      L6yDnmd1KQhNSDir117Lz35+6pX/ZyXFhGHo7EPf0M6s9BT8HgdOpwOvX0nGrDTqqhroNOiJ
      m5GFWhvGykvX0FB2iCG3/M5YCCHGy9jjzO+ltLjo2MpZyUVLl6H77JdyrxN9fTNJSUk0GtrJ
      yltAZ0cLkTkLiAlVsXzFcpoMbSxfvgyNSkEOXQy6leQmTmMgWgsoWLlqBVaHg1BN2LmYTyGE
      EJ8x5gDobSxhx5F6rliSCyhRnOpHYCodubm5IwYlpqQHHivVWmbNygo8j46bTvSxx1HRw49U
      2jBitGOtTgghxGiNOQBiU2dh63iP8nIXoCF34UVo5ZqiQpx3XnsI1qqszx8xyGjtIXKjk1Ea
      83Lqb28gJX8ZV6ycCygIkZW/EBPC71XhsUZMdBmTjt8rJ4qM1thPAw2N5Mgnf6HPUA5o+Pf/
      9/+IkhAQQogpZ8wBEJWcy/MbnxmPWoQQQpxHYw6Agc4m/rLpXQB6e638/L77RnUqqBBCiMll
      7FsAiTP5yU9+AsA7r72CUnb/CCHElPSFtgAGnQq+LPcCEEKIKWlMAeAY6OZQeQPz5s07NkSF
      3z8OVQkhhBh3Y9qBo1TrSExMJDExEVNzNf94bztuCQAhhJiSxrQFoA0Nxz3Qxd6iShYsX8OG
      7y9E9gAJIcTUNKYtAHN9EQ8//zper5eS/R/z+GNPyQ1hhBBiihrTFkDC7KX8/W9Lx6sWIYQQ
      59GYAsDn9fLp1d+Ucv6nEEJMaWMKgB2b/4IuMYMBZRLXrcofbkCtOfUVQYUQQkxqYwqA1dd+
      lRefe5qWwRBM+gOAmm/dfjsRcuk9IYSYcsa06g6PTeLOX/wWfUUJxRV1rFhzpaz8hRBiihrz
      jnxnr4H391ZwySUrePvlv2KXuzYKIcSUNOYA8Pt9KBRKQo/d9F1+CSyEEFPTmHfghCfmcMNl
      Frbt+ISb/vk7hMu9F4QQYko6qz34s+cvZfZ8+T2AEEJMZWPeBdRVe5iPDtcCsPOdLfTJL4GF
      EGJKGtMWgLXLwEub3sbkCEF/KB6rQ8kauRmMEEJMSWMKgMjpGdz905/R59KSPC1qvGoSQghx
      Hoz5GIDf62Djhg2EhoURuCm8bAUIIcSUM/YAcA+xaPX13Hj1svGoRwghxHky5gDweJUc3vUu
      +uJPkC0AIYSYusYcALrIOL761a8ee6ZEJxcFFUKIKekLrb737tmD/BBYCCGmpi8UAF6bDbsk
      gBBCTElf6FqeX7n128RN0quBdvYN0tU3ONFlTDrzs6ZPdAlCiElizKtvbUgIh/Z8jMXhJSpp
      FnNyZk7KG8N/XNzE6zsrJrqMSefdh7450SUIISaJMe8C6mkqI+XiL3HfffeR4rfQI5eCEEKI
      KWnMWwDxmfNoe+dx/nhkB9qYFOIn6SmgCcp+8jWGiS5DCCEmrbHdFN5p4WidmZ/88tcAHD50
      CD9Myl1Al4aUsTzmlYkuYxL61UQXIISYJMa0C6jHUE1L9/EDq+0VpbILSAghpqgxbQHEZ86h
      9NVHiNMMgdNCqXmIdZN0F5AQQogzG9MWgFIbxX/86v+BewhFSAz/8bMffbEfEgghhJgwY78U
      RHg0l11+xXjUIoQQ4jw6L1/gXbYejpZXodfrcbh99HebqKqqwtxnA/w01lZTVV2Lzw9tra0A
      9Jpa6bfLAQYhhBgv5yUATIZmkrPyyM3NJUSjpFLfwJw5c6irLqOnpQZnaCKzZkRSUtlIW1sb
      fo+DioYOYsLkAIMQQoyX83IhB21kHL1tdbRabcxbNB+lSgeAQqHA2GEhY3k+OgW4rIV4XXZ2
      7NjFJVddA4DX68Xn8wUeezyeUfVpN0UxVJU1PjM0hWmdzokuQZwjbrdsIZ+K2+1GMU6f89Gu
      f6aK8xIAiWmZJCkU2Iy11LZYwH98IUZHa+m3OIkId6NQR6AGLl2UzdGyKlYunodKpUKlUgGg
      VCoDjz+PwxuKxxoxHrMzpel0uokuQZwjfo1sIZ+KRqMZt8+5Qz1JL352ls7L3HR1tNAzMMSQ
      3c78RbMx0UdVVRUJyemkpU/n6NFyeoD5CxdiqKshNDqB1Ggzpr5BkmLDz0eJQggRdM7PFsCM
      DBJnHH+enpUz4vVFF18ceDxn7lwA0rLnnI/ShBAiaMlp/EIIEaQkAIQQIkhJAAghRJCSABBC
      iCAlASCEEEFKAkAIIYKUBIAQQgQpCQAhhAhSEgBCCBGkJACEECJISQAIIUSQkgAQQoggJQEg
      hBBBSgJACCGClASAEEIEKQkAIYQIUhIAQggRpCQAhBAiSEkACCFEkJIAEEKIICUBIIQQQUoC
      QAghgpQEgBBCBCkJACGECFISAEIIEaQkAIQQIkhJAAghRJCSABBCiCAlASCEEEFKAkAIIYKU
      BIAQQgQpCQAhhAhSEgBCCBGkJACEECJIqSe6AHxuiotLUSiV5MxbiKGuhjlz59JYU05ceh4x
      YZqJrlCM0q9f+JiKpq6JLmNSmTdzOv/9g7UTXYYQpzThAdBaU0ZC9nxSw90cPFoFHhtDli66
      nWqyZOU/pfzc/R5uZ+lElzGpaNwLAQkAMTlNeABYBtxk5OtQKHT4PTa8Ljt79hdzyVXXTHRp
      Yoxc3bE42xMnuoxJxR8dO9ElCHFaE34MICUlmva2XpwDRrSRiai1YVx99eUc2rcf/0QXJ4QQ
      F7AJD4C49Hx0TjMNHTYumptFamoqCnUIS+bPorNvcKLLE0KIC9aE7wICmJmdG3icmpYGQGR8
      MpETVZAQQgQBhd/vn9R7WrxeLz6fDwC/349CoRjVdB6zGY/ZPJ6lTUkhc+aMW9uu5mZ8dvu4
      tT8VKcPC0GZmjkvbvsFBXAbDuLQ9lWkzMlCGh49L2xfaemXSB8CJvF4vKpVqossIGm63G41G
      zsQ6n2SZn1/Bvrwn/BiAEEKIiTGlAmC0u3/EuaFUTqmPxwVBlvn5FezLe0rtAhJCCHHuBE38
      VVVWBh5XVlWeYcyRvPZ+mju66e80Yvee/HpzeSFGGzQ0NIyqvaKiklH3PRqunmbKm3tO+ZpR
      X4TRdk67mzRMjZX0DIGtp506Q2dg+R8oLARXDweK9KeZ0kbJaV8Lbif+X5zq83ygsHDEc2NH
      xwnPvDQ0NJ80zWj/L4LVicu8srLqrNqwdndgdQ0/Liw88Lnjn7gOmhSngZ4PAwMDIx77PA70
      tY0otaHkZM+ksbYatxcysnNp0pejUmuJjE8iJVqNSgU15QdQJ89mdkYGfZ0t2B0ukjOyA23q
      tFp8bgd1jQZsln5yFy2lp60B25CHnPw8hvrNtHf10WuxAuD3DtFqsjE9Epq6neSlxtDe50bj
      sdI7YGV6ykz8gxaiUpJxdnfgDUuks7kKhVqLNjSKzNRE6vQ1uG3dMG0uPV0ddHX3kTAjk/gI
      DTX6eixGIxkzzvuiPi8cgwP43W6qqltYvXol7a2uk8Zx2Qeob24nIjqO9BmJNNfrcfkceAiZ
      gIonvxP/R7Q6LQDNDbU4PT4iYhLwe93U19Xh8ilIT4qjuLiYPJeXWZlpgAqtTkV3Ryvdg07c
      Did5c+cSGhoGuDB2DJCcMo3WtlYAdLjp7LcTM20GaUmxGAwGMjIyJmCuJ9Zn10ufXX4dTbUM
      ub3MyMjGZTVj7h0gITkNa3d7YB3UXFWCI8pK/qw0bAO91NbWEhIRQ1piDDX6etQhEczOSqej
      tRnrkIshlyfQZ9BsAfjcDvR6PXq9HpcHSouPMjM3n0Sdk9oOM03NRjJnzSZErXQ2JWoAACAA
      SURBVKB/wE5uXj6G+hpw2Wjr6icpMYWZs3OJjghh2rRpqNUqKsrKA+23tbWh1ISQnTmDQbcC
      ta2NHlcoedkpHC2toaKmnvy8XOKih3/doFCF0N5ST0NjO/09Jlrqa9GEqmls6yE/fy71NRX0
      GE24AFuPkf4hL919FnJycunuaqehooSoGbPInpkOgL6+mfw5c6mvLqe0uJiM2XlkpCZPxKI+
      b6qO7CM+bTYKhpf/ZxUfrSAvP5/O1ibMrdU4dNPJyZkVPN96voC2tjasnQ1YiSY3N5XWxg78
      ChVZ2dkM9ZnRRseRkpx8bOV/fJoeYyvxqVkkR3hp73NhNJoAFyZjT2CctsZajBYP8+bOoVFf
      jr2nBbNN9kQDJy2/hqZm0jNnERGiQl/fQl5eHnFRYSPWQUmJSWRm5xITGUZoRDQ5OTl0GBop
      Ky4mfXYeqsFOTD1mWswOcnNyCNUe/w8ImgBQakLIzc0lNzeXE+Yfv98Pfg2XrVlFc+UR6jss
      xw42+1Eoji8ehcKPz+sH7yBFZQ3Mnp2DVv3Zg9J+Dh4qZvmKpfj9PoxtBuqbTaSnJQUOYB8/
      5KJApVDgBOJ0KposXhIjNIF2hsfz4fOB79g0KuXwKbAKpQK324tWow60N9BnRq/Xk5CUisfn
      R6NScKEf3pmz7HKsrRXYnKfYNwe4HIPU1eqJjI7D43aj1mrx+/1yiZFR8nncqDTHl5lSqUR5
      wokYvlN+vpQoVcqTTtjw+f34/T78PkAbxsK5OSgUSmbEhrD9gJ75+ZnjOSuTVoRGyYDTi89t
      R6kJZeTy83PpZWswNldSXd+BUnlsmfrsI9ZBCqUCr3f4f+DTdQT48XlcNNTV4dZGEoYHhUrN
      8XXLMNX9999//3mc3wkVFR0deDx79izqa+uw+0PJSZ9GQ30jPqWOjPQZ1FaV4vF4SM3KISxE
      AyodM1KTaK6vQxcRh8JjpddiIzYujuioSEIiotGpIETtpcviwGEbIGr6TMKVDrx+P+FRscRF
      aGnpMKHRhZIwLQ6AcK0CnzaarLRpWB0KkqYnoFW4aW1rJz0rl8TEGBrrmnB7/SRMTyJEowjM
      Q+asLBr1NdicbuKmTSd1eix2hxtdSBg5WWnU1NTh8vlJSExGd4H+dCIkIpqZ6cm0tZmIi4kK
      LJuo6ChQaJidlUZvvxWFWkvmrBy6W+roG7ATGxdPVGTYBFc/+QxZ++nu7Qe1jrAQLdNTs7AY
      G+nt72VwSEVaakJgGUdGRaP0uujstRIXe/z/KioqmrDIKDRK0IRE0NdtIiUlHZulkz6LjeiY
      WGJiooiOGp4mLiGepqZ28mbPnJB5nmjTExNpqtNj7rEwd/48VArFCcsvDKOhAZdPSXpGBtHh
      alpa21HqolB5BwProOS0dFoba9GGRhCi1RAdHQXA7Jwcent6USgUTEvJxGfvxtzTR0RULLEx
      w+PIWUCnUFlZxdy54/eLWSGmAp9rCH1DM16Xg+SsfOIjx3bsxNrfTXNHD/Pn5J52nLqKYmLS
      8kmIDv2i5YqzIAEghBBBKmiOAQghhBhJAkAIIYKUBIAQQgQpCQAhhAhSEgBCCBGkJACEECJI
      SQAIIUSQkgAQQoggJQEghBBBSgJACCGClASAEEIEKQkAIYQIUhIAQggRpCQAhBAiSEkACCFE
      kJIAEEKIICUBIIQQQUoCQAghgpQEgBBCBKlxDQBHfwdFVY0nDfc4rDS2dAw/tpk5WFo7nmVM
      WrW1Z57viV42+/ftm7C+hRDj77QBUPDuX/nggH7EsD/912+xukd/D3lHv5Gi6qaThnscVppa
      jcOPbWYOltWdtg1z3WEe+8s7I4a9/eJjlDT3nrHv1//nSe665wF8JwzTF++msNww6vpPx++y
      8Ov//MOIYfoD/8er7xeedpoHHnjwpGG1daMIgFMuGxd/e3nTyHEdVjZueJSnn3mWjRuf472d
      X3zlXSgBIMQF7bQBsOLyqzi4e2fgucdmwhGaRKRGAYClp5OSklLsTs/xifx+GmurqKypw+c/
      HhSW3i5Kio9id3kBCImIY/bM9FP2ax/oo6SkGIvNAUDC7IvpaSg+YUXuo8xgYWFmHACdbc0U
      F5fQbxs6oQ4PrX0erps/nZLGbgAGLT0UFRUF/sx9VlyDFkw9FkxtzZRV6vH5j9V6tAynxzei
      puLiYnr6bQAotNFM19rpHDw+7zsLjnDVmqUADPSaKS4qwmg+c0gtnL/whGd+DA16jpZV0tfT
      zwlLFWt/NyUlJdgcbgAqS4/PR3V9MwCvPP80K79yK3f+8N+5445/4/q1qwLtNtZWUVFTj+/Y
      W+JzDdJm6jne7pDreBU+L/qqcqpq6vGOPuuFEFPQaQNAG52KZrCdT9dxRwo+ZullVwJQefAj
      Xnzz/3C77Dzy+wfpsrrA7+HpPz9EeUMHvcbmwK6L4r072bH7IM4hCw/98bHhxmwmXn+v4KQ+
      O+pLeHzjq7jcbp5//I/UdvQBKhakR1He0g9An6GMmMyFKIEjO99iy47DeD1O/vHWP3B/2k71
      QabnLOGyK69g146dJ/XzqV5DBQ/9+TGKKxvoqDnAz3/9IDv3HMJuMfHwky8A0FJ1iIef+Rse
      r4fNf32KPUfrAbjysiXsLDgCgN9jo9MZQlKEGnNzOY89/xpen4/9H71HS8/Qaft/4/U3ONYA
      T/7hQY5UN+MaGuC+X9yD7dg4ZYd288HH+3A5bPzu9w+fuiH/EE3dPhbMTAwMUigUgI9nHn6I
      ikYj3a21/P7hDXj84Oo1cP9//5EPdu7D5Rjkd394BACf08pDDz5As6mP/u52Wjv7Tlu7EGLq
      U5/pxTVLcyk4oue6FbnsKa7jzv/4FgDvbi/kV7+5D5UC0qN8bN2+l2tnqwjNXsUN110RmL6/
      uYiLV1/JP900HBx7Cw+esZg3t7zPj3/2ayI1ChblTOeJV9/nlz/6Z9ZevZZXPvqEhbffxCcf
      7eLKa78LQFtLG/kLv8LSi2exdNmKQDs7du7jitvuJjxGi639NTx+CI+OJzcrA1NIHosXzwHA
      ZISll17Nl6+9BBwmDjds5eYbvgLAzt3Du2zeeOcDfv6r3xKmVrBsyUU8+N+PcOmi/2Du8st5
      4/fPwnUrqD1SQP6yywHo6+pgWupsFi9ZytKlS0f1JjQfLSBmzlq+9pXVABzY9lHgtQXL1nDL
      zdcDsHv/8C6muQsvYtq0PSxevHh4JIcJTUT8Se121R5GMeNi1n1pePlrHK9QcLSZVcnH2v3a
      p+3uB2D/trdZse67XHlRJgCF+8/8fgkhprYzBsDyy6/mD8+9y9XzonGHJhF2bOyezmZefOH5
      4SceB6HJc+gy95GauugLFWPpM7PppReOPfMRER4LwLSsi7D87T383EBlu5WbUqMB+OqtP+D9
      re/yeMH/ootI4Hu334oWJ/sOl+LU/Q2ArvZGDtcYWZmffFY1+ZQ6wtTDu71QaFArh3cNKbRR
      TNc5Mdu9fLy3hH/64X8AkLP0aszWD9jw5OP40HDb7d9jWmTIGfvoMptJTl5yVvUBoI3Caes+
      aXC32cyMGRmB58lJyRw2d0FyxCmbaWtrZ/llGad8TQhx4TljAGgikwlxdlGw62OWrrkqMDwp
      JZN//u4PCDt2PMDr9TDQXk3B9iKuWTbrrItJSkpm3Tf/haQoHQAej/fYK0oWpEezd99eYjMX
      cWx1jE+hYd0/rQdg+5vPUdLQTaKtjEtvuZPbvjK8D9x+01qe2LSdlfn/glajwe12MxZRWi/t
      /UPMiAnFM9SLV3V85XnN5UvYuWsP3e5QEsJUALg9Xi658nouuRLaKwrY+vFBbr9hzRn7yJ0z
      j2fe2ctVS2eBz0tf/8DnVKVCofAef6oMIz3aR4XBzLyMhMDg9Fk5bN1ykHWXzQegvKqanMu+
      BXSestW09DT0tXXMXJYDMOI4jhDiwnPGAAC49OJsfv/aXt545VuBYbd+40Ye//MfiY+Pxefz
      snDllaxaNJ/82FKefOppdGoVc5ZcxvxpYytm/a3f4tmnHyEqNh4FPmbOWcy1ly0D4IqrLudb
      //prHvnr64HxD+76gNK6dtQqJdYhLz+8KZ7XnjrIV3/wi8A4YQnZeMx/xemDvMWr+Mefn6Kz
      9hBrrv4KMaOo6bbvfIdnnnuCqNhYLP39/PN3/i3wWs6Sy/jzt77Jl+54IDCspaaY93cfQadR
      MzAwwDf+ZXj8vo4Gnn9+eKspIT2Xm750PBSiU+eydl4TT254msjISIY8Cs5MQ356DE9seJqZ
      uQtYd82l3P7Du9m4cSO7tRFoVAqSZ83jq1et5uIZR3j8yafQKH1EJGZxw8x4HKZTB8DKa27m
      iccepf5IApERYbR2fV4QCSGmMoXfL1/zJps//u53/PQ3v0E70YUIIS5on7sFIMafe8DExr+9
      hUarxuWwkb3kcln5CyHGnWwBCCFEkJJrAQkhRJCSABBCiCAlASCEEEFKAkAIIYKUBIAQQgQp
      CQAhhAhSEgBCCBGkJADEBWv/vv2Bx65BC22mnhGvlx7cj83z2alGx9TWisv3+eONlWewi517
      SwLP+8wdWAaH79fQY2oLPA7wuWhtMx2rqZnBURZl6enkaGkFLu/oxt+3fz8Oax8d5j4sPaZA
      HY2NJ9/xT0wdEgBiSmsxGPADvV3t2BwezMYW6prbgOEAaG2qw9jdj8dhxdjdB34fddXlGLv7
      KTsWAEPWPkorqgM3zDmRrb+b0vJqvD4/rU11lFfX4fc4eOmZDew+WITV4aGnsw19YwsAXtcQ
      pUdL6eg0A2BsbQrU09raQn+3kcaGBix2Fz6XnTbTyKu4Hi7YQ0ZubuB5ccF7VBiGbyzU123E
      6vCM6KOjsYwNz7yEvrGFbmMrDg+0tLRiaNDT1Tt8Lad2QwNNhhb6LYPDz2uLePLFN3HaLZi6
      Bhiy9XO0tBy3z0+fuYPOri4q9Q0AOGwWSssq2L13H65BC509Fj7c8hLvbNuNuc9Ka2srAF3t
      hsAyaG1twdjaRKvx5CvUislFAkBMaSW73qO2c5Atm16n31TH/7z+Poe3v8UhvRF7v4nG9i6e
      fWYjLmsnJXoDW197nrJmMybj8C1J8Tt57LGnsJjqeHnzthFte2xm/vTERuwDXfQPWKiqbaH2
      4Id8cKAmMM5gVyPPvvwO5QX/S0FZM089+ics9iGeeGIDbdUH+PvW3ZR88g+2Hazh7y89y7aP
      C3FZ2nn93Y8p2/ch+g7riD7rzINkJ4Sdcl4N+hI6ra4RfZxIX1KI1aXkhaceodnYzdNPb6S+
      5BPe+L/9HP7oHfZVDN8O9aMPtnHbHf/O8pWXkJ4YwiMPP8HggJnHn/kLxQXv8faOA3zy9ktU
      Gi08/Mc/Yx8axO7wYu9tp6KhfUSfBw8eoavhKC9t2UbN/g94d3cpr730LNUNbTzzzNNn9Z6K
      80cCQExpa65Yzf49BThVkXQ36+nvt9Dv8GDu6iQsJok1qy8hKkQVGF/fYeGm69Zy0fz84QG2
      LurbuqlpNOFw9I9ou6+9gZmLVrPykjVoXb0cPnIYQ3snPZZB0pKnM/+ixQx0NNLXb6Hb5qLH
      3IlbE85lq1YwPSaCupoKLr32q9z0lWuorNKj0EVzyy03k3fxpfQ3H+VAZQeXLpoZ6M/ZZ0AX
      c+pbpZ7oxD5S0tKYnpRKbtbx6SKnpbFm9SWE65ToK8u57uZbmJeXHXg9LFTL4LFbrmLrQpuY
      xyWXroXB4V1kyy65jPycdBwWE6HT81i5fDlRYccvG5aWlsbsvPkkxEYC0FBbxcq11/PVG66j
      rrIadVgsay+/lPjo0FG+i2KiSACIKS0mfT6t+98kY+Eq8hYtJ0rjRRMWRer0uFOOf9WKeTz8
      2AY+2HVgeEBkCsvyU/ADMzNG3gxn2qyF9FbvYePGjXT22nG4PERFRQGQmz+T/9nwJKFp84gP
      VaDSRZKWNI04rZeNL/6Ntm4ri1ddyfbXN/Lo829yzeUrUaqUx+5loWDV3BlYtAloT/gP3LN7
      P6svX8VnffDO39n0zoeB5yf2gS4Wu7GC9z/ef9J0AIuWruK1Zx9mx57Dx24TCl/+p/Vs/duT
      bHzuOWp6tcS4DDz91BMk53zmhk4hCSgsel56+RX6Trj/dUZWLv/3xv9Q3Ty8FbVw+WXsefev
      PPLUy6y96tJT1iEmJ7kYnBABPspLSgIHdxNnZJKadPKtNs/kwN5dKFQqdu4v596f/fCU43gc
      Vl5/+SUWXnsr8zOOt//KKy9z223fPid9fMpoqKOxo5ej+3dwxS0/Yk7aaO6CIYKFBIAQ51BP
      ZzuGjm7y584jVKs65Tgeh5Umk4XZmamBYX7PIGU1RhbOyz7lNGPt41Net5Pq6moip6WQkTJ9
      bDMjLnhTKgDsdjthYac+QDbeuru7mTZtjLc4O0fsdjvAhMz7+Zrv89HPhdLHZOx7ovs/m74n
      qt6J/H+GkfM9pW4I4/V6P3+kceJyuT5/pHESDPN9Pvq5UPqYjH1PdP9n0/dE1TuR/88wcr7l
      ILAQQgQpCQAhhAhSEgBCCBGkJADGyNbfQ31jM95TXTfgNAZ7jTR19AB+OlqbMZl7Rz1td4eR
      M+2p7O7swDbkBsDjtNNuMo+67RMZjR1jGt/rtNNmPN5XR6sB9zhcG8dgMAQe93V3Yvn0B0zj
      oL392K9cvc5z04/PTXtHJwBOuxXHOV5A1u4OrGf4cPSaTdidw/ubByyWc9o3gLHj9J8Zh81C
      T7/1vPd9Lt7D1uYGamvrGHJ58Drt2BzuUU/bduzSGFOFBMAY9HY0Ud9pJTM1kSHH6f/ziouL
      RjwvrW4kMyWesqJDaKMSYKiHyvrRfVB6jKYzBkCNvprKisrhx5UVVFTXnGHs0zN+emmEURrq
      beXDTw7iBfzuQba/9wEDZ7qwms1IkX5sfQAc2PkebX1DAFQX7aWqyXTG8YuKSs74+pkc3PUh
      9e29MNR7yn6KiovH1qBngA/f30bvoJve1lpMJy0gGyVF+rOu19ZjxHaGD0d1dSUlJUcBqKqq
      Oun1kqKik4aNhekMnxlTUxWfFB7Fd5q+jfoijLZz3/e5eA/bjGZmZ8/kwP79DPW20mQaGHVd
      bW1tox53MphSZwFNtFqDieUrV6IAIrTQVFeD3elAoYtjwNyCe2iQyOnpdHQYiYwxMDsrA/xO
      FKpQFMCgy8e06HCInk1zYSFF1i4WX7QYfdEBps1fgbW1FrvDgVcVQYzGRe+Qj25jF3NyTn9u
      uEoTjsLvwg/YPRAdosbW005lczc6v4PEWfOoPrKH1IyZdPVYuDg/ndJaIyrPIDmLVtBYeZiw
      qHgGBp1jXh5zZ02n1tCD1tpMzrx5ABQfKiQ0MhqHR0mE2onTryMiKpoQhwljm4PO+FASp43+
      x0jpefPpqK9hel4KobEzcAC1VWV4FBr6LTYW5aRwpLaTaXHRzJgWhdHYQXNrIplpKWOen+Ss
      OXQ2VzNrYRZ8pp/87HSMHR0YElPImJE06jbnLLqY6rKjZMUNf9cqKz6EJjQSm8NDZnIoHcY2
      EjvjSUmcRnN5MZG5F0NHOd26mfTWHyE2IZHk1Jk06UvRhUbg9KlJiVbT2juEu9tIxozT963S
      hBEf5qdrYPib8Imfi4T0bDqMRsL0ejKzc9GpoLiomIsXX0zhgULS42PodPqJjohiegRUNveA
      08rcJSvRlxwkMnYa1qEzn0WzaE4mZTXHtuB8LgoLjxAdE4VSF8lQpwnHkJ7QWWnERIaN6Hv5
      wlx2H64laVocs/MyOLT/CJGROsLjM3H1t+FThdDVe+qtinP1HiqUanTak1ePfs8QhYeOEh0d
      jiY0ju62eqYlpdDWZmTN2jXDfR49QETmQuiqwR6dTXZi5Bn7mkiyBTAGSr8f76d7fnxuLFY7
      ak0oln4zXpeLJZddzaL5+aSkJA+v/AE8g6D+7Pm+fjh2UYDjg7xYLDZUah0Dll46ui0snDeH
      1OTP//HOzIQIahsbCIkZXuk11LWyYPFCFi2eT1t9E6GR0eTk5KJTQ3NdI7rIMKIidJjMHbh9
      4eTl5hAVrhvz8ohInIWtq5F+h5/4MDUwhMsXRn7+HDwOKwnx0/B4PbicLpKSkkhOzRzTyh8A
      pQYFHmrrW8nPHV6mvQN25uTnMz0E7LoYwjXgdrqIiE0gOTnlrFb+wxTMm5VCZX3HSf34oxNJ
      Thnbyh9AodSQEq2mo2/43G+7y0d+fj54HCQkJZGSnEpK4qnPRY+Pj8PtcuHx+TAaTShVagZt
      Vpo6ulm8cB4Zqcmf2//s+YuoKx/eCjjxc9FhMJKSnExu7vDK/7NiEuLB48XlctJY10x4ZAiR
      oWq6utrwquPIzc0hMlR7xr7D49Nw9bbh9sNQTythSdnMmTsPa18XSYlJZGbnEhN58rnwSm0E
      0eEaXG4n9q42+j0atCGRWHo7sQw6mZOfx/S46NP0+sXfQ0ufGb2+hsxZuSe9NmBqJjZ9DnPn
      LsDSY0Sp0ZGTk0NCTCSfntyZs+Ai6sqP0thpY9YkXvmDBMCYLJiXw5HDRehrqrFYLPRYBlEw
      vDpX6UIJ1RxbnF4XtY3HvvloosE9vAmZPC2GsopK9hd8wozZc4kJ0VBerafd1AV+F719Vj5t
      cFp0GGUVlXSMYp9+QmYuxfsKycse/mXprNlplBWVUnKklNTsmQxZLehrqvEpQ8iYlYlr0AHa
      SJLjp+N396GvrcVqH/sWAIAWJ6rQ2GPPQtEq7VRXV6HSReD1KwjRqDF3m0EXwYCpkc7u/jO2
      dyqzEiNp7PPw6TXd4qLCqKqqpnPIT7jfQ1hYGIN9Zpw+8DhtNLWO7XjGiaKTZmI1G07qJ0YD
      LrsVQ9uZd0Gdysw5CzHoywEI0yqprq7Gr9IBOmwDJjo6hy+bHBEdTn1lJc2tw7s3lCoVarUC
      c1cPKclJ+P2QkpJMyrRoissqaOkYRS0KNRnTw2nttp30uQgPUVFZXcOxwwS4HDZq6+oYGHTi
      8foJC9FgNneTOSuDIbsTVVgM0+MT8do70dfWYTvDbtBPLVqQR2lFLaHxadhN9VRVlhMRk0BE
      bDyNNWX0W4eDUav0UaOvpbO7H7fbRUhYGK7BPtzhScRohgtMTkkhTKOgslqPue/0u2W+6HsY
      HZtAbm4eKYnDl+lob2lCX9eID4hKyqSvpYrKilKi4k4TJEod0VoXytC4z37Nm3Sm1C+BrVYr
      kZETk6gdHR2kpJzdN8vDhftYsGwVOtXwx8E52E9Hj4OZ6aP7Nmm1Dh9MO9t5LzxQyMoVK89q
      2i8y35Otnwulj8nY90T3fzZ9j2e9FUUHSJ+3jCjdyd+xv+j/8xd14nzLFsB5cPHiRXSfcOaP
      Ljxm1Cv/c2HOnDnnrS8hgp3TbiUhM++UK//JRg4CnwcqbTgzksInrP/oqNPtLxVCnGu6sEgS
      J+YyP2M2+SNKCCHEuLggAqCs5Ah6vZ7S4iL67W4aGhpGPW3hgcKz6nMsfRwoHH0fna0NZ/xx
      z2nr0VdSo9ejb2gGoKK0mMqyEjr7Bj93Wpulh+rqGipKi+mxnpsfWp3uHPOxLLfPc7pzybs7
      mum3n7sLbjWXF9NzTq4b5sLYcX7vkzvW5T000Et5RRWVZSWYem2YWhupqKyiunb45u9j+Vyd
      zXtdW1VOTU0NVbUN+Nx2jhwppri4BJfXT7uhnsqqKmrqm8fc7tly2geoqqqmurKM9q7jJzBU
      lpWg1+tpbu2gu7ODo4f2sL+ofEw/8vwsv8dOWWUdAP3GRlq7B6mqrBz19GNal/l9lBcfuDB2
      AdkdbhZclIvVWEuDsZdp2uHT0zpamhiwO4gMDyMsLoXYUD+Gtm4iQsDcO0BCctqxFvzU62tw
      +dXk580+7ZF7a3cHVq+ato4uUqZFn7GPMK2Pnn4biTOOnQ7q91Gnr8Gj1JGXMwsF0NLSQnp6
      GkePlrJo0SJaW1sJVelQnfkS7wF9ZiMdXX2kpGfSO2Bn6dKlADj7W3FqE1icn0ph4UHiLppH
      bUMLkTHx+BwW3F7weL2o1Sp0YdGkz0gkPzoea2cjDcYe4iNPPrnc2GEkOSWZ1rZW0makoK+u
      wafQMDs/B2NzPQODLrLz8vEO9tHc3jXiPG1DQy1Dbi8zMrLRaU9/6mB/pxHttGSwdmJXxWLv
      bsHudJOcloVnsIeu7j4SZmQS///bO/PgRtLzPj+4iYsgCZLgfd+cY2d3jp1d7ZGVLNmWHFuW
      7fIR2bFUtRWnXKm44tixHJU3h121LttVqThxKoqSyLHiOOvEUpUtx/ZK2h1Jc2s4B0/wBAke
      AAkCxEXi7PyBIYfcJQE02ASGmO+pmiqip/v9vW93v9/X3d9l0TE5NcPW6pN+8OurbnxbYapq
      HVRoNGi0R5/EjZVVKpsaiW2skDI52Fqd3fNvZ8vLxmYAR2sXVRUqJqfn2FhZY/hxj8Bo0MfC
      8jrV9joa6w9fLCaxE9473yZNko2tEEZLFSZNmHv3XFzQnKfSILG4ukG13UFjXRXOyQnSKqhr
      7EQV28LjC1BV24BNF8e/A+7lNRx2Gx0dHbhcLto/sHrZLlIqzsSkE5XOyGBfN3q9gdDGCosb
      EaTEDt0Dw8QCXlZ9AeoczcTDPvzBCB09A5gNGvRmG2fP1BALe7k3uQiJAFevvsTdGzeIBHQH
      7ivH1Rc/pO92zRLeTuBobt+71mMPR9AZjJir6misMTPpnMVoraKxxszc4iqV1fa97s7d/UNo
      NGree+8ahNbpOXsZc8LD/fEFkqF1rr50lVs3bpDu6Tj06XX/feqw23DOuTGaK+net/aCHAym
      SoaGKolH/YxMuGmuz3RjjsaSXDr3pJuoatvHhqGThjpLQToAKq2Jrc01oJep+TVeuNrF8vTB
      3k6hTS9ujw9rVS31FhWTixtopASt3QMAJLcDrG5JtDZUZ71PUjshqpoPP4enjmQ8ytTkJN+f
      cNPRUIXb7Sa9s8nixg4DA4M0NtTy6P59FicfIZkqmZpZZGBggJrKzIe6sHDQJQAAIABJREFU
      tZmHqKrb6LBreDTrPVIn7Fvl3riLC+eGcmiYmZ5bZWBggCpLBQCLE/cxNnTRZEowuZR5klhd
      XibqX2Le5SUUDbK2Eca36mY7j4dX1+QID+bWGR4eotpqoqO1iampSa5du05wawuzrYrdPqUj
      Iw8ZGBqitameFc8GPX19hMNhenv7WF7MPNktzk1xfcRJZ/PhfdJ3Rwq73W7S0U0WN6L09HYj
      hdZYC6oY7Ovg/v1H3B+dZPAD/bRn5xdo6+jGUqHNOlIy4F1lOwXbAS++cJy5uXla2ruoNOmZ
      mllgcGiYmYlHPLh3j/begQP94GdnZ6ltaMZhryLgdWcdIbs7ujrsWyWwndrnn4bpuSUGh4Zw
      jj1g5N4I3f2DtDU9abB/MDrF4OAADXWHLzkJHDjfVTV2tGo1E+PjB/r9PxyfZmhwENeck9nR
      EWwtPbTYtKz4t5maXWBwcJCluWm2A15uP5zhwvmzrC65iKWSLC4uH6kd3VxhI6qit7tr73qF
      fatU2FvoabQws+xnYnqOwYEB7BZYWAsyPNjHo/uZsQIajYaVhWlu3p/j0vOD7I5XMWlUrPsP
      3leHMTs7T3NbB1WWir1rHQhF6OsfYG1pgZGREboHhuhobWLk4TiDQ4Msu+b2rKXjUd7/9rfo
      P3uBYELCZlCjs9hIhoPweElLA3BUp+X99+nK7AwqcxVd2UbL5cGae4Fr37lFW+eTwrTJUcvk
      xDjXb8scHZ6DGqMW/06SlEqN9pAn0dGpWQYHB1lbmmM77EOqsDPU08j0TOae0BormZt6RNS3
      yHr46A6eGqONVkdNeVQAWr2J/oEBXn35HBMTC3vbVapMeCqtiQq2mfJG6ag1oVYfPLNSOo17
      YZalzQTNtdlbb86cO49O8+S05auRTqdwzc+yFlHRYNMB0N1g5d07S/zgRy/w3t+8R3tvb94x
      tw9c4HxXHWNj4/hDUSy2Gvr7B6jUSxjsTQTWlpFSMVDrQaXee6tRPf5b/fg1Q0VmfvK2rn4+
      /rGXGRs9fGqCtJR+HIcERjuvXhri/s33WQ8nWVtxMz23RFtrMyqVKlM87PUulnjl1ddYXRhj
      YiZX//w0UlpCejzP0kdefZV19zSjUy6C/nWmpqaoa2ghmZbQaVTs78F86erLJMI+bt97kMfZ
      S5NOQ1qSPuRfwOdhasqJo6mVlARa9UEdlTqPlNl3vm/duk17Vw/VlRZAtXceo6EAU1NTVNc6
      SCTT6HUaPtgjWyKz79DZ8+i1ai6c6+P//cVf0Nh75khpo72NS0Ot3Hz/24T3zTyhUWtQPy5A
      n8Qgsb62wtT0HC1tmbfh0LqLuY0Er33kxb3YJSCYTNPS8IH76hBefuVVfKsLPJiY2du2d6+p
      VIBqtxwnFg3hnJqisrr2cQUgce073+Pqq2/QaK+kyVaBezNKcHUZq6MRKZ3OjHiXJCqOiH//
      fdo2+BytNj3fvva9I89XLlKpFA0tHXzs4x9nbnJ0b3tNXQMDg0NIie2CbR/GwHA/d7/111Q1
      ZS8Ldm8VtUaNSq3a99VCTXN1BX97c4qzgx059TRvvfXWW8fwt6jE43EMhg+PWE3Gt/Gsb+Dd
      CDN0ph+tWoXN3oA6EWJ5dQ2TtZrGSlgO6+lsrseoV7O4tIxab8JYoaO5o5dEeBMJFbZq+6FD
      wHfHIBhMVioeD/g6WsOBQZtmyb2CtsKCUa+lraePbb8PSaWiuqYWvU6DqaqKSChMW3snkZ0o
      PY+fVEzWSuZnprDba3E6nXv9hT8Yu9Fspb6+DqNBx4ZnmeWVNcz2Bhrq6lEnQywtexk6c5Ym
      RzVTzhl2khI2qwWbLbOw+a5dVSrO/OISG74gQ8NDaDVPbqfduCu04HKvglqLw25lZn4RrdFG
      R2cXRk2CZFrCbLXhqDYzu7iCWmfAUVcLSMzPzBBPq2lrb0OvVVNps+F0OrFb9Uwt+aitshIK
      hWhsaWJ+ZpZYMkVtXQNe9xyxBLS2t+Ow24juJDBUmOjramVycpp4WqLO0YhBA2vLi4Qi29Q3
      tmA1VVBhseGadWK325lyOqm12/diqawyMzc9TyIlUVfvYNU1+9i/duqqrWzHE1QYTfR0NDE5
      NUMiDfUNDejUUFNpZGZukZSkZnXZfcD+7vnq7mzdO992mwmPZx290Uqd3cF2eJ2dpIrO1ka2
      wtvoDBX09vcwNzXJ5oYXTWUjHfUWFhbdOJo7sJgr0FVYMBk0aCuszLsWuXzhzOOEj+OcWsJq
      SLLki6IhRYVWxfziCkZbNU31mbeUysrKvftWpaugwWZkfsmNSl9JfZWRRDKNyWzFYjay5feT
      kiT8mz4ktY72plqcM/M0tLRjq7IfuK98K3MkdTZc8zN759e/4WE7nqalrR2jXkulLfMmuNsT
      rae7E+eUk8hOkv7udvxbYTQ6A3U1VUCCgC9EJBpmK7xNZ28f64szbCX0DPa0UFtlYmZ2gabW
      TqxmDc6pJYzaGGtbSdRSAqvVSioWxbPho8JciVGTYsXjo9peh80gMb+2RTqyQRQTJoMmr3FF
      O5EtZuZc+DY26BkY5u53v4W9pRuve541r4eGli6sZiPA3nXKxe6CLIeVZWqdEb9/izNDvahV
      EAr42AxsoTWYqDDoqDIbmF1YpNbRTJXFhMZgwlKhA5UOi6UCW6WNmjo78/PLDPR2HqofCoXQ
      qdLMzi89IwPBUjHujYwy+NzzGA97r8qDnINGFNA4ilIOHBEDwU5eYzsUYGF5jZ1olMFzF6g4
      4v7xLC8QSujo6Tj8k4YYCHbyA8HW1tZoaDjeGJ6Tzufp0XtUtQ5SZzMe+v/74z5VjcC7a2kW
      Qm9/H8ntMKECj4/FYnsX7qQ0juI4cR+XfOI+LTpPr4aGluZMoZ7YDnPU5MOmSjsmONJ+sa7V
      UZRSvxDtQo4xm83HjvGk87mhvRdI5nWfnKoKwGQylWz4dCmnodilFPrFirsYOuWi8TRql1q/
      EO1Sn6+n4VyVRSOwQCAQCOQjKgCBQCB4RhEVgEAgEDyjnKo2AIFAICgXvvJv//GB3+df/STP
      vfrJovogKgCBQCAoAT9uvnbgt1539AC/k0JUAAKBQFACtt2OA7/VQTPyF2Y9HqICEAgEghJw
      re6jB34Pmbso9tJNJ1YBLM6MM7m8xcdfu0pk3cUjd5hqk5b2rl48LieReBq9yUZPWz337j1A
      pVbTd+Y8rulJhoaHmZt8RE3bAFUm3Um5KBAIBCXj3d6DQ/4qalLlUwFIWhMGMguary576Ru+
      SI0+M4vg8rqfl65e5caNGxiia9T1nKXFnODW/XFIhtne8rIR09Jl0pFOp/cmyUqlUiSTySyq
      J0sptUsZe7F0i6FTLhpPo3ap9QvRLpW/qVSKYGTkwLbtWG/Rc+3EKoD2jg4WXC4AHB1drMw7
      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
    </thumbnail>
    <thumbnail height='384' name='Saf_equ_distr' width='384'>
      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
      JUOkkiiHNugAkXATXl8Al8eDxx0nHAYOb8eteJSIy4MfiAPZBWO54nMzeG/+HN5cu5cLJw9o
      NyvTPPH+oJPdDhBd8Resyu0f72XoImbuWLyDP9PV0xCRBOj2e7WbDmzg2XdKuPK6qxneN+vI
      xh/Atu12++wNlwefyyBmxUnJyIbmSupa4u/fm8r9lWT3743pD5KdHKe0ovHIY1tq9+HKyMfX
      bn1eppx7KU3r5rG+pGe9cxcR+TDdPgDrly9l0gWX0yc1iTbbfgD2b1/DyvU7aApFseJRSrau
      pMyVw8CsVMxAb8bn+3l39WbCsTh1B3awqdxmwtC+YPoYP3kUG99dRl1rlHBTFcvf3cHkqeM4
      ZgjcvjQuuvxclr38POVN0U/teYuIJJph2/axJ750Kyte/Tf7QkGS3G02zZ50PjNrOslWK3t2
      baOopIJIzCKQ0Yfx48eSlerHAOLRVnZuXMPug7W4klIZO2EyfbODGBw6t7+0aCsbtu0lbngZ
      OHI8owpyMQ0I1exm8eYWLjhrLHDok8aBTe+wqSWXi04fftK5RiIRvF7vSZc3P351j9wFFLju
      ya6ehoh0MsMwjG4fgJ5EARCRnsIwDKPb7wISEZHEUABERBxKARARcSgFQETEoRQAERGHUgBE
      RBxKARARcSgFQETEoRQAERGHUgBERBxKARARcSgFQETEoRQAERGHUgBERBxKARARcSgFQETE
      oRQAERGHUgBERBxKARARcSgFQETEoRQAERGHUgBERBxKARARcSgFQETEoRQAERGHUgBERBxK
      ARARcSgFQETEoRQAERGHUgBERBxKARARcSgFQETEoRQAERGHUgBERBxKARARcSgFQETEoRQA
      ERGHUgBERBxKARARcSgFQETEoRQAERGHUgBERBxKARARcSgFQETEoRQAERGHUgBERBxKARAR
      cSgFQETEoRQAERGHUgBERBxKARARcSgFQETEoRQAERGHUgBERBxKARARcSgFQETEoRQAERGH
      UgBERBxKARARcSgFQETEodxdPYEPEw/VsuztZVSForgMg5aWCBPOPI8R/TMwgNKdq1i8toik
      JA/hmI8zz51FXpofgFB9KW8ueodWw48dC9N/zAymjuyLAcQjLax+ZyF76+J4DAtf9mDOO2si
      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
    </thumbnail>
    <thumbnail height='384' name='SeVsSA' width='384'>
      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
      5MixrlNDPteOHsErG0VxnoM9pJriG+c5f7mts0QmybFjF6kZXYXTY6tWMI/Zixbjfd3I+kMt
      eMoAERmEsnwKqIj5y5d3W5Jqu0jriavMf+VVRgVvdt1jpjawd81m9pyqYNKIQuJXzrB22zFm
      Lvw+EQegkFkzqli/+b+MeOkZikJw/sguDqcqWV1d0OuWcworef6lZ/jj3//BsOLXGRvNR3eC
      ishgkuUB0BuLYCiI3aU3jkTreGFhko2b17AvBTgBqp5cyrSq2522Re30RSStzXzy4ftg+Tjh
      ITz/vSUU59xuQptgMNg5pLJsCoZPZunUo6z9fANlK5ZSGlYEiMjgYVwABPPL+cHbP+mx1KZs
      5GSWj5zc5/dsN4+JDYuZ2NBHgbxafvjj2m6LLDtA3TOvUde/KouIPBRZfg1ARET6ogAQETGU
      AkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykA
      REQMpQAQETGUAkBExFAKABERQ/0fpm6zOT4j42kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 7' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd3gd12Hm/+/M3H4veicqATawgqJIShTVe7PcZFsumzheO7aTTRyX7DrO
      ep048SaOk/zimjheucVdtmWrU7KtLpJi7w0AQRIAiV4uyi0z8/sDFAkIapBxBYDzfp6Hz0PO
      zD3nzAUx78w5M3MM13VdRETEUwzDMMyZboSIiMwMBYCIiEcpAEREPEoBICLiUQoAERGPUgCI
      iHiUAkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiCe4js3RPVs5eqpn
      0roju5/hYHMnr/5a3DRN+7ZxrL1v3DKbE4d2sfvwSexpbC9AaqiP3ds38/Qzz7Lv6AmS9jS+
      uDc1wPf/6f/wnU17AIeO4wfZsusIaQDX5uSRPRxs6Ti/vevS3riPrfsa0QuELxwKAPEEN53g
      h1/+LD/6zYFJ67Zs+ilP727BedVSEvzya3/Hz54+Om5Zmn3PPMKmZ/dPawB0N23hL//0T/jX
      f/82P/7RD/nqF/+GZ5uGpq8C1+bMiWZO98YBl5Y9T3Pvpi2kAJwUj33/K9z9wPYJHzm2/Xfc
      +7vtryEoZa7wzXQDRGbalXe8Hzt7/rmzoXQiTuPRYwyMOpRUVsHIECUVpZw8sJfTAwnSxw+x
      datLNKeMxYsrWXPd7cynkAAwGu/kWFMHVXU1dLQ00jfiUrVgEcU5YQBcJ017yzHaugYJ55VQ
      EnEgu4LC2LhfxUQn//jXn8Vt+AO+9JG3URDzM9jdRjocOltGitbmY7T3xInklrCwtoKAZUJy
      iH0HmymdX0Oiu5X27kEKymupKcvHGPsgPe0tNLd24QvAcMohAIDFonXX8s4lPsJOmuNH93Oy
      e5Bet5GtW7diRAtZu2w+yzbcTN5oCGOsNNz0KM3HjtI1mCC3uIK6yhIs0yA93Mu+o+3ULqyi
      5+RxugaTzKtdRFl+7OwnZbZQAIjn/fxrf0183V/zmfdcgj3cyTf+72d5unGInKwIwYBBRzKX
      f/unj/O7e+5hf9sAzvCDfOvoU1Qvv5mPLa7kyZ/8M4+at/LNT76VzqbNfPYvvkrtuvWk4910
      tJ8isvBG/vnzHyXbSPDkz7/B1+95jqzcHIKhEP3tJ3j3577HLcuyz7bGpX3HIzzRXsQP/+Md
      FGaN/YpmF1aMrXaSPPZfX+a7D+8iFI0wOjxI/dXv4WN/cDPRgRN84X9/hoL6JQSTo3R3tjPg
      r+Tv/+/fsqQkzOFnf8UXv/oDUqFcYhE/rU0dXHr1WLEHf/s9/mZLHg996UM8u+mXbDt2muHA
      43yrYw+++RtYu2w+u++/m2+2VPGDL3wYIz3Ej778ee7f3kY0EmRoaIgr3vFnfOD29STa9vJX
      n/4Sy1ctJTU8RFf7KShfzxf/9hOUZfnf8J+vvDwFgMg42x/4Dg83BfniF7/A0vIcDjx6N5/+
      4UEglw/+7d8w8JH3kLzm43z6zrUvW4YZiHHd2z/A1SsrOL3v13z8Mz/iZO9HKY9v5+vf+S13
      /M9/5B2XL2G09wj/430fnPT5YwePEFtQT3XUmrRuoHkzX7/nef74b/6B61ZV03Xwd/z5p7/B
      E+su4pZ5ABbLL38Td127lkDvYT70J3/LwdZO6sIWd9/9X9Te+EH+/K7rCdvd/MPHPza58f4w
      7/6TvybR+T84UPZW/umjN59dMbHjp3XHA3zniQ7+4d/+hYaqPBqf+Skf+8evccn65SwAMINs
      uO093LC2nuFjT/KBz9zNye5ByrLyX+uPQt4AGgMQGWfPru2suvJNLC7PwzBMAsHAlH9J/KEo
      82uqCfotwtk5BFwbx4WOI7voK1jNbZfX4zMNfIEgvpfqE3Hh5fpKGvftxJpXzyVLqvGZJqVL
      L+OS6hTb9p04u0WQqtr5ZIcDhMJRgn4ftuPS33mC1riPG6+5nFjQwvL5Cfpf//nf3m3PU77y
      MpZXFmCaFgs3XMtifxu7jp0dZPdFqa2tJhLwEYlm4bfA1uDxrKMAEBnHTqfxBwMYL3kANjDM
      19+LbafTGIEgvlf5ratdsoB442FOjUweVnZdF9MwON9AE9M0cNxXHsJ2XBsw8fsmX1W8lFfb
      T8dxMcfPKGuYmAa4jg7yc4kCQGScyqoajmx/ls6BBI6dpKe7j/N3X4bIyQtyurWV0bSDY9tT
      uiMmr7wGq20POxq7cV2HwZ4uJh/jDcrX3MiGgjb+4zsP0jucxHUd4n0d9MQTzK9fwWjbYXY3
      tWE7Dp1Ht7C12WB1fdUr1h3LLiJqjLB9z0FStsPwYD8DI8mX3ti0yMuKcqbtFKO2i21PDqJl
      DQ2c3LeZxo4BHMfm+PNPcGikmOV1eVP4RmSmaQxAPMRh6wP/j0/uvReAeQ038BfvuWHCFle8
      6S5+/cnP86lPtFBemM1QxwlSlJ3tkTG5+PLrePDr3+UTzU+xcOW1fOgDt7zm2osWb+S2ix/g
      S5/+GPfWlGM6o3SlwHjx5UaohL/6u8/x2c99mU/ue4y8iJ/hwR6u+9AXeOtFl/GBm57i3//+
      M9xbkk/vmVaqr72La5aVweDgy9YdKarl7Tev5yvf+Ht2bZpPxG9z5FQf615qY8PHRVdezt3/
      527+4hOHyKldxz/82TsmbFK9/k3c2bCZz/+vT1FaGOXMqVNc9b6Psqosi2Tza/5KZIYZrp7q
      EA9wnTQHdzxLW9/5s96sklrWLa/l6O6nSefXU19VAK5LvPMkOw8cxZ9djtX6G/71wQ6++i+f
      oyBs4DpJmg7s5fiZPvLnLWRlfRXth7ZxxihlzeIKhvvb2LP/FMvWrCMrCKPxDnbtPEb92g1k
      B13sxAB7du5mIBVgfk2Av/7Ap/jI3ZvYUDm5ayYZ72b3nn30j9jkFlWwfOkCQj4T107SdHAP
      x8/0k1VUyaqlCwj6TEgMsGXbAapWrKIsOwzJONu276N08Qoq8qM46VGO7d/DqZ5RqhctJt3R
      gltYy5LKQrpP7OdAT4DLGxae/b5sWo/t5fCJLsLF89mwspaOxn00DUdYv7wOwwAnNczBvbtp
      7x2hsGIByxdW4jMN0vFONu8+zvI1DeSG/KSHenh+z1EWrWygIBp8w37m8soMwzAUACLjHN28
      iUPxLJYtmEd6sJ27/79/wVrzB3z2w7cS/D07TId6j3H//ftYeekqwkaSZ351Nz/ZYXH3t79A
      oe6OlDeYYRiGuoBExsnOjfL8T7/Ld5racX1RLrr6rXzwv13/ex/8AXz+MIOt2/j8//oeQ2mD
      yiUX87nPf1AHf5kxugIQEfEgwzAM3QUkIuJRr9oF9OTx0yTS0/2ewwvTxsoiwsHATDdDROQ1
      edUAONjZRzyZfiPaMuetK8snrJscRGSOUBeQiIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJA
      RMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJRs34+ACfRx/HNzzI4NILhQjrlULH+eorK
      cjFwOPCLbzBiFeP3j82oZMWKqVt/KaGgRWrwNI1PP8mo7QPXJn/pZVTWzcNgbDajU1t+Q3fP
      KCYQKFnEonWrsAxIduxi55YB1t9+BTA2m9SxX/8n1sp3UFtbMHNfhojINJr1AdB1cBeRBeuo
      Ls3HNA3SfcfY8uAmcu58O0H/ICOj2dS/5a1Ewi+aUs9N0Py7h/Atuo6ViypwhjvZ99CDRHLf
      SWFBiJ59v6NztIhVt67DdBO0/O4XNB4sZNHSclwnTSpxdupA16X/wG/otJZySY0O/iJy4Zj1
      XUCFKy6nZF4BlmViGAa+WDb2cD+O7eAO9ZCycrD8k3fD7m+jZzhGeV0FpmngixUxrzqXtsaT
      kB6i/WgbFQ0N+CwT0xembNUKOvft5sWz46QHTnBgezurbtiIOeu/LRGR127WXwGY1vkzeyc5
      wJEHf0X2orUEghbJtm5GBjo4teNZLNNHtKyGgrJiTNNgdKALI5pP0G+c/bRBuKiQ0f2dOIkc
      RhIBormhc2X7IqUYI9tIjavbTQ9x8OGHqL7+LqLBiVcY933+L3EdZ8Kyd33nbixXcyeIyNww
      6wPgBcPth9n36CNEFl7B8rUrsUwDo2QZa99SieuCmxqm89BTnNhfzIprLsdJJ8EXmHCJY/pD
      2Ok+XNvGdUzMcXtvmD4s2yYNWEC8ZTd7HmynN1lEfVnOpPZc9ZFP8OLLhUhWNpFI5GX3Yfvh
      duIjyd/re3ijZUcDrF5YNtPNEJEMmAMB4NKz91H2PX+KhTe+m5J5BZjG2Fm96Q8TKwyf2zKr
      ZB77fvYdurtXkRuIQKoTm7EDOoCdiOMLxjB9fizLxk4CZyfwcuwkacuPH3CAWPUqVt56Oc2P
      /oije1qoX1U9oVVZhSWTWmqaFuYr9BP94LG9NLf3vf6vYgYsrMhnzeLymW6GiGTArO/VTrTv
      ZudTLax8212Uzis8d/AHcF13wkm4YfnxWQa27RDMK4Z4JyMjL3TJuMTbOojOK8UIxYhF0gx0
      Dp77bKrvBGZO9YRENKwgNVfdwciuX3GqbSCj+yki8kab9QFwassTVFz7FnKyw4w79gPQe3Qb
      J/YfJpFI4Top+o5sYcAqoSA/GzNSSnlFiOZde0mnbUZOH6btjEtFXTmYIcpXLaP1+acYGU2R
      HuqiedsBKtc08KIqMIO5LLvlepoeuofBoRQiIheKWd8FZIRziB9+gr2N4w7N/nwWXrGR7MpF
      JI8doPGJQ6TTDoHcMpZefwOh0Finz7xLb8ba9zwHH/01ZiiH2qtuISvmByA2fy2LjH00Pf4A
      jhEgv+EGyiryADCDOeSXnv1qDINA4RJWrG/jxIFGlq1d8obuv4hIpsz6AKi98Q9fYW0OpSsu
      pXTFS681/RHKVl/JSw1hGqaP3NoGcmsbJq3z5y1k6cZx2xoGecuvJW8qDRcRmeVmfReQiIhk
      hgJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQAIiIe
      pQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiUAkBExKMUACIiHqUAEBHxKAWAiIhH
      KQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJR
      CgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiU
      AkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6l
      ABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQAIiIe5ZvpBrwaZ7SP5uee
      Ij6SxHAhlUxTsf4GiuflYQADjVs5tqcJX8Ai7Uaou+JacrJDAKQG2zn65BMkHT+umya/fiNV
      C8sxACc1zMnnHqW7N4lluPgLF7L40tVYBiTP7GTH5n4uueMqAFwnzdFf/ju+1XdRW1swY9+F
      iMh0mvUB0HVoN1lLLqOmJBfTMLAHmth83yZy33EnvtGT7H/2CMve/HayYgGGWrZz4HeP03Dr
      jQSsJE2/fYhg/Y3UL5yHM9LN3gfuI5L/LooKQnTv/S1dqTIabr8Y00ly4vGfc+xAEYuXVeC6
      NulUeqwBrkv//kfpCq3ikvk6+IvIhWPWdwEVrtxIUWkelmliGAZWOIY9MoDjOPQe3Um47mKy
      YiEMwyRavZzgyEkG+oex+1rpHcli3vx5Y5+LFFBek0f7sROQjnP6aDuVDavGyvWFKFm5kq79
      u3FfVH+6v4X9OzpYdf0GTGNGvgIRkYyY9VcApmmd+7uT7Ofw/b8ke8mlBAIWHR1dxBYWYZw9
      MBtGmFjYIj40TNjtxojlE/S/cNQ2CBUVMrqvEyeRy0giQCQneK5sX6QUY/h5UuPqdtJxDjz8
      MPNveA/RgMV4v/rcJ3Ade8Kyd33/e1juxGXjOY7zur6DmeQ4DvF4fKabISIZMOsD4AVDbQfZ
      t2kTWfVXs3zNcizTwE65mIGJFzH+oI9E0sYxk2AFJlzimL4QdroP17ZxXRNz3N4bpoXl2KQB
      C4i37Gbvg+30JotYWpo1qT3X/flfgTvxeiGSlU0kEnnZfTDNWX/BNYlpmq+4TyIyd82BAHDp
      3v0w+7afYcnN76OoNA/z7Cm/P+JnZDg9YevESJJgyI+PKCQ7sBk7oAPYiTi+YAzT78eybNJJ
      IDC2zrETpH0B/IADxKpXsfK2K2h57Ecc3tXMstXzJ9QTzZs8HmCa1pw8yL+aC3GfRGQOjAEk
      2nay89lWGu58F8Wl+ecO/gA55eUMnGrBOXsi7qb7GBgxyc6KEcwrgqFORkZe6JJxibd2ECsv
      xQhmEYukGegcOFdWqu8EZk71hEQ0zABVV95Bcu99nGztz/zOioi8gWZ9AJzc+iRV176F7FgI
      40WDsLHaNfi693L6ZCeOneT0jmewyleQlRXAjJRSURmmacduUmmb4faDtHVARV0FmEHKG1bQ
      uvUphkdSpIc6adp6kKqLG3jxOK8ZyGHZLTfS/NDPGBhKISJyoZj1XUAVV74bKyt/0sEfwAzm
      s+zWN5MihGFY5CxYT0EsF8s0AIuyS24hZ3AY0zTwZ89j6Y01hKNjuxyrWcOK3F78PhPTjVJz
      1R1E8nMB8BcsZfX1ZwdsDQN/wSLWvjUX0z/r81JE5DWb9QEQyit+xfX+WB7+s3+P5BdOWGf6
      Q8Tyxx4Ks6K557YDMEwfkfyiFz5JrCAy7nMRojnjtjUMwvklr3MPRERmJ53Sioh4lAJARMSj
      FAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEo
      BYCIiEcpAEREPEoBICLiUQoAERGPUgCIiHiUAkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxK
      ASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh7ly0ShbnqI4888SXjBekqKQxx96Hsc2HaYghXX
      cPEdtxEOGJmoVkREpiAjVwCp/tM079qGGYoy3LqbY7s7WH3X+3FPbuX44VOZqFJERKYoIwGQ
      TsRxnQihqJ++xn1YtWuoXFLPvJpiBrq6M1GliIhMUUYCwB/OwXC6ObntaZp2t1BcW4vhpBge
      GCWcnZWJKkVEZIoyEgC+nHIWX3oxrZsfwy6sp3Z5HamBTgaTPsrmV2SiShERmaIMDQKniNVe
      wuUrrscXCuP3+3DSJay8410EY1YmqhQRkSnKyBVAoqeJ3b/8FelAFn7/WMaYlkXX9kc4vKc5
      E1WKiMgUZeYKwEmTGh3FPb8EOzlE36lTpGOjmahSRESmaFoDYOTMQZ7/yU8YGhom3jPI0//2
      Oayz1xhOOkHSDrP2turprFJERF6naQ2AQE45S26+k5HORg48vovFt7yNsH9snWGYBHNLyC3K
      ns4qRUTkdZrWALBC2RQvXEZ6Xgm+WA1F9csIaMxXRGRWysgYgC+ST15pnPbtT5JIpMatMcie
      v4LSiqJMVCsiIlOQkQBID7Sx7b++ykAqi2BwfBUW86KVCgARkVkgIwGQGukj6Raw4SOfJD/b
      n4kqRETk95SR5wCC2cVk5UdIJ+1MFC8iItMgI1cADhZhX5LDjz/MUHXxuDUGWZWLKSzNz0S1
      IiIyBZkZAxjqorezn6HkNg4eG7/GouKaPAWAiMgskJEACBUt5sqP/10mihYRkWmSkQAAwHVJ
      j8YZGYxjOwbRgjxSg3GCuQXnng4WEZGZk5kAcB36jm5h98Ob6Ovqxg2Uc/mH38eBH3yL2nd+
      gvLSaEaqFRGR1y4zM4LF29nz4IPkXvQmrvzvf0RWEHzRAopKsuls0ZSQIiKzQWbmBI53k3Kz
      qVnTQCgcHFtoGFiWQXJEbwMVEZkNMjMlZLQAH720HWokNZrAdR1Gu07R2nKG3BI9BSwiMhtk
      5l1A2aUsvfoKtt77FY4YPlJDI2z5f18ne9EVVC8sy0SVIiIyRRm6C8iiqOFGbliwjs7GI4wm
      HGLzFlBYXoxpZKZGERGZmmkMAJfUcJxUevzrH0xy5y8596/RwT58wSiBoN4PJCIy06YxAJIc
      /cWX2bvzOODi2DamaYHxwim/i2Mb1L3lT1l35arpq1ZERF6XaQyAIEvf+xmWvhfS/ad47sc/
      Zum7PkZBzlgVzkgX2378Y2pXLXmVckRE5I2QkbuAkkNdJIYcfP7z04GZoRzycwxOHGjMRJUi
      IjJFGQmAQKwQ0+6kZe8hHHdsWWqwg/amk5iW5ogUEZkNMnIXkJU1j5XXXc0zP/1XGh8pIBz2
      MdR5mlD1elavWPC6yrRHeji+v5nqhtX4fOdzq3PvE3S0D5z7txktpPbidQSDFuAweOIAp460
      4M+vpGrFcgL+859N9LVyctdu0mYW5RetIys29tBaOt5O+8lRKuvnj23ougwe382Qv4rSCr3J
      VEQuDBkJAMMwKWi4mVsWrqfjyAEG+5Jkz19EcVU51hTfBOfaI5x87hEObn6eeLqEihWrxgXA
      KCcPHGPBTXcRjb5wZ5GBebaOrh0P03Q6yIqrryVxcjs773uAVbffRshvMHpmPzse3Un9rW8m
      bHey994fUHfbu8nPDWHHW2nZ33cuAOzBU+zY9Axr/lCD1yJy4cjYezkNw8AfK6D8ostZcs21
      zJtfic8ymepjAPFjW2nvDbHxIx8mJ/CivEr1krazCITDWD7/2T8+DMPATXTQdLCDRZdfQTgc
      ImfhJZRmDXCyqR3cJKe2bqFsw03k5sUIFdSwZH0tR5/bNal+105w8IFfMv/W9xIL6iEGEblw
      TOsVwHDbHnY+soP6mzZy+Nf3MJx88RYWZRvfzNLVC19zmbEFG1m70MQwOyets3u7scP5WP7J
      B+ZE92mcSDGx2NiVgWFY5FaVcLSlDbcqSN8ALCwrGAskwyBUsoDU5sexueR8Ia5D57YHSFZe
      Q2V5zoTyDz/xKLjOhGXJ+veT9L/8GIfruq95v2cL13VJJif9IEXkAjCtAeCLFlC6ZAmhWD7l
      ay4jNWlKYJOsKc4GZljWy1412FaUmL+Hgw/9AhyblA1lDVdSVl1MajSOEczCGvdhXySH9Eg/
      TjqJnfbjD51fafoi+FKjJBm7LBpuO8zh3w3R0WZzyV3Lzj/OcFa8qwP3RQHg2A6OM3HZnOdy
      4e2TiADTHACBnHLqLi0HoOriy6ez6Jeur2A+K24b66d3XYdUfys777+PSO578ZkmuBPPXF0n
      jWH4MQwDDBfXhRfSxXUdXPN8n1ioqIaqhpX0Nv2KwaEU+dmBCWWtedt7JrUnFIkSCoVetr3G
      i1NkDjBM4xX3SUTmroyMAbjJQRqffJiuzvN35zij/ez/9fc5cyaeiSoxDJNAbgV5YYf+wTih
      WAHucD/JcVchyd4eAnn5GMEwoUCK0cH0uXV2ogc7kM8Lh3nTHySUV8GqWy5n/733MJKae903
      IiKvJCMBkOhrpWXHDszQ+Zm/jGAIa6iL1saT01bPcPdpkuOO8E6ij4GESVYsgpVXRtTtout0
      HwBueojTzWcorqvE8GVRVJ5F2+FjuACuTe+RfWTXLZ/Q3WQYBqGy5SxZGmHXI8+ijhARuZBk
      bEpIx3ZxHQc4OyjqONh2GseZNDDwivqadtPbFQcGGB3q4sT25/D5AhQtvwhjpItDzz1DKK8I
      n+USP9NGXsM15OaEMAyDhVddyZEtjzJ8opT0YAdmxXpKS7PBMCi5+DoGn/wNh546jd8ZIT6S
      Q/21k59RMAyLwtU30fPrb7F/RxkrLqr9/b8fEZFZICMBEMydR252mj0P/Iqll60nEoKuQ1to
      Pj7IRddWT6msSFElVlYKgCs/fNHZpSbBgIW/YjnLimsZHYzjOFC2Yh2hSOhcX3uouI6l15Uw
      OjSM4V9FOCsL8+z7qK1wPguvvZ2R/gFcfIRycs49XxAoXM6am86f7xtWkAW3/CGJ5NzrwxcR
      eTmZeRAsmMPyO97Lvod+wfPf24rruviyS1lyxx9QWpo1pbICWfkEXuEjViBCtCDyci3BF84i
      Fn7pAkxfiGjB5AFOwxciHJtYjhWMEQm+5maLiMx6GeoCcjEjRay48yPUDw9hu+APhUkNDWCn
      HUx/xp4/ExGR1ygjR2I7fobtP7ubvkGIFpaQXVRCKGTQuOmnHG88nYkqRURkijLzOuh4F8N9
      KULZ4+4C8oWIRXz0npn8RK+IiLzxMhIAvlAWhjNAT2snL9w9nx7qpqu9h2hOzit+VkRE3hgZ
      GQPw5cyjdkUde3/6Fc4sWUV2BM4c2kMyWMPyRRWZqFJERKYoM3cBmQGqrn4nkXnbOb5zD919
      UNhwE/PXrCYWycy4s4iITE3GjsamP0zx8o0UL98IjL2HZ6Sng4F0muy8qd0KKiIi0y+jp+NO
      OsFQ12l6Ww5zcvdu+jp6KL/ufTRcsjST1YqIyGswzQHgYieGiXeepuvYHk7tP8hAdzep4SGi
      CzbQ8I63UFA1tSeBRUQkM6Y1AEa7Gtn5sx/T0zuMP7uE8pUbWVJZTvfmXzFUvpryRa9vPmAR
      EZl+0xoA9kgfvae7mXfVndQuX0w0Lxefz2Fg+8vPkiUiIjNjWgMgWFBH/dVXcHzXIzy9+SHC
      +cUULFiC3T+MW2jjukyaWUtERGbG9E4JGclj/lVvoeaK24mfaaGr8Qin9myhp+0MRud9bB9s
      o+6yy8nL111AIiIzLUPPAfjIKqsjq6yOmstuZLS7nY6mQ7Tv3U3L4WryLl2WiWpFRGQKMv5U
      lmGYhAvLqS4sp3rtNbiuplYUEZkN3tjHcg1jTk6MLiJyIZrWAHBdB16YVdd1wTA16CsiMktN
      49tAbdo3P8zJlg5S/Sc5+OijjKanr3QREZle0xoAvcd20Xmqk9RQD+0HDpCyHVx3/B9XYwAi
      IrPENHYBBShcWMfmh3/EcGU+g12t7P3Fd/FPeAbMonDVVdQuqZq+akVE5HWZ1lPWFscAABLw
      SURBVDGA4ovfxLpgGZ3Hj9J3sotoQQnBCTWYhDSzuojIrDCtAWD4wpStvoL8mmqs0Dxqr7mJ
      oOmMrTNMMA00JiwiMjtk5DbQYF4Viy+PcPTBu2natYfRhEFu3Urqb7idsooi3RkkIjILZGRO
      YDc1xP6f/wctrTZLbn0v6975HorzEmz99jfo7B3NRJUiIjJFGbkCSPScpKsH1v7R+8nP8WMA
      FcuXYwx9lZMHmyi+TBPCiIjMtIxcAYALmJimea7P3zAMTNM8+7CYiIjMtMyMAeSWkxNNsP3n
      P2LJhvXEQnDmwBaOHe3l4mtrMlGliIhMUWbeBhrMZuU7PsihR+5l5w++RsqGaPkiVr3nw5SV
      xDJRpYiITFGGXgZnEMgtZ8WdH6Y+mcJ1wfT7sSyf7gASEZklMvg2UAPD9OEPvbEvHBURkdcm
      Q4PAIiIy22UkANIjfZw5coSUnYnSRURkOmQkAOz4GfY/eA/9A8lMFC8iItMgIwEQyK9hwaoF
      ND79OKNJXQaIiMxGGRmhTQ/1MDzqMnr8GZ76dhMlFcVn15jk1a+nsrYsE9WKiMgUZCQAnHSC
      oa5OrGgRYdIMnGk7u8YkXK13AYmIzAaZeRI4v4Y17/tTAFzXxbFtTD0DICIyq2TsJv3kQDvN
      z/yGEweOYcaquOhtN3LsoQdZ8Ob3k5elZwNERGZaRgaBnUQf+37xHVpPu8y/ZC3pvk6McC4B
      p4/2ptZMVCkiIlOUkQBI9rbS22PQ8La7qFhUi88EwwoQzQoR7+3LRJUiIjJFGQkA0xfEYJTR
      oZFzy5zkEH0dfYRi0UxUKSIiU5SRznh/XjkVtcXs/P6/kVeSTXygk70//RbxkWwuXVSViSpF
      RGSKMvM6aCtM3S3/jazq7ZzYt4fcykqyKpexfM1a8rIDmahSRESmKGO345j+CAULVhAqqsJx
      TULZBUSyNReAiMhskZkAcNN07f4tuzY9zshoCgwDK5BF5WW3sXRDAz5TDwSIiMy0jARAqr+N
      fY88St5Fb2JdQz0+y6bv2DZ2PfRTsiuqqanJz0S1IiIyBZl5F9DoAE6giAUbNpITHTvbj1x8
      Lf3HDtF5olUBICIyC0xjALjYqSSO7WCF88nKDTDU20fUCp1dnwR8BCOR6atSRERet2kMgDQt
      j/2QxsNjL35L9HVw+nv/SjgSPLveZmRghJWXFUxflSIi8rpNYwCY5C+6CKNg0StsYxANOtNX
      pYiIvG7TGAAWuXWryK2bvhJFRCRzMnQbqEt6NM5IfAh3wgoDfzSHcCT0Mh8UEZE3SkYCwB7u
      ZNu3/4WTpwaxJtzz76P6lg+wZuOKTFQrIiJTkJEASA6cZmA4ylV/+TmK8nW2LyIyG2VmUvhY
      EbH8GIaRkeJFRGQaZOQKwIwVU1lbyIEHfkpBcfb4NeQuupjymtJMVCsiIlOQmSeB+09x5Nkt
      DFn5jHb6x62xoGCRAkBEZBbI0Ksg4hixKq780KfIifz+L35zXRdnpJvGPY3UXrwWn+9815Kb
      HqZ153P0dg+Rt2gN8+bPwzw7+7zr2gy27OPkoWb8BVVUr1pFIGBhnC0z2XuKlh07SFk5VK5Z
      T1ZWGMOA9GArrS2jVC+vO1f/YNN24v75zKvSg2wicmHISCd9MLeUWG6Akfjo712Wmx6m5Yl7
      2PTVf2bv41uw7XEPkjnD7LvnuyRii1h23fWkGp/g4LZDvLBF1/YHOXSghwXX3EZpfoKdv76P
      RHLsxtTEmX1se+AJStbfyMLVdRz+1Q/o6Rtrrz3UzslDzeeqsQdOsOPRreSW6uAvIheOzLwN
      dGSQVE87O37wFXLyxs8BYFG89kYWLqt5zWXFj22hYzifq/78z3jma7+cuK7peYazV7B0SQWm
      YVBz5Q08/7P7idcvIMvXQ9Ohbpa8+WaCAR+B2vXMa/4RJxrbWLSkiJNbtlJ++VvIzgphuBXU
      b1jEvud2UHDLhgl1uPYoB+77JQvu+AARzWUjIheQzAwCW0EK6i8mlp60hlBoakfR2OIrWbvY
      AKNz0rq+E83k1tx8rsvHCBSQE04xMDBIwD2DGy0hGh3bRcMwyakqpaO5DbcmSP+gwcLSPIyx
      lQSL6kg/81vSjAsA16Zjy6+x626ivDRrQt0HHnsA1534mFtyyYdI+F7+ourF288FruuSSCRm
      uhkikgGZmRM4u4wlN985LWW90q2kyXgKfzTA+VEGg1AkyMhwkpQ5iBGKYY0bgvBFskmNDOCk
      U9i2H3/w/ErTF8afHiUJWMDwqQPs39RLd6fFhncvxnjRUEZyZBjXmfheI9d15uRB/tVciPsk
      IpnqAho8TfOWzSRe4gogb/FaKuaXTUs9pmVg2xMPTnbKwfKbGK4PnOEJ61w7hWn6MQwDw3Bx
      HcaO9owdvB3TeOGfhMsWsXBDA/Gf/JT+wRQFOROvXBpunxxwwXCUUOjlH3wzXpwic4BhGK+4
      TyIyd2VkENi1k4z0dTPUe/7P4JkWmrduZTSRmrZ6okW5DPf0jXvfUIqhkSSxSJhQVgHucD9J
      +/z2id4egvkFGKEIwUCK0fj5hLIT3diBAl44zBuWD3+shIbbrmX/L37MSEpnwSJyYclMF1BO
      JSvf+v4Jy9zUADt//G3COdM3G1hu3XKOPrKd0RXVhIMWiY6jDBnFZOfEsCyTGI/T2dZLRWUe
      birO6aYzFF96JYYVpbgyh9aDR8i/ZCmGa9NzcC85CxsYf45uGAaBknqWNTSx48EnufSOKzOT
      mCIiMyAjAWAYBi/uNDcCUXJifk43tlBetuw1l9V7dDvdHQPAIKPxDpo3P4HPF6SkYR1Z+YtY
      tPI0hx97kGh2kHj3ALVXXk8wYGAQZeHV13L4uU3Emwuxh7rx1VxGaWkMDIOSNdcRf/Ix9v+2
      Fb87yohdxNL1tS+xLyb5K2+k+MR/svf5clatXfD7fj0iIrNCZsYA4p2c3LWD5LgxADc9TMuB
      Zsoqb5xSWbHyhQSLxvpx5i27/OxSg0DIB4ZJwbIryJ4fJ5228YWi+APnB4WDhTUsu6GE5GgC
      wxcgEI6cu2PIDOVSd+2bSA4N4WIRiI5dNQAEilay9tbzA7yG5afu5j8imZ57ffgiIi8nIwHg
      pIboPX6MkfHd/YZB0cU3s2jV5LPsV+KPZON/hWmEDcMkEM3mpW8uNbCCEcLBly7AtAKEsid/
      0rACBMMTyzEDYaZ4B6uIyKyWkQAI5Faz+t0fftFSA8MwJ91OKSIiM2NaAyDZ30rTc5sn3Hkz
      kUle/SVU1k7PbaAiIvL6TWsAuHaKRLyf0Ze40zM12MHpw01URmoUACIis8C0BkAwv4ZVb/+j
      cUtckgMdnNr2JI1tJyhefRV1K3QXjYjIbJCxSeET/afHDvy7DxIqXcTyt3+IoopSfJbupBcR
      mQ2mNwBcl9HeNk5tf4rmvYcJlS5m5ds/RKEO/CIis860BsBo52Ge+/Y3GfJXsHDjrRSVl2JZ
      LkOd7We3MPBn5RGJhl+xHBERybxpDQAnnSCVAsPtpemJ+2iatIVFxVXvYMXaJdNZrYiIvA7T
      GgChosVs+ONP4bzse9MM/LHc6axSRERep2kNANMfIlakWzxFROYCjcyKiHiUAkBExKMUACIi
      HqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgFgIiI
      RykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCIiEcpAEREPEoBICLi
      UQoAERGPUgCIiHiUAkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4
      lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQAIiIe
      pQAQEfEo30w3QORCct8zhznZOTDTzZiS7EiQ996wcqabITNAASAyjbYdbmPXsTMz3YwpKcmL
      KgA8Sl1AIiIeNeevAJxUEsdxzi8wTCy/H8MwABfHTuOkHTBNLJ/v7PIxrmNjp9OAgenzY5rG
      ueWO42L5zn49rovjpHGxsCxlpohcGOZ4ANjsu+erODkLCATGdsWKFVCz+mKCQYtETwuHnngK
      M5KHPTpArPYS6pbPxzAMnMQAjY8/SDwdxk8KO1TGsqs34DMNkh07ef7pPja+/ToAXCfFgR9/
      mchlH6C2Jm8md1hEZNrM7QBwB0g6xSy9+jYi4Yln5q4zwrHfPkre2rdSVV2Amxpk370/4Uzx
      XZQWh+nY+Sjx6DIaNq7AcNO0PvVzDu8+zrLV8yeW4zp077ifoZJrWK6Dv4hcQOZ0ALiDPaQC
      ufgCk7tl7N5WBu0C6ioKADD8WcyrK+Fk4wlKCso5c7yHypuWYAAYPgqXraR50x7c8QHguqS7
      j3HwwCjr3nfRxLpd96Xb9DLL57ILcZ9kIv2MvWlOB0Cir4uhM40cevReLDNAdu0y5tVWYZkG
      icFujFgeAev89sGCAhJ7unBH80gkg4Sz/OfWWcEirMSzJMeV76QH2X3/I9S/+UMEX5QxP/n4
      f8d17AnL3nXvvZhOzsu2d8JYxRxh2zbxeHymmzFnpNP2q280yziOo5+xR83pAAhWruOaj14M
      gJscpn37b9iyZz9rbr8Jx0mD6Ztwm5NhBXDsPlzHwXUNjHHhYJgmpuNgAxYQb9nN3ofaiJvz
      yM0JTqr7Hf/8zUnLYnn5xCLhl22vac69AWTLsojFYjPdjDnD57NefaNZxjRN/Yw9ak4HgGEY
      GC8cxUNZlG+4nYGffYuurn4KQlmQbCfN+Z20Rwbwh7Ix/QEsX5p0Ajh7bHfsUdK+IAHABmLV
      q1h5+1W0P/Uz9j53iNUblkyo2zQn/6IbGBPuMrpQXIj7JBPpZ+xNc++UdBzXdRnfczn2f9jA
      wCCYVwyDZxgeSp9d69B/8gxZVWUYoSyyozZ9Z3rPfTbZ1YyVX4s1oTwfZRvuwNf8ME3N3Znf
      IRGRN9CcDoDuA09x+NmtjAwncO0kHTseYzBUTUFhDkaohPmL8zm2eQvJVJr48Z209QSprC0H
      I0Dl2rW0PvcYg0MJUv1tHN58mNr1q3nxeZBhhal/09tofeQH9PQnX7IdIiJz0ZzuAspffCmB
      tiO0PLeJVNIhWr6I1TctxO8fO4wXrbkJf9Nujv7mfqycMlbcchvh0FjmheatoOHqLE489zBp
      I0bN9W8nryAKgBUppqwua6wSw8CKVXDRTRs51XSc/NWLZmRfRUSm25wOANPnJ7tqGdlVy15y
      vWH6yFuwhrwFayavM0zCxbUsvq520jpfdhV1q8dvaxCtuYjFNdPVchGRmTenu4BEROT1UwCI
      iHiUAkBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAi
      Ih6lABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY9SAIiIeJQCQETEoxQAIiIepQAQEfEoBYCI
      iEf5ZroBIjK3DQ4ncN2ZbsXURMN+LFPnvwoAEfm9/PGX7mdoNDXTzZiSr/3FLVQUZc90M2ac
      IlBExKMUACIiHqUAEBHxKAWAiIhHKQBERDxKASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6l
      V0GIiEzB1+99nuf2nZrpZkxJKOjjPz91+6TlCgARkSkYSaQZGE7MdDOmJJm2X3K5uoBERDxK
      ASAi4lEKABERj1IAiIh4lAJARMSjFAAiIh6lABAR8SgFgIiIRykAREQ8SgEgIuJRCgAREY9S
      AIiIeJSnA8BOxOk71UxPayvJZPrccic1xGBP//kNXZfkQCdDg6Mz0EoRkczwbACkB9s58PB9
      dLZ3Mth6hP2bNjGcGAuBVPdBdv/2+XPbOskB9v7ivxgYfuk36omIzEXeDADXpn3745gVa1mw
      dh3Va6+gvDTNke1HJ2/qpGl95j78y26jrCQ6A40VEckMTwaAmxqkq22IskXzMQAMi9y6pcSb
      9+NM2NBluGU7p/oKqV+zcGYaKyKSIZ4MACcxSjIdIBi1zi2zAnlYyT6SZ/9tDw/Q33aUvU/u
      ZemN1+L35DclIhcyjx7WXHANDGPiUsMF9+zfU/Fuuk80k3JCBPzWpBJEROY6TwaAGQji96dJ
      jpzv8HHSQ6T9EQJn/x0qns/8S65naUMee3+7GdtxX7owEZE5ypMBYASyyM016D7VMXbG77oM
      tx0lWLqI8ef6hmGSv+p68hN7ObSnBUWAiFxIPBkAGH4q1m+kZ9fv6Gw7w8CpQxzdc5qF61dM
      3tQMUHvj24hv/yVtbQMz0FgRkczwzXQDZkqgYAENt+TQfuAAg0aU+tvuJBod6wDyZVdRt7r0
      3LZmqICGO+6go6cXyJ6hFs89juPyzfu2z3QzpuwPb24gFPDsr4Z4iKf/l/tjRVStu3LScitS
      TFnd+CUGwcJaKgvfsKZdEFxcHtpybKabMWXvvn6FAkA8wZtdQCIiwv8Pj1TpXSl3hfgAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Story 1' width='384'>
      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
      ZQoKCjCZTJ85zd27d/P222+zY8cOBgYGyM/PR6VSHdO677jjDgCKioqora3FZDJhMBiOenqv
      v/46jz/+OD09PUybNm3Ye5s2beLdd9/FarWSkZEx4mmuXr2aRx55hAULFgxr29/97nd0d3dT
      UVFxRDVu374drVZ72PYXBydbACmgrq6OG2+8kd27dxONRnnqqafYvXv3QYft7+/n0UcfZdq0
      aZx++ukHHWbNmjUcyf+GFStWsG7duqMpHYDc3FyWLFky4sAZrbq6Ou688068Xu+w11UqFcuX
      L2fLli3A4ArypZdeOuwK8J133uHWW2+lt7eX/v5+/vCHP9Df33/M616yZAnTpk3D6/Vy5513
      UldXd9TTikQiPPTQQ1RUVHDGGWcc8P7jjz/O8uXLefHFF49oupWVlSxZsuSAPx+7d++mvb39
      iOu88847R7VspTq5KXwK2LlzJ/F4nPLycmbNmsWVV15JJBLhrbfe4uGHHyYajVJUVMTtt9/O
      448/DsDy5cspLi5m7969PP7443i9Xqqrq/nxj3/MsmXLALjkkku46qqrePLJJ7n77rspLS3l
      mmuu4cc//jELFy4cVoPdbh/6F5mfn4/L5eKXv/wlbW1tpKWlUVxczH333cfSpQq04eEAACAA
      SURBVEuZP38+3/nOd4Yez58/nzvvvJPf/OY31NTU8OSTT1JQUEB7ezuXXXYZ3/72t1m6dClW
      q5Wenh4MBgPnnXceK1aswG63c++99xIOh/nd737Htm3bsNls/OAHP2DKlClcddVVVFdXU1dX
      R25uLr/+9a95+OGHAfje977H9ddfz5e+9CUAqquryczM5L333mPWrFm8//77zJ8/H7VazQMP
      PMDq1atJJpMsXryYpUuXDn32mpoatFotFRUVQytAvV7Pxo0beeSRR+jq6mLy5Mn853/+J3ff
      fTcOh4PbbruN+++/n7a2Nu655x7++Mc/8v7776PX67nyyiu55JJL+Na3vkVBQQEdHR3cfPPN
      /PrXv2bJkiVs374dgLvvvpsLL7yQdevWsXDhQpYuXcqtt95KQUEBt9xyy7Dl4/e//z3t7e04
      nU5uueUW/v73v5NMJvnnP/9JYWEhTqdzaPjGxkaam5uZO3cua9eu5YYbbsBgMLBq1SqeeOIJ
      enp6KC8v5ze/+Q1//vOfeeutt4hGo1x++eVkZmbyyCOPsGLFCj788EP++Mc/EovFSCQSACiK
      wrJly3j11VeJx+NceOGFXH/99dxyyy1Eo1GCwSDBYJA77riDtWvXAvDII4+wceNGfvaznx2z
      30yqkC2AFLBgwQImTpzIsmXLuOmmm7jpppvo7++nurqaH/7wh3zjG9+gs7OTDz74gBtuuAGA
      //7v/2bmzJk88MADzJ8/n9tuu43t27ezfv16rrnmGgwGAytWrOCrX/0qhYWFrFq1ivfeew+r
      1XrQf4wNDQ0sX76c5cuXEwwG+etf/4pWq+XZZ59l7ty5R/R51Go19913H1dccQX/+te/CAaD
      ANhsNr7//e/T09NDV1cXV111Fa2trdTX1/PMM8/Q3d3NXXfdRXFxMU899dTQ9EpLS1m6dCmt
      ra3U1NQMtcH//d//Da38P57vggUL+PDDD9mxYwdut5uzzjqLtrY23nrrLc4//3zuvPNOZs2a
      NazexYsXk5GRwf333891113H3XffTTgc5re//S1VVVX89Kc/xeVy8eabb3LOOefw0UcfEQwG
      Wb9+Peeeey6vvfYa69ev57bbbmPevHksW7aMeDwOQFZWFrfddtuwrpP9v8Mf/OAHLFq0iDVr
      1tDW1kZ9fT2LFy8eVt+f/vQnioqKeO6557BYLDz22GND0/jJT37CueeeO2z4VatWkZ2dzbXX
      XksoFGL9+vWEQiEeeOAB5s2bxwsvvMA3vvENPvzwQ1566SVuv/12nnnmGaZPn37AfGfMmMFT
      Tz1FTk4OAJs3b+b555/nuuuu42tf+xovv/wyra2tAKSlpXHTTTeh0+lYvXr1UI3XX3+9rPyP
      kgRACtBqtdx///08+uijXH/99bS1tfHee+/x2GOP8eKLL1JeXo7BYEBRlGHj+f1+YrEYPp+P
      5uZmrrjiCkpLS4cNo1KpOPfcc1m7di0rV67knHPOQafTHVDDzJkz+cUvfsEvfvEL7HY7breb
      kpISjEYjavXwxfDjlduhqNVqjEYjeXl5KIpCJBIBoKSkZCh8Jk2aNLQiTiQSuN1uFEVh165d
      TJs2jfPPP39oepWVlcybN29o2M+ycOFCgsEgjzzyCNnZ2VRVVVFUVMSVV15JXV0dP//5z3nh
      hReGjZOdnc1jjz3GH/7wB7785S9TW1vLxo0bCQQCBAIB9uzZw2WXXUZFRQULFy4kFovx+OOP
      E41GWbBgAW63G5VKRUNDA7m5uXzta18bmnZJSQnV1dVYrdZD1nzuuefi9Xp58MEHKS4uZsqU
      KcPe93g8FBcXo9PpKCwsxOPxHHJayWSSVatWEY1GeeCBB9BoNLz77rtDy8rH+0fmzJmD2+0G
      YOrUqRiNRmbMmDE0nXg8js/nY9KkSWi12qH9IR+P83F30JIlSzAajQAUFhZy6qmnkpeXd9jv
      SYyMBEAKeOWVV7j11lt588032bVrF3q9nhkzZuD1eolGo9TU1BAOhw8YLy8vj0mTJtHQ0EAy
      maStrY2uri7MZjORSIQ///nPNDY2cvbZZxMOh2loaOCLX/ziQWtobGwc2gJwuVxUV1ezYcMG
      nnjiCXbs2DE0XFZWFm+++Sa33HILPT09B51WPB7n6aef5tlnn2Xy5MlkZmYetg0WLFhAT08P
      Pp+PcDhMbW3tIYc1m80A/O1vf2PTpk3D3isvL8fhcNDc3MxZZ52FWq1mz5497Nixg1mzZjFh
      woQD2vLhhx/mf/7nf3jvvfdoamrCZrMxY8YMZs6cSWNjI/F4nO7ubtra2sjIyGDWrFm88cYb
      zJ07F4vFwrx584hEIrS1tRGPx9m0adMhd+ADmEwmVCoVr776Km+//TalpaVMnDiR7du3s3jx
      4gN2Ps+fP5+VK1fyxBNPDHVrHUpNTQ29vb1cddVVLFmyhMWLF7Np0yZMJhPl5eU88cQTPP30
      09x2223Mnj2btLQ0fvnLX7Js2TIeeuihoelotVqmTp3Kyy+/zF//+teh73rmzJmYzWZ2795N
      Mplk+/btn/mHwGw2s2bNGl566aVDDiMOTY4CSgHFxcVYLBYGBgbIzc3luuuuo6SkhBkzZpBM
      JsnLy2PKlClUVlaSm5uLXq+nurqa9PR0Fi5ciNVqJRQK4XQ6Of3004dWuoqiUFVVRVZWFqtX
      r2bChAlcfPHFB60hLy9v6LHT6eTMM8/EbDZjNptJJBIEg0EuvPBCpk+fjslkYtGiRZSXl1NR
      UTF0lE11dTXNzc3U1NQwf/58ysrKuPbaa9Hr9QBDwwJMmzaNrKysoc8yY8YMZsyYQX9/P3q9
      noULF5KdnY1Wq6W6uhqbzTb0eOLEiTgcDhRFYfLkyQfs5M3Pz8fhcHDeeedhtVoxm81oNBpC
      oRBTp07l6quvHqoJBkNDq9USiUQoLy/nhhtuICMjg/nz55OZmUkwGCQ/P5958+ZhMpkoKCgg
      KyuLCy64ALvdTk5ODvPnzycUCgFw1lln4XA4gMGtl/3btqqqisLCQqZMmUIymaS0tJS8vDza
      29tpbGzkRz/60bDaAGbNmkV2djahUIgLL7xwqIto/7b5WEdHBw6Hg4svvpj8/HxKS0tJS0sj
      Ly+PSy65ZGg5mzNnDlOnTmXhwoVEo1E0Gg0LFizAbreTlZVFdXU1s2fPRqVSkZWVRVVVFRUV
      FZSXl3P22WeTTCaJxWLMnDmTiooK1Go15eXlFBUVDbVpUVER1dXVADgcDoqLi0f6kxD7qJRP
      b/cLcYTq6+u59dZbueOOO464Px8GDwFsaWnhvvvuO+yw//rXv1i+fDn/+Mc/jqbUlBSPx1m6
      dCmzZ8/mxhtvHOtyxDgiASCEEClK9gEIIUSKkgAQQogUJQEghBApSgJACCFSlASAEEKkKAkA
      IYRIURIAQgiRoiQAhDgEd2s9f/rTg/zpT3+i3XfgpTIOx1W/lXpXD2vfeI5mT3RE4zzx0P08
      /fxrAAQ663hp1eClKH7zm/894vkfqp6P/e99h5lm1MOzz70x6vmK8UsuBy3EIax5/WXmLb6a
      maV2Ekl4/YW/sbulm3Mu/gZbPljJkiuv5Lm//Y0vfPFsnnjy76iNWSy99hKeXfY8A4qaeacU
      EVFsvPriKxhqurhgbjWdURNfnF3EC+/u5KsXLaKreSfPvvgWadYcvrhwOu+u38b5lwzehOf9
      d1fy73Uu0tM0xEM+/vb0k/hieq678iIe/8vjDCQNXLP0u1j0amo2rOGDTbXo7QV8+7Lz+Muf
      Hyeus/Otr1/AX5c9gyWvlDnlNoJKHrUbVvHmuh3UN3dDMsqTj/8F30CSK69ZyivPPIraaCWk
      sjCzWMurr7yBKcPMxece+vpA4uQlWwBCHMIXv341m197ml/e+zu8njbeXFfP3DkzefFf/8IU
      9bK320tbdx9r/v0PMstmoAs0sGlvFxs21HLVt68k7HXjDcCcuTO47MprOW3eXLZ9sJKNa96m
      eNLgSv7v/1zBd//jRiZnhGiNZlNVWcmSy74AwJy5c5i14HwWzpmBxpjBFd+8ikBPM9vef52w
      qZDi9Dgr1w1eSC/PUYhep+Gdd95m85pXcZxyHtd/90refXE58y+5hqu/fgkBrxtvIMxLK9fx
      w5u+z+SSXJq3vU972ERVcTovrVxHly/EN6/6Nv72vcyaM4dpM+bKyv9zTAJAiEPo6fWx5Nr/
      YN6kDLbudRMb6Cep0jN/3mksOudMnn34j5SdegYmkwmv10PFjLnkmrUUl5Zh0HxyxU1DmgG/
      309S0TDDmc7fP2xjdsXgBdysRh3d3j66ur2kW9OGzV+vT6PP5yeZTDJ0AU8VGPfNL6+sinLH
      4IXqnnrqGS756jcoyLJiS0+ns7OTYH8/VpuNjq7OYXcgU+JhggNh+vpDpBlN+LxeLHllTC93
      sN9sQGsgEhicv/h8kquBCnEIIb+bFS+uAPsELlw0j/LCDNZv2k5ZRRWlEyfT3dLMeReez6Qp
      U+nYs52uvhgzZkzDoDNQ7By8WqfVnkPV1CmseeMl7IXlVDjMNPi0nHHK4DX5p06t5K2XXyCn
      Yi5zqkoBKN539y2dNZu+5m10hlSUOHIpLh58/dS5C4n3utjb7mH6jBlYjAYKsqy8uepDplRV
      MWfBuQRatrNuexOLv3wZeze+S327nynlpVjtOcyeWsKKV1YysaKS2XMXYIr3smNvO9XTZ2Cz
      GIfmX1w6GXWkix0uH5PKik5w64sTQS4GJ8SJEg/w0EPLuPzq75FnO/qbtQtxrEgACCFEijqp
      9wHIbeGEEOLondQBIIQQ4uhJAAghRIqSABBCiBQlASCEEClKAkAIIVKUBIAQQqQouRicEEIc
      peUra/jbypqxLuOoSQAIIcRRqtQ1c7lp9ViXcdROWAC49tSyq83PBQvnEexpZntrALtJS8mE
      SXQ11xOMJtGbbJQ7c9m0aSsqtZrJ02bQvHsXU6uqaNi1nUznFDJMuhNVshBCfKZKXTMTzRIA
      h6VoTRgYvBlFR1s3k6tmk6lXAQptPV7OmDePtWvXYgh1klNeTZE5xodbaiEeYMDfjTuiZYJJ
      RzKZ5OOrV+z/WAghTrST/UqpJ2wncElp6dDjvNIJ9DTW8+H7q+kNhFCpPvlX7++LkWEzoNJZ
      UOIB4tEQaz7YRNXUihNVqhBCpIQx2QegNZioqKjAkxanyxsjmRy8XZ6iKDgKM2hr9VBmi6C3
      5hHr7+L8+afy7nsfsGjRmajVwzNLo9GMxUcQQggS6pP7QMoTEwCJCHV7mjAajTQ0t5Fl0dHY
      1IxKY2TK5Az6TROpra1lUuV0Mu0W/Hvq2Nuu5tSqSbS36lBp05hdPZEub5B8u/mElCyEEJ93
      J/XloBOJhGwBCCHGTGTtg0TXPTjWZRy1k3v7RQghxFGTABBCiBQlASCEEClKAkAIIVKUBIAQ
      QqQoCQAhhEhREgBCCJGiJACEECJFSQAIIUSKkgAQQogUJQEghBApSgJACCFSlASAEEKkKLkn
      sBBCHKVwWx7+D6ePdRlHTbYAhBAiRUkACCFEipIAEEKIFCUBIIQQKUoCQAghUpQEgBBCpCgJ
      ACGESFESAEIIkaIkAIQQIkVJAAghRIqSS0EI8TkRGIjS2OEb6zLGnbKCDCxG/ViXMS5JAAjx
      OdHY4eO/Hnt7rMsYd36+9ByqJ+SOdRnjknQBCSFEipItACE+J8yqMJW65rEuY9wxq8JjXcK4
      JQEgxOeEU9vFnRlPjnUZ445Rew7gHOsyxiXpAhJCiBQlASCEEClKAkAIIVLUqAMg0FnHy6u3
      APD8008RSIy6JiGEECfAqANArdFSs3kjHe2t1De2oFYdi7KEEEIcb6M+CsiUXcbiM7t46613
      OffSyzFJp5IQQpwURr269jRsYpdHz1VXf4umDavwxI5FWUIIIY63UW8BpOeXUvPkgxjDbWxv
      7+fLumNRlhBCiONt1AGgNWdzx20/Zm9DK6eeMpNEArSaY1GaEEKI42mUXUAKzXt28renn+KR
      P97Ps6+sRjnEkJFQP1t37BocKxGldscO9jS2AOBzd1JbW0uPNwAoNNTvpHZnPUkFWlsGh/F0
      tuALSf+SEEIcK6MKgM6dH/DTex9h1qKLueCM07ny298k7RD//rds2UJnRwcA2zdvoqh8CrqB
      btq8YXbU7WXq1Kns3rmNXtcuIsY8JhZa2byjgdbWVpR4mJq97WSYpH9JCCGOlVF1AeVXnsHd
      t2Twzjsr2LZlG03JDJZ+66sYDhICc85YwKpVqwAIxhTSDRpMjlw2d3Sg1hgAUKlUdLT7KZlT
      iUEF0f61JKIh3nzzXeafdwEAiUSCZDI59Dgej4/mIwjxuZGMyRbywcRiMRKRyHGZ9sm+/hnl
      PgAVpZOr+M7kKgC6Wl0jnmlcgT5/H+m2Ijy+rqH3bDY9Pn8EizmGSmtBCyw4pZwt22qZN2sa
      Go0GjWYwYdRq9dBjIVJdXKfj5F4dHR86nQ6twXBcph3WntzX0zym1ecVHeKKe4kIdXuaiEQi
      NDS3MX36FLZt3QaoOeUUG63hTGpra8kpcFLszGXLlu30AtUzZtC8exdGWw5Fth46vUHy7eZj
      WbIQQqSsUQfAgLeV3z74BBkZNkDH1dddh/XTXfUaAxUVFVRUVAy9NPMU+9Bj54TJwwY/ZebM
      ocdTqwa3LorLp462VCGEEPsZdQAo8QhTTz+Hy86feyzqEUIcJSWhJtYnW8iflpaQyxMcyqgD
      IJlMsnLFcrZ98Dqg5+Y7/hObHKwjxAmXCBkJ7Jw41mWMO6aQEVklHdyoA0Cj1THv7MUsPvt0
      ACwn9z4RIYRIGaNeXSeSaoLuZv7xj2ZAy5XXXishIIQQJ4FRr6p1RivTp0/f90yNTi4HLYQQ
      J4VjunfkvTVrDnkpCCGEEOPLMQ2ARCBASBJACCFOCsc0AC765tVkSv+/EEKcFEa1uu7rauTP
      z7ww9LyuZhc/f/ARso/PWddCCCGOoVFtAaTnlfHjm29m0dwZaDQarvje98mSlb8QQpwURrUF
      EOhxcc9v/sjU087ikksvRYWKRBK0cuKdEEKMe6MKALVWz2lz5gJRNn30EaAlp9ApASCEECeB
      UQWAyZ7P5ZdffqxqEUIIcQKNKgDqtmzEmpNDX9zIlJLcY1WTEEKIE2BUARANdvG7p54hprNR
      XpTNIS8HLYQQYtwZVQBUz/8S/zVhCq6QiWkTC45VTUIIIU6AUZ+2Zc1x8Pb99/N8OEF6/kR+
      +L0rkcsBCSHE+Dfq43V6G7fhmPkFfvrTn+JQ/PTKfamFEOKkMOotgKzSabQ+/zt+vfFN9BkO
      sqT/XwghTgqjDgCVzszNP7nzWNQihBDiBBp1F1DI20lzpxeAtsYmYnI1UCGEOCmMKgCiQT/v
      v/MaL732Dh99tJEnly0jmDhWpQkhhDieRhUAipJEURswGdTEYnG+fPW1ZMjloIUQ4qQwqgAw
      WOxccOnXmVGaRSAQoLVxL2HZAhBCiJPCqPcBeBo28e72Fux2O3Z7Bmo5CUAIIU4Ko+6wMdrz
      GPCsxuvNBTQkZSewEEKcFEYdABqDjS+ev2jfM7VsAQghxEli1AEQDnhYs2YNAB5PP5Omn4pe
      7gcghBDj3qgDID2vjJtvvhmA559+ErWs/IUQ4qQw6gDo62rkL8tfBCAYUbFYuoCEEOKkcEy2
      AC46/yzWbd7JRQvPxTBOtwBWftTI25sax7qMceee750z1iUIIcbIqAMg1L2H59/Zwle/tJB/
      PLGMG//zdkzjMAS6fUFqGrvHugwhhBg3Rr2qVpQkKpUaY1ravuejrkkIIcQJMOotAHPeZC49
      y8/rb77DZd+6BrPmWJR17J1l2MpE2zNjXcY4dMVYFyCEGCOjCoBAey0vbfay5EvzmVR9Gk89
      +jAF370ByzgMgWyNn3R981iXIYQQ48bouoBUKvr8vn1PFILB4OgrEkIIcUKMagvAUlBJadpG
      7vnFryAZY/bZF43Lf/9CCCEONOp9ABdefhUXHotKhBBCnFDj8IBNIYQQJ8KY3L7F07yD7d2Q
      n66lZMIk6rdtQGu0Eo7D9EmFfPBRLVY95E+aQfOurcydN4/NH75HWfUcMkxy13khhDgWxiQA
      Ort9WC3ZZOU5SNNBMAbzZk1l7dq1NO7qZ+rsOWQbEqz9cCsqoMu1G1PeRDJMOhKJBMlkEoBE
      IkE8Hh/RPGMhNbE+83H8VCenSCQy1iWIYyQWi411CeNSLBZDdZyW85Guf8arMQmAqafNB0Wh
      fus6goVTUe3XExWPK2h1alABSoJ4NERDcxulVbMB0Gg0aDSDe5rVavXQ48MJe3MI7Jx4zD/L
      yS7TYBjrEsQxouhk6/hgdDodhuO0nIe1J/c9cMdkH0BXeyuhaByVSo1arUOJh4lEwiQUNSUT
      i9ldu5eu5joyCyeg1ZuYt2Ahe7etZyCWHItyhRDic2lM4is3v4Dmpkbszkqy7SYK586hsbmV
      OXNOR6dRMZlugjE1FXnZ9Nn0gIp5Z8ylPxzGqDONRclCCPG5MyYBoFJrKJ1QPvRcrdUzceKE
      oee2zFxs+x6n2wYfafQmMvQnskohhPh8k8NAhRAiRUkACCFEipIAEEKIFCUBIIQQKUoCQAgh
      UpQEgBBCpCgJACGESFESAEIIkaIkAIQQIkVJAAghRIqSABBCiBQlASCEEClKAkAIIVKUBIAQ
      QqQoCQAhhEhREgBCCJGiJACEECJFSQAIIUSKkgAQQogUJQEghBApSgJACCFSlASAEEKkKAkA
      IYRIURIAQgiRoiQAhBAiRUkACCFEipIAEEKIFCUBIIQQKUoCQAghUpQEgBBCpCgJACGESFES
      AEIIkaIkAIQQIkVpx7qAg/H1dhOKq3HkZdPn95NusxEdCBBTGTCn6ca6PDFCKz9qpNsXHOsy
      xpXcDDPnziob6zKEAMZhAIQ8rdS3hSlJj1HnUvC27WHuvLmsX7+ROQsWjXV54gjEal8g2rx7
      rMsYV2Ilk2DWj8e6DCGAcRgATXtamTxrLhmaJA1rN5CIhlj33mrKZ5yOTjqsTiqnNgaI1PrG
      uoxxxZAMjHUJQgwZd6tUvU5FPJYEJQEqDVq9idLiAjy9nrEuTQghPlfGXQCUTpnCrk0b2Lxx
      I6UVUwHIL5lM3Oui0yv9yUIIcayMuy4grdHGmWfMGXpeMG8eANNnnzFWJQkhxOfSuAuAw0km
      kyiKMvR4pFSZmegqKo5XWSetRCJx3KatKS5Glxj5d5QKNMXFx63NlbQ0WcYPQklLO25tfrKv
      V1TKx2vTk8T+AaAoCiqVaowrSh3JZBK1etz1Gn6uSZufWKnW3ifdFsD+X04ikUCj0YxhNakl
      mUxKe59g0uYnVqq1d+pEnRBCiGFOui4gIYQQx0bKbgH0+f1Dj/19/s8YcrhkLIyvP3TI931d
      LfRHweMZ2XkL7e0dI573SCRCPrp8B6+v391Of/SYzm7cCAf8RBKAksDr9Q+1f2tLCyRCtLa7
      DzFmlI5Dvpfa9v9dHGx5bm1p+Yyxk3g8B54EONLfRarav839/r5RT6+lpfUz30/ZAKitrT3o
      45Fq2r6J3oOsTH3drQSOYCXb0dF5xPP+LIkBH92+gYO+F+jtOKLaTiadjbV4BmDH5g3E1Pqh
      11tbWyExQGtH7yHGjNJ5yPdS2+F+F62tw1cumz/66HiWkxJGu14C6Kj7iI59J5x/+jv6tJNu
      J/CxkoyFqaurAyAah07XHjr8EWIBP1NOncmWD9aRW5CHc2IFa1a+QmnZRHzBKHMqctnZFEHV
      1Y5bbUZbUoK3y0UoHCahsWDdN/36ujpOn30quxua2b51C1+4+CK2fLSNdJPm/2/vPuPjOO8E
      z/86Nxrd6EbOOTQiCWaCClS0pB3L5/HYlqWxNTO2zPPOzN7teXbubmfXn7Nle+7kIE/wjnco
      B1mybCsHKlIkJZISwYBAEoFo5JyB7kY3utGx7gVIUBQTKDAAwv/7Ap/u6qqnnnpQVf+qp+p5
      HqwZJXhGO9EYLUy7PQAoET+1dW3kJWg5OernFnsi3V4LgfFOYq1WgooOo3+WzA3r8DjqCSRV
      0XFsN7kFxUy6vKwpyqC5a4w41QwkVXC8/giGGDOBqJYMq5aBaT+hyRFyM29QgV8HHU112BIz
      SLHGcLj2OFtPtyE5o9vRjC+iwT0zy5a1xRw57iA50UAY4w3K8crhaHewZX0Vh441kZwUi8uj
      IxoK0NHRQV//EJs3rmF4ZIS43gEK87IBNY72UyToFLwxSYQnBynYsJ3+nj4SEvQ01g+xboOd
      2sO1oCgogVnMSWnMzEa4eWMpBw6f5NabNt/ozb7hHPWHzim/9vr9JKakk5lTSFdrA0azjeT0
      LDyTwwvnoPD4KHN+BzGF2cw4J2hvb2fK5aU4w0bvlI+Ax83Gmi00Hjmyeu8A1Dojdrsdu92O
      Xgt9w5Osq6pgfVk2nQNOEhIsBIIhokqUOFsS9tIy1NGzl89pqRnkF9uxxupwu71otAZm3NPn
      rcOkCVO99XYiU/34VQYMsXE4J0eZDUQoK7WTYJ0PGSpNDKroHOOzEVJMGtr7prDnGIho4ikr
      qyA4e341lcWaSEmJHYMOOjv6qd5UTVF+DjB/Z6HWaJn1eugZnmTD2kpys9KvYYneeHkFhcw4
      L341PzA0jE6jJuz30dfjIL9iIyUlhav3KugKTfZ3kmlfh91egBIKo9YZKC4uJj7WgNGaQEZ6
      +umT/0epySsqoSgnmdm5i7yLHwqwpuZ21lRWoQ64aW9tpqC86ppvz3KkQsWZh7Lzb7ifW36J
      CQmEAkHC0TBzEQ2lpaUkxsWccw5KS00jr8iOzWIiLj6ZkpISVJEAHb0DWIw6YrRhxgf70Cbk
      r94A8HG5GUk0NrVQ39pPUaYNjd6ENuJj3OljxjVJ26kWtDGWhfmtCXF0tDTj9sww7fSACvjY
      4/Tg7DSHT3QS8TvRxmdiYj6AZKSno1NFOOVw4Jw52zmYzaDGE1KRnxxL2LghYAAAIABJREFU
      93QAvTYOTcTJqdYWdKY44mxG2ppO0T90frVRbk4qjXXH6eobPL2ONBQFMjLSyUiy0nCymf7h
      q1vdtNzoYuMpTjNzwtF7wd+zMjMJR6KkpKeTmZ1PZ1MdHR3dXLumcCubz+PC4XAw6Zq/S03I
      zGOgrZGOjm7CF5g/Gg7Q2XOp5wJn6HG7Rujo6CAYBvRGzIb5MFxdVcSHzUNkxcdcte1YSUpy
      0qhrPEnTiTpSsoo+9msEtUaPRhthYnyGGG2UtrY2plzOc85B5vhEuttOnvessjA3C18gjMmW
      QmJqJr6xTnkLaDFqaw9TU7P1RmdDiBsqGppjJqCgnhujZ1LD2tKPX+1fmqIoHD16jC1bLl61
      43eN0jbsY115wVKzKxZBAsAiuN0zWK1xNzobQtxYisLwYB8hlZHcrLQrXtzjmiKiicFmMV10
      nsGBATKzs5H2/deHBAAhhFil5BmAEEKsUhIAhBBilZIAIIQQq5QEACGEWKUkAAghxColAUAI
      IVYpCQBCCLFKSQAQQohVSgKAEEKsUhIAhBBilZIAIIQQq5QEACGEWKUkAAghxColAUAIIVYp
      CQBCCLFKSQAQQohVSgKAEEKsUhIAhBBilZIAIIQQq9SiA0Db8VoGJ2fPmXb0wD68ocUPKezq
      rWfni3vPm+4ddfDEH3YBMDfayr88/cZF05ga6qTxVO8503pONdA94rzkuruaj/HCG+eu2+Oc
      YMo9e5ElFk8JzrD3wNFzps1ODnDkRPtFl9m/f/950x7/2eOXXM/FyyZKb2//eVPHBrr43W9/
      w1PP/JHe4YlLpr0YP/3Rj5achhBi+Vh0ADBrQry6+8DZCUqYN/Z+QKxOteRMmNPsfPPB+xc1
      ry3eyksvvHzOtFdeeo34BOsll3v97f2MOeqYmosuTGtvOMDh5r4rz/DHqPQW3n/7VcIfmbZ/
      9y4UY9xFl9m//8B50779f3z7E+YgyFNP//GcKY769/j1i3u5/4sP8qXP3YPHdekAKYRYfbSL
      nTGrcivDz/4jcB8Ao+11pNo3oQJC/hl+97tnCEZV2NIL+fLn7kYFdDYf4819teh1Ojbddh+F
      MTA10stTT/6aWa+XrPIt3H/HFvCO8of3HDx4//Zz1qlEAjz3zO9w+kMYzSl89aEvoDUlE6dM
      4QpEsRnURANO3Cor8QY13ulhnnrmRTQ6HaqYeL7xFw+gAULeUSKmZO5dn8KeAw088JmNTPS3
      s+vdg3i1bQy1fMDNd32WNM0UrxxsRhX04XS62HLLdnrbmnG6nFRsvZvbN1eihOf4w9NPMxOM
      otLG8NWv/Tmxeg2b7CnUOcbYak8FFOocY/zDg2koYT9P/eZJ5qJqIlGFL33t6ySb9Rcs42f/
      8CwPPPgAAJ1NR3nzvSPExMQw5wnzV9/+FlrAOT7I7377G7yzXlIK1vGFe2/m+ad/jaOthZ07
      d5KcY+dP772VP7y8h//66A8xqAGMVJXHA9DVUseb+w6jVsG6m+5i27pSgtN9PP3WMQxhD95Z
      L0n5a/nifbcC0PDhu3zY2I4pxkj36PSidywhxAqgXIEn/+kHStuoV1EURXnmfzymOE5//tW/
      PKZ0jjgVRVGUPc//UtnX2K3MOQeV7/zgZ0o4ElUURVF8fr/i7KlT/uGxf1eCkaiiKFHlBz/4
      /nzCzh7lsX9/QVEURfGPtCj//NTriqIoyutP/0L5sLVfURRFaflgl/LMm7WKoijKsd3PKi+9
      d1xRFEVp3Pei8tL7JxRFUZQ//uIxxTHuVxRFUWY9HiVyOt8HX/ut8v6JfiUa8ijf/f6PF7an
      bs8LyusftCx8H2n5QPnRE88r0aiihNy9yt/+l0eVQDiiKNGw8t3v/UBRFEV5/pf/rBw+NaAo
      iqJM9LUoP/23pxRFURT3YJPy//2PZxRFURTPSJvyo3/7vaIoinLywKsLeY0E/crsXEhRFEX5
      3vcePa98f/zYfN5mJ3uV7/zgZ0rodNn98/ceVZyny+bvHv1nZS40v2Xf/+Hp8lP8yvcefexs
      QsEJ5f/5wb+el37QM6r89+/9WAlHFUWJRpRf/Pj7St+Ubz7d751N9wf/OL+tw45jyo9/8Xsl
      enr5nzz22HlpCiFWrit6CPyZu29n776DoITpnAxRkhoLQPfQOK6hLurr6zFZ4zl2tJ5TjUfZ
      evs9aNTzVUQxRiMAuYWF6NQqQIXBcOEr4TMa2vvQ+8apr6/Hr7fgaJivZ19/y52cOPQeAO8f
      buaOmioANmzdxjO/eJxX3niH2fDZ+q0Pj/eytTIbldZMgsbLqDd8odUBkJaejkoFWr2BlORU
      9Bo1qDSomK866hjzsqU0C4CknHLmpufr3uMyK/CPthEBDuzby2133wVAfulaGve+wDPPvUzf
      mBuT4fI3Xa2NR7nprj9Bqz6/ei0nrxCDdn7L9BcrP+XCz2W6mxqovvlONCpApeaOmzdytKF1
      Pt38s+nq9DoAag+8z2f/9AssvZJPCLEcXVEASC/bxER7PaPtdaSVbl6YrlKdPUXoE3L58n+4
      GaPRiN/vX1LmNCo1C6cytZmHHvz8/EdjIlbcuDzTeNXxWPXz6y+qvpnvfuf/Zm1JNjsf/yG9
      kz4Czj6GJmf47S93snPnTiIqhd3vHf7kmYpGiSx8UWBh21VsKkmloXOCxq4p1hclA2BOzuXR
      7z/K3Tet572Xn2RPneOyq7CYzXi8nk+eR30SEe8gwei5kw1Gwzn/k7nAHMYY40WTUalURC8S
      TIQQK9+VvQaq0lGcrOfffv82d91588LkdaW5jM2qWLduHSnxJiamXJRsuJmm/bsYnnTj9zjp
      6hu64szdtqWSlj4na6rXkZ2eyMTE5MJvt9dU8fhP/onqm+9cmHbk4D76R6bIzS8iLSmOYDjK
      B3vf5cFv/R07duxgx44d/Oe//7/orD8IQGZWFm0tLUSiEfz+wKLydMemEn77wh4i0QiH3nmO
      7PJtC79tv+sudj31r5jSStGcntbedIzjbT0kpWdjL8hk1he87DpKNtxK63svsOf9D3jnzV20
      dF6u7AwQduGaDeDz+QAVD37+Lh7/1yeY8QXwe5w0nWont2ornYffZmjChWd6jNfeP8EtG0ov
      muq22+7g+ad+hT8Ypr+jid5ReZAsxKeJ5rvf/e53r2SB9LQUpoMGbttYsTCtbO1GJnuaeGfP
      e8xG9GzdvAG93sjm9VXs2/0GJ9p6sJeWY4k1ojVayEiOX1g2Oztn/oPWSE7G/FWzWm8iKy2R
      7OJKNN5hXn9rNxMzAWq2bsGon69CSclIp6d7lM9+9m70mvmr8MQEG4cP7uNAbR0bb/ssFfmp
      jEx42LyhkoXaFLUOnRIkNbcAW3IWet8wb+05QGpuITZzDHqTlbTE028UqfXk5WQs5DUvL4+s
      ogq0s0PseutdrNlVfO7umoUqEr05EfdYP9s/8x+It8QAEJ+YRPuJY+x5bz/mrCruu2UdKmB6
      uIuDtceor6+nf8JLWVHefHnkZKPS6Lll+y34vW5yiiqY7Otgw623YvhI2ZyRk50DqKiwF/Da
      K6/gCmkozMkgOauAgnQLb73xBq2dAxTZy4i32di8cQ373nmDkx0DfOWrf0GixXhOmX80XXNC
      OrmJel7b9SbEplJdVkB2Ts6V7C5CiGVMpShyj7/chL2TNHRNsr6qBOdwN//65Cs8+t//y43O
      lhDiU0YCwDKkREIc/fAATY5uzPHJ3HvvvdjMF6+rF0KIT0ICgBBCrFLSF5AQQqxSEgCEEGKV
      kgAghBCrlAQAIYRYpSQACCHEKiUBQAghVikJAEIsaxHGRpc+mI8QFyIBQKwaP/nRTxY+eyf6
      zxux7el/+Qmjc58s7d0vPsv05bt5umJjjmMc7zvbB1PD/l009c2Py9B+4gj9E95zFwhO8+yL
      uwE4cWQ/E5fo+fYMJeznt7/8n+z893+na2hxYz786Cc/wTXcTX1rN021uxfytHfv+SP+ieVr
      0QPCCLESvPbs77n9zx6k/u0Xsd98L28/9xTeoJqHH3kEn2uUZ55+kpA+kS9uL2HcNctoTwvP
      7dpHcdWmhTTeeeWPdAyMc8f9D1Cel/qR1BVeeubXjHvCfOGBL7Pr2Wdx+3x86ctf5tU336J5
      zM1XvvIV9r78e1z+KA/95SP0NuyjtrkfjdHENx+6n1/96imCioYHHv467731MhZdFLUulri8
      asqssxwdjHLPtqqFNR441s5nH3x44btzcgRj8nyk8brGUVIrqD/w9sI6NhdaeOvN3ZhsscT5
      hkmt0LLz5z8lxhKPypzOl+/dzBO/+h0xJgOVW+9jc2Uue156ipyN93F7dS6KovDOK3+gc3CC
      6pvuIWamnboeN+7xMR75T/+Zuneeo2vCx5Q3RDQ0y5Qbmt96lWlDM5oHv8L4+CTR4Cy//tVv
      8Ifhz/78r3jv1adQ6WJxh/T8x7/6yjXfB8TiyR2A+FTJSzNR29jFia4h3KcO4lIlUJSq4+0D
      DcTYUvnzr/0lE30OwnNeRiad/OH5V3nkr/+W+27fOp/A3DjvHm5n65b1vPrSS+ek7eptZFSV
      wbe+9b+SYjWTnZlMdHaKAyf72bq2koe+voNQfz3DcyYqsuPYtfcw7x46zt/89Q58k8Mc3buL
      slv/lL/83E08t+s9uk8dp2Lbn3D33dvZv/tN3nvvIGVlJWdXGA3gx0CMhgtyTo7gnQufs44N
      W7ZQuXYr9995E5MjA8yFweVT+NpffJ3hrhYOvPkCW/7kq2wty2bi9HjYff3j2EtyAVD5x2js
      D/A3f/ufOPj2KzgnR1i//bOsLzDTPdhPQ6eHb33zGySadQRnZxibnmHLlq3c96cPUV6QwcDA
      IMc/eJucjffyyAOf4bmX32F40sNDX30Y7+T541aLG0sCgPhUqdx6Gy3vP0tMYj4mkwmn00lC
      lp3S3BRUp/tt/egANxajlolpDx7P6fEX1HpCfg9RlZ6bajadk7Y+1op7cpTg3Cxdxw/RF7Bx
      z62biCoKRoMKt3sWgzEGl9OJOTWfNUUZhAN+AoE5PL45LBYL4xMTjI2NERdnQWdOJDfNhsYY
      T6reR5tTISfesLC+3hMfkrf2pstu80fXgdZAwOsmGv3oYBBnx6zQ6w04nS5mZtwLv27atIZ3
      3nmPcNCP2x8l6HXhn3UTZn5gIJXq9B+VFv/sDHM+D/7A2VExDAYjM+6z67RYLIyPjzMxNkqs
      JW5hyAyVjCy07Fxxd9BCLGcqrRGfa5zNt95FbmExGu8Ijr4x1q5ZiyXWSHZONjDf7bbWaOHu
      22/i3Tdewa8yk5ORQlpuMWXZNo42NJFvL2NioIfB4RFGRkbQmNPItUZ4a99hNt16J4PNh1Fi
      k8jPL2DjhjXs3vUyJVvuIVnroqVrmKo1a6ksTOfNPR8y7XTzlYe/znBLLZ1ONV+6/040atVC
      d+gxURdBazGVhZkL2/LWnoPcc9ctaD524jzywfu0909QWVpEfHIG5blJC+u4/Y7PoA6M0dLv
      ojg/i+SMHIxayDm93du230Hjwd30DgySnL+Wgox40vLshCc7eOf9w+SVVlOaGcvruw/wpYce
      wmIyEp+cgcWoJT41j7wE2H+slfKyMgrystGbrKypqqT+4G4M8Zkk2WKp3rqd6a4GWobn+MoX
      7kP7ke1c6P5dLAvSGZwQ19CbLz1D/6iTvKpt3HvL+gvOM+ca5onfv8HXv/kIsbr5s70SnuXp
      597m4Yf+7Kqs44yhrmZe33uIQFjFNx75BrF6qQRYzVZ0AAiHw2i18hz7UsLh+bdApJwuLRAI
      YDAYLj+jkLJahJVy3K3o8L/UMYdXA7/fL+W0CFNTUzc6CyuGlNXlrZTjbkUHACGEEJ+cBAAh
      hFilJAAIIcQqJQFACCFWKQkAQlyBd157EZc/DPhpbek+7/eR4eElpO6lsd5x/uSgh66BsStK
      aXJ0iNZTp2ior8cfitLd3kprawvd/SMokQD1dfU0NDQwF44yMznKyZZWOnukpe610n2qCU9o
      /oXLpqYm/FMDdI/OANDS0rqoNGprD19wejjgY//u1xfSO6Pu8Ic4HA7GJl0M9Haxd+9eHA4H
      bu/ZDq+W9ztKQiwzcYlJtBxv5KaaMmZmZgn6PXT2DGIwWUiNN9HQ0EBpMEJhXjZEfIxMBklP
      tTAwOIZJBxPOGawJKSSatXT2DmG2JpCTmUpvp4NgdI4wRgDmvC66+kYwWeLIz4zHoNEw0N9D
      MBDCH4KK8hKG+rrx+gLkFtoZ6+9gNqhQWlaKRgXxyWkkpWUycOoYw9Mexqa8bKvZTG1tLYpz
      gKyy9SRpZqg72UFkbopt27bd4JL9dMvMTOJ4axdb1uTh8fiJBPXMBkwAzMycPXGPjwww5fKQ
      lJaNLuhixB0kHPBTUl4BgHdqBL8unmSLjr7+EXJzs3C7XeRmp+OZC51doRJC0cRit9vnvyfZ
      GBwdP/sdUKJhuQMQ4kqo1HrS4jSMuOZf8Ws83kxpWRl4RpnTWclIT58/+QNE/IyMu4AIg4Mj
      dHZ1kZiSTlpyPA2nlxsb6GFi4BRzhhRKSgoXrsj6uzrQxcWTl50BET+DI1MMDg6TV1iM1ufB
      5RljZEahtKyM8HQ3M6p4SvISOd7UBYBGo6HtZD2jgVgKUzWoTgcWFeD2RbDFatEY44gGZ/C4
      pmhvd3Dg/QN8pIcHcRUZ4tIJe8eY7G0jKb/0InOF6Oodo6ysnO6OU7jGB7Gk5pGbqKV3fL7f
      plhbPK0njjPa1UxAbwEgMSUDS4z+3KQUsMXF0NLcxMnWjgusK8JrL70kAUCIK1VYvpbuluPn
      TDvTnjL6sXaVUSWKEo2iKLBpyzaic24O1x0nODdLR7sDizWBcCiEVq9HURTOLF1UtYHUWDXv
      Hzx0NjG1Go1ahUo1f9iqTneuo0SjDA/20j0wTXZmEgBdzfWobdlsqi4HYlEUL6AQVRQyks0M
      js3gmxoixpaBxRpPUbGdlDgdvsv3Hi0+IbNeTdOQl6L0OPSxFua8Z678L9AWNzo/TaPRoP5I
      J0oqjRGzNsTxfjfF6daLriscjpBbVEJFRQUe5+QF5tDwuS98YWX3BRQMBqVF4mUEg/NdB0s5
      XZrH48FisSxq3jirDaNGhc4Sj70gk/aOLrTmJLKSbagiQcamPSTEW0FjxDM1jHNmFlt8AoFZ
      Fy6vn9TUDIrys5h2eVBp9eQVljDZ34Fzxkd8QiJxFhMz0xOMTEyTmJRCvC0OVDriLCascfMH
      vSUpDZXfyfDoKAmZJRiiXqIKWKzxxBj0OF1uoqEAU1NTGEwWEi1GevoGyC0qJSU9E9dID1Oz
      UFmaR1pyPI6OLgzWFDIS465qWa1WFzruEqwmPAE1GSkJaAwWIrNTjIyMklVQQqxRD2gwaCP0
      Dw6RmVdErFGP0WzFoAGN3oRJr8FqjSPFpqNvMkJhThoA0xOjjE66CQbmiIk1c/DA+xQW5tPp
      aGd8YoKS8koMuvkuZc/sPwAqlXpldwUhO+LlnenlUsrp0oaHh8nIyLjR2VgRpKwu75odd9EQ
      JxpPUFi1DrP+/H7ClfAs464oqUmLW688BBZCiJVCrWPtho0X/VmljSU16QqSuwpZEkIIsQJJ
      AFikOa8bh8NBV08fUUVhzuvGt8hXJgYGB65x7q6lCH19gwvfBvr6iF5i7osZGxnhYqU13N+z
      8L4ywPBAL84Z36LSDfg8dHR04PUFPkGurq2WlmauZwXrwMDguRMUhebmluuXgWvA5XItfHa7
      3cx53VfwplKEgcGltMtYOvfUOB2d3YSjZ3cE/+lziaOjG6/HNf/Z4aC7b+ii6URDc7g85x4T
      5/2/PwEJAIs02tNKXKadrNR4jhxrvKJlBweX/o+6cfzsff1tnP4IoPD6W/v5JC+KjH88AChR
      +voHAIWhsSnsdjupSTY6mhpQTAn0tDbgDV7+7Oma8VJQWEjdsSOfIFfXjme8h7A+flGjYI04
      6hnxXn6+yzlvP1OpiDdE6JucXXriN8hgR+vpfS9Kc3Mroz2tTC+6k835129vnBC+oIqC3AwO
      1Z7dPx1t7RTY7diLCzBbbNjt+Uw7vRTkZl4irXm9TQ1MzT9fvirnFXkGcAV6Ox1MMEticirO
      oU4CSVV4TzWiMZpJSLDR1t7H9ps3cvDAYTJTrfjCGmwJiaeXjnLk0CHMFgva2ETsBVk3dFuu
      RGlVBZ1t7ZRm6KmsLAaiHK2txWK1EVYbwDmKkpSKb2yYknXb6Dp5hNi4OFR6KzH48AQVhkcn
      OdMEpeNUM/6QQmFJKUT9+Lx+WpqbycovYtIbpCYxDmsohZ6hSfyj7cTFJ5CZm83+d/dTWJjK
      6FSURGMAU9Yasm1mWptOEmtNuJFFdJ627lGqt9Qw4qin0xuD4hoiISuPkYFB7rjjJo7W1mG1
      xaE2WPCPjTLndxBTmEl784mPlOsEU0oAmy2bqHccU1w8cSYtA9NRNpamcvhkL1Z9CI3RTGJy
      OgDRgIdDdS1YDJCYV0FWUSmHDp8kN+ni9cbLWWmFnWOtDsrSNNgyS8DTfs7vQe8UdS29xBkU
      LKmF9LQeJSM7n5HxabbfPD84zuGD77O2Zjtt9R9SVL0Ni+F6XffqiNGFaGpqISXt7ENztUZF
      t6MNjT6Wovzs85Zqrqsle80W6t56lsKbP89Y5wk2V+RyqjeAamyYSXUs2txc3FPjtLe34ZyZ
      Y8vGaqJBL7V1LdjiDBgsqYwPtOOfnaWwajN5GQkcOnSE6pI0Xj3UwwP3rKeudVTuAK5EXpGd
      woI8pqfGF6Z55yKUlZaSmpJGrDpAb3sryQXljLu8VFaUkZWeMj+jf5JRVxit3ojHPX2DtuCT
      UevMEPbSOeDCpAX8U0RNaZSVVzDncQJaCoqL2VhZQG9/N6MTfjRaA54ZJ2PTM1RVlJORdpEn
      U2oT22+/hYqKcpoaGxaumEPBELroDFFTGqWlZVhi9CSmpFFWUYot1kppYTZujw+DyUJpaQmz
      U5OELryGGyKswOnBvcjOKyInJZH0/GISzEa8UwOY0ooor6jE4xwnLTWNvCI7Nq3/Y+UaonRN
      DdXlGQSjJkpLS8nIKSLgHqG1uYXyqsqF/S8lcf71vsnBbsK6WIwWC9Nj46DSo1pWJXNltKZE
      CLrpGHBiz0087/eBrg6K1mygsnoD44OdGGLjKCkpOadh1Lrqco6faMUb5Dqe/OfZklIpLMhl
      Ymx0YdqadRux20sJTPYxPXf+MnZ7Ph2n2kjMr2Kqrx2VSrswqnNaagb5xXasZiPWxBRKSkpR
      QvO3RFMDXaQVraGishrn+CDBYIhb776PvIwkQI1aBV2DbiqzrbS2dVFgL5YAcCV6Ox0MDI2g
      NxgXpllitJxqa2N8yk11dRW7P2zGnhVPSryF5pZTDI6cDhYxiaTZ5gfZTk9fea/QpVr0OMOn
      XzuLSUTtG+VUawsGsw0I09XeTn1rP8UFhaQlzzdxT8/IIN5spKmllZHxs4OIFJdVsqaqgsnx
      UUL+GU42t9Da2kJ8choFmcnUn2imdWCGwvx8NP5x2tra8PiDF8xXp6OV7t4BdEbjstqZY7Uq
      vOELV2HFJGbjG+2ktaUJsy0Zc3wi3W0ncYVjPlauesxmAxCDQeOnra0Np8dPVVE6zUM+4mM0
      5+x/AImZeegifkBDRkYKSsgDWvN12+5rwWpQ4Qqr0J4+C/Z2OujqnX+ull1YTOfJepoa60jO
      Krrg8gZLCsGxFhKyL9YC99qIBHy0tLYyPDZJTEwMs9OjDE3O0NfVPv+/DGiIu0DzHJ0ljYGm
      w2QWljI31YU5NX/hN2tCHB0tzbi959eDJWYXMtp5kpamRmzJWRhizOjUZ+sg81Ni6Z6ao7Q4
      i/pTwySZNNIO4GoK+V0cbxtm07ryG52VBdejHUBT7WHya7aykk8zV/vd9tDsFA3t42xZV3bV
      0jzDNdrFsM9MeUHqZec9dfwoaSXriTddvdreldcOQOHwocNs3lZz3S4SLnTcHa87Qmn1Zoza
      RTwYuk7kGcBVND7lYUP18jn5Xy/55eXE3OhMLDO62EQyk3woCot6ELx4ETyhmEWd/FEUzIkZ
      V/XkvxJ5XFOUVq294XeI1Ru33OAcnG9F3wGMjY1hMpludDaWNZ9v/tUxKadLm5ycJCnpClrQ
      rGJSVpe3Uo67FX1pYDKZllUV0HIm5XRpy606cTmTslq85V5ON/quSAghxA0iAUAIIVapFV0F
      JIS4cfbW9zDuWlwr4zvW55MaH3uNcySulAQAIcQnUtP9KJHBY4uaN6bkNxC/6RrnSFwpqQIS
      QohVSu4AhBCfiOdUAYHWxfXCqrsnVk42y9B1/J8oTE+7SEiIJxL009nTD0BuQTF6VYju3iFy
      8/PRaVS4psbxhdVkpCYx43YTZ7US9HsJqQzEGnXXL8tCiIt65d476d5cvah5d6SlUHiN8yOu
      3HULAAf3vs2YT8UX77+XiT4HptQKsk/3jfPhwSNs3LyZI0eOsr40k/ahOXLjQjj6FZxDnWyt
      2crRo3VsueW265VdIcRljDvfZGC8eVHzBoL5gDQeW26uWwC45c772L9/PwC+kJrZ0W48YxrK
      7HmodTEYDEY0qii9nYOUbNiKTROlu/YYkaCPwx8coGjtZnRqiEQiRKPzQ5KEQiECgeU3EMhy
      I+V0eSqVSspokc6U1WZLiPzI4kaHiCO46sp3JRx3N6RarqB8DQDO/hZa+1yoONsbhV6nIhyK
      gjoCKg1avYm8jESmp6ZJs5nQaDRoNPO9Uup0OgyGC3SnJxYEg0Epp0VQFEXKaJHOlFVNvEJY
      u7jhuSwmLbpVVL4r5bi7Pm8BRQLzQ/6NjdPdN8TYUB+tp9poH3SSmWwj1qCitbUVQ6yNvNJS
      2hqO0VhXR559vmO1tNwSws5+Rp0rd2QjIYRYbq7PHYDGgN1ux263L0xK/cjoZ7Z1574ffPO2
      s73mpdfUALBm47Zrm0chhFhlpB2AEEKsUhIAhBBilZIAIIQQq5T1dlJwAAAIJUlEQVQEACGE
      WKWkdbYQ4hM5+eGdTPVULmrem5JSSIq7xhkSV0zuAIQQYpVacgDwjjp448BxAF5+5nd4F9cu
      RAghxA225ACg1mhpbqxjZHiQ9p4B1KqrkS0hhBDX2pIDgNGaRnVJOnv2vE/5pq0YpVJJCCFW
      hCWfrqf7mvHo0/jaw18l0N/OdOhqZEsIIcS1tuS3gBLz1zD0yuP8qG4PhsRsEqW7fiGEWBGW
      HABU2hj+97//b8y6p/jgYC3eEFgkCAghxLK3pAAQnHXz+uu7aO/up8fh4It//X8SKy0LhBBi
      RVjS6do72c8HDW3ce++95CVaqVpTIW8BCSHECrGkh8AJuVX89B+/S5pFw5h7hl/+08/wyENg
      IYRYEZb+DECjZc3GGtZsrAFF+cjYXkIIIZazq1JjHwmHiSrzp36tVp4ACyHESrDkADAz1ML3
      f/4cxfmZgJaHvv51zPIgWAghlr0ln6pNthTKy8rYuK4CUKOXlsBCCLEiLDkAeCcG6B4YxWrW
      A1oKyyokCAghxAqw5ACgN9swaFXExcUBGnkNVAghVoglBwBtTCL33XXz6W/qiwaAox/so3cq
      wJf/l/uYGuqhc8xDxOdlQ00NjuNH0cZYmAvDmuJMDtW3YtFDWvFa+tpOsLWmhsYjH5BftQWb
      SR4yCyHE1bDkABCYdXH48OHT33SUrFl3wSqgNRu34T9yBICO/lG21NTgG+vA0TfObAhqNpRT
      W1tLT5uH8o1bSDJEqD1yAhUw1t+BKbUQm0lHJBIhGo0CEAqFCAQCS92ETz0pp8tTqVRSRot0
      pqyU08fhYqzGfXAlbPOSA4A5KZsdO3YA8OoLz6O/SIpGo/HsF5UKFaDT6QmFgqg+0h4tHFbQ
      6tSgApQI4aCP7r4h8io2AqDRaNBoNADodDoMBsNSN+FTLRgMSjktgqIoUkaLdKasVOrFP+xb
      bfvgSjnulj4i2OQAO3fuZOfOndTWNRFcxIhgaTYTfWNOHF1DFOZkoITnCATmiChqcguz6Wjt
      YqzPQUJmAVq9iZpbttN18ij+0OKvOIQQQlzaku4AIuEQIY2ZL33pS8D86GAmzYVmDODo7CUt
      LY3uviEKStcwNtyPpWQNthgNW7ZuoadvkC1bNqPTqChhnNmQGntqEjNWPaCiZttWPHNzxOhM
      S8myEEKI05YUAPyuMV57fQ8APvcUb+4+xG9ffpFE/cdm1Biw2+3nTErNyFn4rNbqKSwsWPhu
      TUjBevpznHX+k0ZvwvbxdIUQQnxiS6oCMidl8cXP/wlaQuitaTz5+6fOP/kLIYRYlpYUAKb7
      mnj4kb9ljhgS4mI4sHcvvvDVypoQQohraUlVQHFpRfzspz/6yBSVtAIWQogVYkkBQGuIITc3
      92rlRQghxHW0pABQ+86rxOfkMx2ysG1N/tXKkxBCiOtgSQEgtyCX//nLJ/GorTQeTAJ0PLxj
      hwwKL4QQK8CSAkBGcTX/8N+yGJsJ4vPMUFhcctGWwEIIIZaXJT+y1aoVnvzlL2lpOckP/9/H
      kZeAhBBiZVhyAPBM9FOw4Q6++MUvU5igk0HhhRBihVhyAIjPX4fF4+Cxxx4jrngj8VL/L4QQ
      K8JVqLFX8/mHvrH0ZIQQQlxXS74DcA05aHQMAXDycC2zi+gNVAghxI23pDsA70Q/v37yaYb9
      MRzLSaKjY5Dvba65WnkTQghxDS0pAMQmZvEXDz/MoD+G8vw0NBoNVzBGhBBCiBtoSQFApVZj
      S0nnxSd+xduzAUDHf/z2t4mTB8FCCLHsLfkhsGekg/iSm9jxmU1XIz9CCCGukyUHALXBwp4X
      H6e7cR9yByCEECvHkgOAJbWQn//8X84mKF1BCCHEirDk07V3coCnnn8dAEd7Nz/8yU+lMzgh
      hFgBlhwAzEnZ7NixA4Dnf/UEYdWS8ySEEOI6uKp3AHHJOVgXkWLQO0Vrzxgxeg25BcXMuccZ
      Hp8mOT2H5PhYutvbmItoKC0tYXhwgKzsbKZHB1DHpWEzye2FEEJcDUt+a9+SkkN2oonp6Wms
      iUmLSnC0r5f0glLsdjtGnZoWRxfl5eV0nDrJVH8bgZhUCjMtNLZ0Mzg4iBKeo7lrWE7+Qghx
      FS35DsDV24jLVMR3vvNX/Pbn/4Rrew22y6SqtyQwPdjBgMdLZXUVao0BAJVKxciwm9wtZRhU
      EPTUEgn6ePfd97nprs8AEIlEiEajAIRCIQKBwFI34VNPyunyVCqVlNEinSkr5fRxuBircR9c
      Cdu85AAQm5hJd+MTvKF20j0dIlZz+WVSs/NIU6nwjrTT3u8G5ewoAlarHpc7gDk2hEprRgvc
      Ul3E8ZOt1GyoRKPRoNHMr0Sn02EwGJa6CZ9qwWBQymkRFEWRMlqkM2WluoJm/6ttH1wpx93S
      AkA0xOSshv/69/8bHT1DlFauRbeIh8Djw/1Mzfjx+3xUVRczipPW1laS03PIzknh+PEmpoCq
      tWvp62gjxppMlnWCUecsafGxS8qyEEKIeUsKANM9JzjUp+bP7lhPZUUcL/76CeK/9k0SLlNV
      n5qZS2rm2e85BSXn/F69fv3C5/KKCgCyi8qXklUhhBAfs6QAYE7Opu+1P3LAEISAmz4vmKUh
      mBBCrAhLegtIH5fK3+z4Swj5URlt/M1ffwO9tAMQQogVYcnX64ZYK7fedvvVyIsQQlzSmHOW
      fQ09i5o3xRbLnRvyr3GOVjapsBFCrBjxUx3c+ebfLWpeXeFa2PD4Nc7RyiYBQAixYqhS1Ggf
      0C9qXo1FTm+XI+N3CSHEKiUBQAghVqn/HwyDgfuCIkknAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='VecVsGen' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='VechileVsAtmoVsLightCond' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='people' width='384'>
      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
      AH74wx+yevVq/ud//ue0K+3a2lq+/OUvEx8fT3JyMlVVVcTExPCFL3yBhQsXomka69ev5+WX
      X6a5uRmLxcLixYu5/fbbsVqttLW18fvf/56KigqCwSC5ubnccsstFBUV0dPTw+23347dbicv
      L4/KykpsNhu33XYbK1euHLUvqqqyfv16/va3v9Hc3IzNZmPp0qXcdttto9bpcLlc3H///QwO
      DvLUU0/h8Xi4//77iY6OpqysjPXr16MoCrfffjsrV67kpz/9KZs3b+bzn/88n/jEJxgcHOTO
      O+/EarWOXGj87ne/G9mPnJwcbrnlFoqLi0fF+a1vfYt9+/bxpS99iWXLltHS0sK//uu/Eh8f
      z89//nMGBgZGjkkgEGDy5MnccccdzJw5k1AoxF/+8hdee+01vF4v6enp5/xNPPnkk6xZs4b7
      7ruPa665hm9/+9vs2bOHa6+9ln379tHa2sq8efP46le/it1uH/X63/72t7z11lu43W70ej2F
      hYV8/vOfJz8/n1AoxMaNG3n11Vepr6/HaDRSVFTE/fffj6Zp0ggsIkNRFGbNmoXVaqW7u5v2
      9vZR2zz99NNs2rSJK6+8knvuuYe5c+dy8uRJpk2bxvTp0wG44ooruPfee0lJSRl5XXl5OXq9
      nvz8/LNWOQwNDZGcnMz111+P1+vlqaeeore395wx6/V6brjhBvR6PVarlXvvvZfrr79+5PlT
      S2vs37+fRx99FLfbzR133MH8+fPZtGkTjz766Gkrb+3fvx+Px0NMTAzNzc28+OKLZ3zfp59+
      mtWrV1NYWMhdd90FwFNPPcWOHTsoKysjKysLgI997GN8/OMfP+sqXj6fj3nz5nH99dczMDDA
      448/jtvtZuvWrTz++ONER0dz9913U1BQwJo1a0ZOYD/60Y94++23WbJkCbfeeistLS38+Mc/
      pq6u7rSyp06dyqpVq/B6vfz+978/493Wli1bePzxx4mNjeWee+4hNzeX119/ndWrV5/z2L9X
      T08PlZWVJCcn4/F4+OMf/4jX62Xx4sUoisKOHTvQNI19+/bh9XopLi7GbDbzox/9iJ07d7Jk
      yRJuueUW2tvb+fGPf8zJkydHvcfSpUsB2LlzJwB79+7F7/ezYMECAL773e+yd+9ebrrpJm6+
      +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
      AIiIWOo3cnkoNpUZppgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='safe_equ' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='time_series_ym' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdZXwc173w8d/MMu9qxQyWSWaOHXRiBxpoqA2nobZJ6abtLd6nbXpLadrc
      tikEG2w4DYOTOGDHsR0zyLItyWKWVsu8M88LGWSBYzeyZUfn+/nojXZ29szumfM/NOdIqqqq
      CIIgCGOOPNoJEARBEEaHCACCIAhjlAgAgiAIY5QIAIIgCGOUCACCIAhjlAgAgiAIY5QIAIIg
      CGOUCACCIAhjlAgAgiAIY5QIAIIgCGOUCACCIAhjlAgAgiAIY5QIAIIgCGOUCACCIAhjlAgA
      giAIY5QIAIIgCGOUCACCIAhjlAgAgiAIY5QIAIIgCGOUCACCIAhjlAgAgiAIY5QIAIIgCGOU
      CACCIAhjlAgAgiAIY5QIAIIgCGOUCACCIAhjlAgAgiAIY5QIAIIgCGOUCACCIAhjlAgAgiAI
      Y5QIAIIgCGOUCACCIAhjlAgAgiAIY5QIAIIgCGOUCACCIAhjlAgAgiAIY5QIAIIgCGOUCACC
      IAhjlAgAgiAIY5QIAIIgCGOUCACCIAhjlAgAgiAIY5QIAIIgCGOUCACCIAhjlAgAgvA5o6oK
      yXicRFIZ7aQIxzntaCdA+HyK9rayactWTKUnMaPQMdrJOUFEadi0maoO7+CXnIUsnjMRvfbT
      62xhTyX/c80N9C79DY/cvvQopPP45GvawpodbagqZE6Yz6wS14AjUjRs+Yiqtgiy3sTEGSdR
      mKYflbQeL0QAEI4KX+Nm7vvDz8m+7lERAA6bnzVP3sdd728b/NLUy3h3WvlhBYCxqu2T5/j5
      nW+RVGDmZf/L//3oXKz9D0i28vQffstzVd3oXXn8152PiAAw2gkQBOFg1rIF/Oa3d3JSiXm0
      k3LCMbhzmZNrpWH7u+xsO4s5Obq9r6gEq9axLqhl2tTJNLb7RjWdxwsRAIRjJhX2sGr5G2zY
      XktPKIHOmMb88y5l8cwi9FLfMdXvP8Ija1Wuu+EClOpVvLViE70JE9OXXsbFJ5WNqUErSZKG
      /L+aitO8dQUvLFtFVxiKJi3koosWk2XWHHyckqJp63JefmsVnWEd4+afzRXnzuLzXOfV2bI5
      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
      EwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='year_wise' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
